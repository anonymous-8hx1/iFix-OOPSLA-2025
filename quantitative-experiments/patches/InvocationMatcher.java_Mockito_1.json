{
    "src": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
    "patches": [
        {
            "patch": "throw new UnsupportedOperationException( ) ;",
            "score": 99.90167791193181,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.87906901041667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ toString( ) ) ;",
            "score": 99.739013671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers + 'unchecked') ;",
            "score": 99.7480239868164,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked') ;",
            "score": 99.8510498046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( 'unchecked') ) ;",
            "score": 99.77432250976562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.73876953125,
            "correctness": "wrong",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.72245025634766,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, 'unchecked') ;",
            "score": 99.68865203857422,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value + 'unchecked') ;",
            "score": 99.67998504638672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg -1) ;",
            "score": 99.79495849609376,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getName( ) ) ;",
            "score": 99.75453491210938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.size( ) ) ;",
            "score": 99.73841010199652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.68838161892361,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length -1) ;",
            "score": 99.67850748697917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.67052205403645,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.65126037597656,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ toString( ) ) ;",
            "score": 99.63677978515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.77802477384868,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new UnsupportedOperationException( ) ) ;",
            "score": 99.7397228422619,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.71795333059211,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ hashCode( ) ) ;",
            "score": 99.68594699435764,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + hash CaMeL Code ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked') ) ;",
            "score": 99.66150665283203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value.toString( ) ) ;",
            "score": 99.66129150390626,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + 'unchecked') ;",
            "score": 99.65083312988281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+0) ;",
            "score": 99.61717987060547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.73902045355902,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ hashCode( ) ) ;",
            "score": 99.66413709852431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + hash CaMeL Code ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value + 'unchecked') ;",
            "score": 99.66071319580078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers.size( ) ) ;",
            "score": 99.64243570963542,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value( ) ) ;",
            "score": 99.61293029785156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.739013671875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; }",
            "score": 99.63170369466145,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list.size( ) ) ;",
            "score": 99.61234537760417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null + null ) ;",
            "score": 99.58450317382812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.72679379111842,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getType( ) ) ;",
            "score": 99.70865478515626,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value.toString( ) ) ;",
            "score": 99.633447265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new String( 'unchecked') ) ;",
            "score": 99.61520046657986,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new String ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+1) ;",
            "score": 99.59368896484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false ) ;",
            "score": 99.57437569754464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getMethod( ) ) ;",
            "score": 99.70567626953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.69954427083333,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new RuntimeException( 'unchecked') ) ;",
            "score": 99.66815185546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Runtime CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers ) ;",
            "score": 99.61626325334821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked') ;",
            "score": 99.61477426382211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , null ) ;",
            "score": 99.60213470458984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [1] ) ;",
            "score": 99.58560180664062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false + false ) ;",
            "score": 99.56963348388672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg , 'unchecked') ;",
            "score": 99.69900512695312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.63877240349265,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked';",
            "score": 99.61358087713069,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?0:0) ;",
            "score": 99.60722351074219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 0 : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value( ) + 'unchecked') ;",
            "score": 99.60211181640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value [0] ) ;",
            "score": 99.58366842830883,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ toString( ) ) ;",
            "score": 99.5663070678711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.69780883789062,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked': 'unchecked') ;",
            "score": 99.66787719726562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.60663604736328,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != null ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.60221782483552,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( matchers == null ) {",
            "score": 99.59764340049342,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( matchers == null ) {",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } throw new RuntimeException( ) ;",
            "score": 99.58228759765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } throw new Runtime CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ;",
            "score": 99.56524103338069,
            "correctness": "plausible",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "25/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg + 'unchecked') ;",
            "score": 99.69556274414063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg , this ) ;",
            "score": 99.66663818359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', toString( ) ) ;",
            "score": 99.60153537326389,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getName( ) ) ;",
            "score": 99.59589979383681,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.58797200520833,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { 'unchecked'} ) ;",
            "score": 99.57086791992188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { $STRING$ } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null +1) ;",
            "score": 99.56407928466797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) , 'unchecked') ;",
            "score": 99.65136108398437,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length -1) ;",
            "score": 99.60127258300781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers + 'unchecked') ;",
            "score": 99.59473419189453,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.58539496527777,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.58228302001953,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+1) ;",
            "score": 99.57405853271484,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ null ) ;",
            "score": 99.56140899658203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.69408501519098,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0, 'unchecked') ;",
            "score": 99.60063934326172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.size( ) + ) ;",
            "score": 99.5910708778783,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . size ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ toString( ) ) ;",
            "score": 99.58025444878473,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.57462310791016,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null +1) ;",
            "score": 99.55998992919922,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked''unchecked') ;",
            "score": 99.68538411458333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg -0) ;",
            "score": 99.64873657226562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getName( ) + ) ;",
            "score": 99.64043898809524,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Name ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked') ;",
            "score": 99.59206717354911,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( matchers != null ) {",
            "score": 99.58494166324013,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( matchers != null ) {",
            "failed_triggering": "26/26",
            "failed_non_triggering": "20"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ) ; } ;",
            "score": 99.57442220052083,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value , null ) ;",
            "score": 99.57120513916016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } finally { ) ; }",
            "score": 99.56431178042763,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } finally { ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1, null ) ;",
            "score": 99.56087493896484,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null ) ;",
            "score": 99.55780901227679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', invocation.getName( ) ) ;",
            "score": 99.68524169921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getType( ) , 'unchecked') ;",
            "score": 99.64002685546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Type ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { } ) ;",
            "score": 99.59141138980263,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ invocation.getName( ) ) ;",
            "score": 99.58161078559027,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value ) ;",
            "score": 99.57082693917411,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked') ; } ;",
            "score": 99.56415116159539,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ super.getMethod( ) ) ;",
            "score": 99.56156616210937,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + super . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , false ) ;",
            "score": 99.55963897705078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null + false ) ;",
            "score": 99.54826354980469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + + 'unchecked') ;",
            "score": 99.684326171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getMethod( ) , 'unchecked') ;",
            "score": 99.63865356445312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Method ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0, 'unchecked') ;",
            "score": 99.59090423583984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.size( ) ) ; }",
            "score": 99.58110608552632,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . size ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value( 'unchecked') ) ;",
            "score": 99.56817267922794,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.class ) ;",
            "score": 99.55921766493056,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ hashCode( ) ) ;",
            "score": 99.55316840277777,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + hash CaMeL Code ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Throwable( ) ) ;",
            "score": 99.54770795036765,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Throwable ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ indexOfVararg + 'unchecked') ;",
            "score": 99.67958286830357,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg , true ) ;",
            "score": 99.6294677734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( Object [ ] )0) ;",
            "score": 99.58919484991776,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( Object [ ] ) 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers -1) ;",
            "score": 99.57908630371094,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Exception( 'unchecked') ) ;",
            "score": 99.55924479166667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( Object [ ] ) null ) ;",
            "score": 99.54994032118056,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( Object [ ] ) null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this + 'unchecked') ;",
            "score": 99.54374694824219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length ==0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.67766462053571,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg , null ) ;",
            "score": 99.6267578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', invocation.getClass( ) ) ;",
            "score": 99.62540283203126,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , invocation . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers <0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.58754368832237,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new RuntimeException( 'unchecked') ) ;",
            "score": 99.573486328125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Runtime CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked') ;",
            "score": 99.56573486328125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.5484619140625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1) ;",
            "score": 99.54257638113839,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ false ) ;",
            "score": 99.53938293457031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( ) , 'unchecked') ;",
            "score": 99.62481398809524,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1) ;",
            "score": 99.58629499162946,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getMessage( ) ) ;",
            "score": 99.56823052300348,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0!=0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.56082492404514,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ break.getMessage( ) ) ;",
            "score": 99.55032348632812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + break . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( ) ; } throw new RuntimeException( 'unchecked') ;",
            "score": 99.54654733758224,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( ) ; } throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value [1] ) ;",
            "score": 99.5400031594669,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value [ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false + false ) ;",
            "score": 99.5319595336914,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg +1) ;",
            "score": 99.62374877929688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg -2) ;",
            "score": 99.62239379882813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg -3047126096857467610) ;",
            "score": 99.62239379882813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg -2007) ;",
            "score": 99.62239379882813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', this , 'unchecked') ;",
            "score": 99.58543395996094,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , this , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( >=0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.55434841579861,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( >= 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ) ;",
            "score": 99.55003004807692,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ toString( ) + 'unchecked') ;",
            "score": 99.53675672743056,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + to CaMeL String ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + + ) ;",
            "score": 99.5300521850586,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.67149522569444,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( this ) ) ;",
            "score": 99.620947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( this ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { invocation ) ;",
            "score": 99.5719058388158,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers + 'unchecked'+ matchers ) ;",
            "score": 99.56557888454861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list.length -1) ;",
            "score": 99.54965549045139,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list . length - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( ) ; } throw new UnsupportedOperationException( ) ;",
            "score": 99.5457275390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( ) ; } throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1, 'unchecked') ;",
            "score": 99.53581237792969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Throwable( ) ) ;",
            "score": 99.52802590762867,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Throwable ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.62054734002976,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getClass( ) ) ;",
            "score": 99.6141357421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2, 'unchecked') ;",
            "score": 99.57050323486328,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-3047126096857467610, 'unchecked') ;",
            "score": 99.57050323486328,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2007, 'unchecked') ;",
            "score": 99.57050323486328,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers + 'unchecked') ; }",
            "score": 99.56521426930146,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , this ) ;",
            "score": 99.54692840576172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked') ;",
            "score": 99.5443603515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ) ; } return ;",
            "score": 99.53736636513158,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null + null ) ;",
            "score": 99.52505493164062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.size( ) -1) ;",
            "score": 99.66734008789062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . size ( ) - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg , false ) ;",
            "score": 99.62051391601562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) + 'unchecked') ;",
            "score": 99.60733642578126,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( int )0) ;",
            "score": 99.56940056295956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( int ) 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers ? 'unchecked': 'unchecked') ;",
            "score": 99.56401231553819,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { name } ) ;",
            "score": 99.54202270507812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { name } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else { throw new UnsupportedOperationException( ) ; }",
            "score": 99.53733197380515,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2+1) ;",
            "score": 99.53463745117188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610+1) ;",
            "score": 99.53463745117188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007+1) ;",
            "score": 99.53463745117188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Exception( ) ) ;",
            "score": 99.52280560661765,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( ) ) ;",
            "score": 99.61709112870066,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Throwable( 'unchecked') ) ;",
            "score": 99.56843397352431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Throwable ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start + 'unchecked') ;",
            "score": 99.561767578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.54173448350694,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( Object [ ] ) null ) ;",
            "score": 99.53885048314145,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( Object [ ] ) null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.53449249267578,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1) ;",
            "score": 99.53327287946429,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.52201843261719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.66620551215277,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + false ) ;",
            "score": 99.6131591796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ captureFrom( matchers ) ) ;",
            "score": 99.56170333059211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + capture CaMeL From ( matchers ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name.toString( ) ) ;",
            "score": 99.5383056640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0+0) ;",
            "score": 99.53689575195312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null +2) ;",
            "score": 99.51760864257812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null +3047126096857467610) ;",
            "score": 99.51760864257812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null +2007) ;",
            "score": 99.51760864257812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getId( ) ) ;",
            "score": 99.61235961914062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Id ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked', 'unchecked') ;",
            "score": 99.56209564208984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length >1) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.55814401726974,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length > 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getMethodName( ) ) ;",
            "score": 99.53790283203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Method CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( throw != null ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.5330810546875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( throw != null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalArgumentException( 'unchecked') ; }",
            "score": 99.53152126736111,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1, false ) ;",
            "score": 99.52909088134766,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + + + ) ;",
            "score": 99.51476332720588,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + + + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length ==1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.66214425223214,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length == 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getType( ) + ) ;",
            "score": 99.611083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Type ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers >0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.6016845703125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1,0) ;",
            "score": 99.56037902832031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != null ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.55730879934211,
            "correctness": "wrong",
            "tokenized_patch": "if ( matchers != null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String(0) ) ;",
            "score": 99.53289116753473,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String ( 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; } finally { ; }",
            "score": 99.5281918174342,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } finally { ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [1] ) ;",
            "score": 99.52728271484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + + ) ;",
            "score": 99.5091552734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int length = matchers.size( ) ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.61052594866071,
            "correctness": "uncompilable",
            "tokenized_patch": "int length = matchers . size ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?0:0, 'unchecked') ;",
            "score": 99.56017388237848,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 0 : 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.55464895148026,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getClassName( ) + 'unchecked') ;",
            "score": 99.53306884765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Class CaMeL Name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+0+0) ;",
            "score": 99.5308837890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + 0 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { ) ;",
            "score": 99.52787950303819,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false + null ) ;",
            "score": 99.50863647460938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked'+ ) ;",
            "score": 99.6592029389881,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int length = matchers.size( ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.61044921875,
            "correctness": "wrong",
            "tokenized_patch": "int length = matchers . size ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?1:0) ;",
            "score": 99.5598373413086,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 1 : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length >0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.55340254934211,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( ) + 'unchecked') ;",
            "score": 99.53173828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ,0) ;",
            "score": 99.52474975585938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null +0) ;",
            "score": 99.50196838378906,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.55186703330592,
            "correctness": "plausible",
            "tokenized_patch": "if ( matchers == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start( 'unchecked') ) ;",
            "score": 99.52888039981617,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value , false ) ;",
            "score": 99.52283477783203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { this",
            "score": 99.5010627297794,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { this",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg -1) ;",
            "score": 99.65575561523437,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( true ) ) ;",
            "score": 99.60298461914063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( true ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&&0< matchers.size( ) ) ;",
            "score": 99.59492797851563,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && 0 < matchers . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { ) ;",
            "score": 99.55825466579861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.5504150390625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+( name + 'unchecked') ) ;",
            "score": 99.53007676866319,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( name + $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name [0] ) ;",
            "score": 99.52692727481617,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name( ) ) ;",
            "score": 99.5147933959961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+1) ;",
            "score": 99.4996566772461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.65538940429687,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', getName( ) ) ;",
            "score": 99.59423149956598,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation instanceof CapturesArguments ) ;",
            "score": 99.54975043402777,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation instanceof Captures CaMeL Arguments ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Object [ ] { 'unchecked'} ) ;",
            "score": 99.528564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Object [ ] { $STRING$ } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ trim( ) + 'unchecked') ;",
            "score": 99.52595350477431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + trim ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.51436360677083,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2) ;",
            "score": 99.49921526227679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610) ;",
            "score": 99.49921526227679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007) ;",
            "score": 99.49921526227679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getClass( ) , 'unchecked') ;",
            "score": 99.655322265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Class ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( false ) ) ;",
            "score": 99.60015258789062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( false ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&&0< matchers.length ) ;",
            "score": 99.55657280815973,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && 0 < matchers . length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers , new Throwable( ) ) ;",
            "score": 99.54909796463816,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers , new Throwable ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ break.getMethod( ) ) ;",
            "score": 99.52852783203124,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + break . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , 'unchecked') ;",
            "score": 99.52283477783203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalArgumentException( ) ; }",
            "score": 99.51416733685662,
            "correctness": "plausible",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }",
            "failed_triggering": "25/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + + + ) ;",
            "score": 99.49648150275735,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + + + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) : new UnsupportedOperationException( ) ;",
            "score": 99.59878540039062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) : new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, 'unchecked', 'unchecked') ;",
            "score": 99.55537923177083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ matchers.size( ) ) ;",
            "score": 99.54751105057566,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + matchers . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ toString( ) + 'unchecked') ;",
            "score": 99.5278076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + to CaMeL String ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name( ) + 'unchecked') ;",
            "score": 99.52231174045139,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getMethod( ) ) ;",
            "score": 99.51373969184027,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( int ) indexOfVararg ) ;",
            "score": 99.59722609747024,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( int ) index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length >0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.58803196957237,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', null , 'unchecked') ;",
            "score": 99.55162048339844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , null , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==1) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.5462646484375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( ) ;",
            "score": 99.52767240084134,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>=0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.52147759331598,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 >= 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( new UnsupportedOperationException( 'unchecked') ) ;",
            "score": 99.51640489366319,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( Object [ ] ) null ) ;",
            "score": 99.50590245863971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( Object [ ] ) null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ trim( ) ) ;",
            "score": 99.49317932128906,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + trim ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ,0) ;",
            "score": 99.64639892578126,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + true ) ;",
            "score": 99.59486083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexOfVararg >=0) ;",
            "score": 99.587939453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL Of CaMeL Vararg >= 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, null ) ;",
            "score": 99.55133056640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.toString( ) + 'unchecked') ;",
            "score": 99.52681884765624,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . to CaMeL String ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name ) ;",
            "score": 99.52029854910714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+0) ;",
            "score": 99.51579284667969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( ) ; } throw new RuntimeException( ) ;",
            "score": 99.50545925564236,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( ) ; } throw new Runtime CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false ) ;",
            "score": 99.48932756696429,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getClass( ) , 'unchecked') ;",
            "score": 99.64596121651786,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Class ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexOfVararg <0) ;",
            "score": 99.58777465820313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL Of CaMeL Vararg < 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, Object.class ) ;",
            "score": 99.54963514539931,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) > matchers.size( ) ) {",
            "score": 99.54298400878906,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( name + 'unchecked') ) ;",
            "score": 99.52516682942708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( name + $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , true ) ;",
            "score": 99.51899719238281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null +0) ;",
            "score": 99.48847961425781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getName( ) + 'unchecked') ;",
            "score": 99.58534545898438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, false ) ;",
            "score": 99.5436019897461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked'+ matchers ) ;",
            "score": 99.54182434082031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ value + 'unchecked') ;",
            "score": 99.52362823486328,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1, 'unchecked') ;",
            "score": 99.51374162946429,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ trim( ) ) ;",
            "score": 99.48542785644531,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + trim ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', invocation.getType( ) ) ;",
            "score": 99.64237060546876,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', this.getName( ) ) ;",
            "score": 99.590673828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , this . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'||0< matchers.size( ) ) ;",
            "score": 99.58341674804687,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || 0 < matchers . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.54158742804276,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.size( ) -1) ;",
            "score": 99.54036458333333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . size ( ) - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String( name ) ) ;",
            "score": 99.52252875434027,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String ( name ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value !=0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.51788330078125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2+1) ;",
            "score": 99.51260375976562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610+1) ;",
            "score": 99.51260375976562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007+1) ;",
            "score": 99.51260375976562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ) ; } }",
            "score": 99.49947781032986,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null + false ) ;",
            "score": 99.48512268066406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ) , 'unchecked') ;",
            "score": 99.64229125976563,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation instanceof UnsupportedOperationException ) ;",
            "score": 99.58694458007812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation instanceof Unsupported CaMeL Operation CaMeL Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ captureFrom( invocation ) ) ;",
            "score": 99.54102847450658,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + capture CaMeL From ( invocation ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length -2) ;",
            "score": 99.53859456380208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length -3047126096857467610) ;",
            "score": 99.53859456380208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length -2007) ;",
            "score": 99.53859456380208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { 'unchecked'} ) ;",
            "score": 99.52230834960938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { $STRING$ } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new String( 'unchecked') ) ;",
            "score": 99.48336029052734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new String ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg + 'unchecked') ;",
            "score": 99.63850233289931,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ invocation.getName( ) ) ;",
            "score": 99.5869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers >=0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.58199270148026,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers >= 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { for( int",
            "score": 99.53937126608456,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != null ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.53789605034723,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ value.toString( ) ) ;",
            "score": 99.521728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.51694742838542,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getClass( ) ) ;",
            "score": 99.49636501736111,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null +2) ;",
            "score": 99.48277282714844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null +3047126096857467610) ;",
            "score": 99.48277282714844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null +2007) ;",
            "score": 99.48277282714844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + ) ;",
            "score": 99.63468852796052,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers.length -1) ;",
            "score": 99.53829616970486,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers . length - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ break.getMessage( ) ) ;",
            "score": 99.52130126953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + break . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.51675754123264,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1, 'unchecked') ;",
            "score": 99.50448608398438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name( ) + 'unchecked') ;",
            "score": 99.49382188585069,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( = ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.48107147216797,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( = ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [ indexOfVararg ++ ] ) ;",
            "score": 99.58476329985119,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ index CaMeL Of CaMeL Vararg ++ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.58063707853618,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.size( ) 'unchecked') ;",
            "score": 99.53825298108552,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . size ( ) $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, true ) ;",
            "score": 99.53639221191406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked'+ value + 'unchecked') ;",
            "score": 99.5211181640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length !=0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.51674397786458,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [0] ) ;",
            "score": 99.50303649902344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ hashCode( ) + 'unchecked') ;",
            "score": 99.49311659071181,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + hash CaMeL Code ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + + ) ;",
            "score": 99.4795913696289,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length >1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.53477076480263,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length > 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name.toString( ) ) ;",
            "score": 99.52003784179688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+(0+0) ) ;",
            "score": 99.51553005642361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( 0 + 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.49202234604779,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ l + 'unchecked') ;",
            "score": 99.47784423828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + l + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', invocation.getMethod( ) ) ;",
            "score": 99.58116455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.57730905633224,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Exception( 'unchecked') ) ;",
            "score": 99.53215874565973,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ super.getMethod( ) ) ;",
            "score": 99.51974487304688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + super . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Integer(0) ) ;",
            "score": 99.51483832465277,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Integer ( 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+0) ;",
            "score": 99.50013732910156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getName( ) , 'unchecked') ;",
            "score": 99.62927827380952,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Name ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) ) ;",
            "score": 99.58023410373264,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.'unchecked') ;",
            "score": 99.53417290581598,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String( ) ) ;",
            "score": 99.53178136488971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new NullPointerException( 'unchecked') ) ;",
            "score": 99.51849975585938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.51344129774306,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false , false ) ;",
            "score": 99.47492218017578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null , 'unchecked'+ indexOfVararg ) ;",
            "score": 99.58013305664062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null , $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'-1, 'unchecked') ;",
            "score": 99.53184509277344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.53175706129808,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String( 'unchecked') ) ;",
            "score": 99.51735432942708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value.size( ) ) ;",
            "score": 99.51323106553819,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value(0) ) ;",
            "score": 99.49538286994485,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ( 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String [ ] { ) ;",
            "score": 99.48868136935764,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String [ ] { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + + 'unchecked') ;",
            "score": 99.47478170955883,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getName( ) , 'unchecked') ;",
            "score": 99.62789306640624,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Name ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int size = matchers.size( ) ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.580078125,
            "correctness": "uncompilable",
            "tokenized_patch": "int size = matchers . size ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?0-1:0) ;",
            "score": 99.53019205729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 0 - 1 : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked') ;",
            "score": 99.51554652622768,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value == null ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.51189507378473,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value(1) ) ;",
            "score": 99.49476533777573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.48491559709821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked') ;",
            "score": 99.47417340959821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length >1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.53031412760417,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length > 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new String(0) ) ;",
            "score": 99.52899169921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new String ( 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.5100456686581,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ,1) ;",
            "score": 99.49457550048828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ exp + 'unchecked') ;",
            "score": 99.4845199584961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + exp + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + ) ;",
            "score": 99.4740478515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( ) + 'unchecked') ;",
            "score": 99.57898530505952,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length + 'unchecked') ;",
            "score": 99.52980550130208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg -1) ;",
            "score": 99.52787272135417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Error( 'unchecked') ) ;",
            "score": 99.51471710205078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Error ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null ) ;",
            "score": 99.47309221540179,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( Object [ ] ) Object.class ) ;",
            "score": 99.62558128720238,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( Object [ ] ) Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , new UnsupportedOperationException( ) ) ;",
            "score": 99.57786865234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg( ) ) ;",
            "score": 99.56793823242188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers , 'unchecked') ;",
            "score": 99.52916717529297,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ -1] ) ;",
            "score": 99.52723452919408,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ - 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ) { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.48362821691177,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+2) ;",
            "score": 99.4721908569336,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+3047126096857467610) ;",
            "score": 99.4721908569336,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+2007) ;",
            "score": 99.4721908569336,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked'+ indexOfVararg + 'unchecked') ;",
            "score": 99.62552315848214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ) ) ;",
            "score": 99.56625027126736,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( ) , 'unchecked') ;",
            "score": 99.52857881433823,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', null ) ;",
            "score": 99.52574811662946,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ value.toString( ) ) ;",
            "score": 99.51416015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + value . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( ) ;",
            "score": 99.50550426136364,
            "correctness": "wrong",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+ name + 'unchecked') ;",
            "score": 99.48741319444444,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalStateException( 'unchecked') ; }",
            "score": 99.48191324869792,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2) ;",
            "score": 99.47188895089286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610) ;",
            "score": 99.47188895089286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007) ;",
            "score": 99.47188895089286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked', ) ;",
            "score": 99.62172154017857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getType( ) , 'unchecked') ;",
            "score": 99.57236938476562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Type ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers2+ 'unchecked') ;",
            "score": 99.5279900045956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers3047126096857467610+ 'unchecked') ;",
            "score": 99.5279900045956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers2007+ 'unchecked') ;",
            "score": 99.5279900045956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, 'unchecked', null ) ;",
            "score": 99.52565511067708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this.getClass( ) ) ;",
            "score": 99.51364135742188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+0+1) ;",
            "score": 99.50433349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + 0 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked'+1) ) ;",
            "score": 99.48210991753473,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ + 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + + + ) ;",
            "score": 99.46983427159927,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + + + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int size = matchers.size( ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.57175903320312,
            "correctness": "wrong",
            "tokenized_patch": "int size = matchers . size ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( true ) ;",
            "score": 99.56497192382812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getName( ) ) ;",
            "score": 99.52737087673611,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked'-1: 'unchecked') ;",
            "score": 99.52437337239583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ - 1 : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } finally { ; }",
            "score": 99.51329210069444,
            "correctness": "wrong",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } finally { ; }",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if( <0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.50399441189236,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new Exception( 'unchecked') ) ;",
            "score": 99.48053741455078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( new UnsupportedOperationException( 'unchecked') ) ;",
            "score": 99.47993977864583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Runnable( ) { throw new IllegalArgumentException( ) ;",
            "score": 99.46796731387867,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runnable ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'[ indexOfVararg ++ ] ) ;",
            "score": 99.57115478515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ [ index CaMeL Of CaMeL Vararg ++ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ break.toString( ) ) ;",
            "score": 99.51220703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + break . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value != null ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.50233289930556,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value != null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+1) ;",
            "score": 99.4795150756836,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getMessage( ) ) ;",
            "score": 99.57037353515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', getClass( ) ) ;",
            "score": 99.56361897786458,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length >0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.52646891276042,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { Object.class",
            "score": 99.52298134251645,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { Object . class",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this.getClass( ) ) ;",
            "score": 99.51056518554688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value( 'unchecked') ;",
            "score": 99.49949645996094,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start ,0) ;",
            "score": 99.47828674316406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked'] ) ;",
            "score": 99.61576915922619,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? true : 'unchecked') ;",
            "score": 99.56765747070312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? true : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1,( int )0) ;",
            "score": 99.52224249588816,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , ( int ) 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { ) } ;",
            "score": 99.51015111019737,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { ) } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( >=0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.49662511488971,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( >= 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1, true ) ;",
            "score": 99.47826385498047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ; this ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.47509087456598,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ; this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ indexOfVararg -1) ;",
            "score": 99.61557152157738,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getType( )1) ;",
            "score": 99.56734793526786,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Type ( ) 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + getName( ) + 'unchecked') ;",
            "score": 99.56206311677632,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + get CaMeL Name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ size -1) ;",
            "score": 99.52383422851562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + size - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.50764295789931,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list.length -0) ;",
            "score": 99.49617513020833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list . length - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ typeName + 'unchecked') ;",
            "score": 99.47213406032986,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + type CaMeL Name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + + 'unchecked') ;",
            "score": 99.45932186351104,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg +0) ;",
            "score": 99.6150146484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? false : 'unchecked') ;",
            "score": 99.56722259521484,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? false : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers [0] ) ;",
            "score": 99.5233513327206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new String( ) ) ;",
            "score": 99.52097455193015,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } throw new Exception( 'unchecked') ;",
            "score": 99.50567305715461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } throw new Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'? 'unchecked': 'unchecked') ;",
            "score": 99.47509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false + null ) ;",
            "score": 99.45866394042969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + -1) ;",
            "score": 99.61417643229167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( ) ) ; }",
            "score": 99.56632690429687,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getMessage( ) ) ;",
            "score": 99.51808675130208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ value + 'unchecked') ;",
            "score": 99.50284249441964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+0+0) ;",
            "score": 99.49504852294922,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 0 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else return ) ;",
            "score": 99.47505950927734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else return ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ command + 'unchecked') ;",
            "score": 99.47088623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + command + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException )( new UnsupportedOperationException( 'unchecked') ) ;",
            "score": 99.61417643229167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) ( new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked'1) ;",
            "score": 99.56608072916667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked', null ) ;",
            "score": 99.51783752441406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', super.getMethod( ) ) ;",
            "score": 99.50263061523438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , super . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value , true ) ;",
            "score": 99.47340393066406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { null",
            "score": 99.4564568014706,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { null",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ indexOfVararg + ) ;",
            "score": 99.61387329101562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( ) , this ) ;",
            "score": 99.56555757068452,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getName( ) + 'unchecked') ;",
            "score": 99.55895385742187,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ) ;",
            "score": 99.49237932477679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+0, null ) ;",
            "score": 99.47254096137152,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 0 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ substring + 'unchecked') ;",
            "score": 99.47064208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + substring + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked') ; }",
            "score": 99.45366354549633,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getType( ) ) ;",
            "score": 99.56441921657986,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers + 'unchecked') ; } else {",
            "score": 99.52115028782895,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + $STRING$ ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?1:0, 'unchecked') ;",
            "score": 99.51633707682292,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 1 : 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ list.size( ) ) ;",
            "score": 99.49221462673611,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + list . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ toString(1) ) ;",
            "score": 99.4724480124081,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + to CaMeL String ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked';",
            "score": 99.45325816761364,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException( 'unchecked''unchecked') ;",
            "score": 99.61236572265625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , new UnsupportedOperationException( 'unchecked') ) ;",
            "score": 99.56353469122024,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { for( int ) {",
            "score": 99.51748817845395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { for ( int ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.toString( ) ) ;",
            "score": 99.51523166232639,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+0) ;",
            "score": 99.4520263671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) > ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.61146763392857,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', this.getType( ) ) ;",
            "score": 99.56288452148438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , this . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length !=1) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.51561215049342,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+1) ;",
            "score": 99.49125671386719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ; ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.46858484604779,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false + 'unchecked') ;",
            "score": 99.45089721679688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0< matchers.length ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.611083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 < matchers . length ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( ) , null ) ;",
            "score": 99.5627208891369,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', this ) ;",
            "score": 99.51438685825893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+( ) + 'unchecked') ;",
            "score": 99.49491613051471,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start( ) ) ;",
            "score": 99.49105834960938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [ ++1] ) ;",
            "score": 99.46910184972427,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ ++ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalStateException( ) ; }",
            "score": 99.46743594898896,
            "correctness": "wrong",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL State CaMeL Exception ( ) ; }",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false + this ) ;",
            "score": 99.45076751708984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.51304796006944,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new String( name ) ) ;",
            "score": 99.49490695529514,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new String ( name ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value [0] ) ;",
            "score": 99.46727079503677,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getClass( ) , 'unchecked') ;",
            "score": 99.60963134765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Class ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', true , 'unchecked') ;",
            "score": 99.5128402709961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , true , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2+0) ;",
            "score": 99.49030303955078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610+0) ;",
            "score": 99.49030303955078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007+0) ;",
            "score": 99.49030303955078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+1, null ) ;",
            "score": 99.46432834201389,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.44343566894531,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', null , null ) ;",
            "score": 99.51248168945312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , null , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else {",
            "score": 99.51096888950893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0) ;",
            "score": 99.49014718191964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name( ) ) ;",
            "score": 99.46319580078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.size( ) + 'unchecked') ;",
            "score": 99.60699462890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . size ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getMethod( ) , 'unchecked') ;",
            "score": 99.56057739257812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Method ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg , invocation ) ;",
            "score": 99.55152587890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Throwable( 'unchecked') ) ;",
            "score": 99.51038360595703,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Throwable ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- -1, 'unchecked') ;",
            "score": 99.50972254136029,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - - 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ ) ;",
            "score": 99.49168982872597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value , this ) ;",
            "score": 99.4899673461914,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new String(1) ) ;",
            "score": 99.46361626519098,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new String ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( name + 'unchecked') ) ;",
            "score": 99.46268956801471,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( name + $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1) ;",
            "score": 99.56039663461539,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked''unchecked') ) ;",
            "score": 99.50977280560662,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked', this ) ;",
            "score": 99.50843811035156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( >0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.48969184027777,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1, null ) ;",
            "score": 99.46221160888672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this + + ) ;",
            "score": 99.44019317626953,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this + + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.size -1) ;",
            "score": 99.60285101996527,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . size - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&0-1) ;",
            "score": 99.5062255859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ & 0 - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getName( ) + 'unchecked') ;",
            "score": 99.49088541666667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name != null ) throw new UnsupportedOperationException( ) ;",
            "score": 99.46182071461396,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name != null ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ hashCode( ) ) ;",
            "score": 99.45966339111328,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + hash CaMeL Code ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false +1) ;",
            "score": 99.43943786621094,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new UnsupportedOperationException( 'unchecked''unchecked') ;",
            "score": 99.60283813476562,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false ) ;",
            "score": 99.55935668945312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers ) ; } else {",
            "score": 99.50791302849265,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, 'unchecked', this ) ;",
            "score": 99.50383843315973,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $STRING$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked'+1) ;",
            "score": 99.46029324001736,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.45780181884766,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + + ) ;",
            "score": 99.6019775390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >= matchers.size( ) ) {",
            "score": 99.50782775878906,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) >= matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( -1) + 'unchecked') ;",
            "score": 99.48745888157895,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( - 1 ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else return false ;",
            "score": 99.45923614501953,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else return false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ getClass( ) ) ;",
            "score": 99.45623101128473,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length <0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.5989002046131,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new IllegalArgumentException( 'unchecked') ) ;",
            "score": 99.54540405273437,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { for( int )",
            "score": 99.50587972005208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { for ( int )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { return ; } throw new UnsupportedOperationException( ) ;",
            "score": 99.48617214626736,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { return ; } throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value , null ) ;",
            "score": 99.48023223876953,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ exp + 'unchecked') ;",
            "score": 99.4560775756836,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + exp + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this ) ;",
            "score": 99.43620954241071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length ==0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.59619750976563,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ,1) ;",
            "score": 99.5586181640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new UnsupportedOperationException( + 'unchecked') ;",
            "score": 99.54498901367188,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers.size( ) + ) ;",
            "score": 99.50212659333882,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers . size ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'-0, 'unchecked') ;",
            "score": 99.50002872242646,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ - 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { ) } ;",
            "score": 99.48616108141448,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { ) } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name , null ) ;",
            "score": 99.47855377197266,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1, null ) ;",
            "score": 99.45868791852679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new String( 'unchecked') ) ;",
            "score": 99.43498992919922,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new String ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked'true ) ;",
            "score": 99.59619140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException( + 'unchecked') ;",
            "score": 99.54292602539063,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ invocation.getMethod( ) ) ;",
            "score": 99.50211588541667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.48377900965073,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false +2) ;",
            "score": 99.43468475341797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false +3047126096857467610) ;",
            "score": 99.43468475341797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false +2007) ;",
            "score": 99.43468475341797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'|| indexOfVararg <0) ;",
            "score": 99.59486694335938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || index CaMeL Of CaMeL Vararg < 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getType( ) + 'unchecked') ;",
            "score": 99.55796508789062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Type ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ) != 'unchecked') ;",
            "score": 99.54284057617187,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) != $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Error( 'unchecked') ) ;",
            "score": 99.49942355685764,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Error ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new String( 'unchecked') ) ;",
            "score": 99.48204888237848,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new String ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ 'unchecked'+0) ;",
            "score": 99.47720336914062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Exception( 'unchecked') ) ;",
            "score": 99.45726860894098,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( ) ; } return ;",
            "score": 99.45303683810764,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false + value ) ;",
            "score": 99.43336486816406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) , false ) ;",
            "score": 99.55758056640624,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length !=0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.50179250616776,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? -1: 'unchecked') ;",
            "score": 99.4983269186581,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? - 1 : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value( ) ) ;",
            "score": 99.47388458251953,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ,0,0) ;",
            "score": 99.45274522569444,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; } catch( ;",
            "score": 99.45053439670139,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } catch ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ toString( ) ) ;",
            "score": 99.43285260881696,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException(1) ) ;",
            "score": 99.55669555664062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length( ) ) ;",
            "score": 99.54207611083984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size >0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.5003662109375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1,0, 'unchecked') ;",
            "score": 99.49679904513889,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ format( 'unchecked') ) ;",
            "score": 99.46734260110294,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + format ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1, null , null ) ;",
            "score": 99.45262993706598,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , null , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } throw new Exception( ) ;",
            "score": 99.4482421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } throw new Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0+1) ;",
            "score": 99.4325942993164,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ indexOfVararg ) ;",
            "score": 99.55562551398026,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', getType( ) ) ;",
            "score": 99.54018825954861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked') ) ; }",
            "score": 99.50032312729779,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name - 'unchecked') ;",
            "score": 99.46363830566406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name - $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { return ) ;",
            "score": 99.45207663143383,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { return ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2+ false ) ;",
            "score": 99.43254089355469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610+ false ) ;",
            "score": 99.43254089355469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007+ false ) ;",
            "score": 99.43254089355469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >=0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.59342447916667,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length >= 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', this.getMethod( ) ) ;",
            "score": 99.55553588867187,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , this . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getException( ) ) ;",
            "score": 99.53424682617188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ matchers.size( ) ) ;",
            "score": 99.49931335449219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + matchers . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0,0) ;",
            "score": 99.49459075927734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name ) ;",
            "score": 99.44400460379464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false + true ) ;",
            "score": 99.43204498291016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getMessage( ) , 'unchecked') ;",
            "score": 99.59286644345238,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Message ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked''unchecked'+ indexOfVararg ) ;",
            "score": 99.55479125976562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers.size( ) ) ; }",
            "score": 99.4984066611842,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers . size ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ -1, 'unchecked') ;",
            "score": 99.49297018612133,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + - 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ break + 'unchecked') ;",
            "score": 99.47551727294922,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + break + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( char )0) ;",
            "score": 99.45652860753677,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( char ) 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [ [1] ) ;",
            "score": 99.45003015854779,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ [ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { ; }",
            "score": 99.44375271267361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg , -1) ;",
            "score": 99.59173874627976,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getClass( ) ) ;",
            "score": 99.53414577907986,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, 'unchecked', false ) ;",
            "score": 99.49281141493056,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $STRING$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { return ;",
            "score": 99.47367858886719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ intern( 'unchecked') ) ;",
            "score": 99.45395076976104,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + intern ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexOfVararg <=0) ;",
            "score": 99.53314819335938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL Of CaMeL Vararg <= 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked'+ matchers + 'unchecked') ;",
            "score": 99.49663628472223,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ + matchers + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?0:1) ;",
            "score": 99.49172973632812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 0 : 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ value , null ) ;",
            "score": 99.45352172851562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start ,1) ;",
            "score": 99.44926452636719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( 'unchecked') ; }",
            "score": 99.44140625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) , true ) ;",
            "score": 99.55208129882813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers , null ) ;",
            "score": 99.49638366699219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked'+ ) ; }",
            "score": 99.4718017578125,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0, null ) ;",
            "score": 99.45244598388672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( new IllegalArgumentException( 'unchecked') ) ;",
            "score": 99.44875081380208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ typeName + 'unchecked') ;",
            "score": 99.43853759765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + type CaMeL Name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ true + false ) ;",
            "score": 99.43041229248047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + true + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0) throw new UnsupportedOperationException( ) ;",
            "score": 99.55185081845238,
            "correctness": "plausible",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getName( ) + ) ;",
            "score": 99.4962093955592,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Name ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, this ) ;",
            "score": 99.49102020263672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( -0) ) ;",
            "score": 99.45237821691177,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( - 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null ; } else { throw new UnsupportedOperationException( ) ;",
            "score": 99.44813447840073,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null ; } else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final synchronized( this ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.43785264756944,
            "correctness": "uncompilable",
            "tokenized_patch": "final synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ toString( ) + 'unchecked') ;",
            "score": 99.42794799804688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + to CaMeL String ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg < ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.55179268973214,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1+ indexOfVararg ) ;",
            "score": 99.53172607421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getClass( ) + 'unchecked') ;",
            "score": 99.46993001302083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Class ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ copy( 'unchecked') ) ;",
            "score": 99.45198328354779,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + copy ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+0,0) ;",
            "score": 99.44770643446181,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false , 'unchecked') ;",
            "score": 99.42730712890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException )( new UnsupportedOperationException( ) ) ;",
            "score": 99.5904052734375,
            "correctness": "wrong",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( 'unchecked''unchecked') ) ;",
            "score": 99.55081612723214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getMessage( ) + 'unchecked') ;",
            "score": 99.53164672851562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Message ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation ) ;",
            "score": 99.49537876674107,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+( -1) + 'unchecked') ;",
            "score": 99.46774773848684,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( - 1 ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value , 'unchecked') ;",
            "score": 99.45156860351562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } catch( Exception ;",
            "score": 99.44741482204861,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } catch ( Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ toString( ) ) ;",
            "score": 99.42649623325893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length <1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.58993675595238,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length < 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getRuntime( ) , 'unchecked') ;",
            "score": 99.54905870225694,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Runtime ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length <1) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.49525853207237,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length < 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, 'unchecked', true ) ;",
            "score": 99.4906005859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $STRING$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { return ; } throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.46558902138158,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { return ; } throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value !=0) ;",
            "score": 99.45148468017578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value != 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked'; }",
            "score": 99.43348604090073,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked';",
            "score": 99.42611929086539,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( ) , false ) ;",
            "score": 99.54871186755952,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Throwable( ) ) ;",
            "score": 99.48968864889706,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Throwable ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ l , 'unchecked') ;",
            "score": 99.45054626464844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + l , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+1+1) ;",
            "score": 99.44656711154514,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false +2) ;",
            "score": 99.42257690429688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false +3047126096857467610) ;",
            "score": 99.42257690429688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false +2007) ;",
            "score": 99.42257690429688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( matchers != null )",
            "score": 99.49318440755208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( matchers != null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', false ) ;",
            "score": 99.48934500558036,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOf( ) ) ;",
            "score": 99.46141221788194,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name , null ) ;",
            "score": 99.45001983642578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , null , null ) ;",
            "score": 99.44597710503473,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , null , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( ) ; }",
            "score": 99.43147277832031,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false + 'unchecked') ;",
            "score": 99.42190551757812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ] + 'unchecked') ;",
            "score": 99.58829752604167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ] + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2, 'unchecked'+ indexOfVararg ) ;",
            "score": 99.5474609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610, 'unchecked'+ indexOfVararg ) ;",
            "score": 99.5474609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007, 'unchecked'+ indexOfVararg ) ;",
            "score": 99.5474609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length -0) ;",
            "score": 99.48931206597223,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [0] ) ;",
            "score": 99.44371795654297,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ true ) ;",
            "score": 99.42136056082589,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ] , 'unchecked') ;",
            "score": 99.58697219122024,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ] , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new UnsupportedOperationException( ) ) ;",
            "score": 99.54696800595238,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ invocation.getClass( ) ) ;",
            "score": 99.49259440104167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + invocation . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked', true ) ;",
            "score": 99.4892807006836,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value( ) + ) ;",
            "score": 99.44727280560662,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + ) ;",
            "score": 99.4208740234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers <0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.58685980902777,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( indexOfVararg ++ ) ) ;",
            "score": 99.54679361979167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( index CaMeL Of CaMeL Vararg ++ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexOfVararg >0) ;",
            "score": 99.52827758789063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL Of CaMeL Vararg > 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length !=1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.49184698807566,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',0, 'unchecked') ;",
            "score": 99.48888397216797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getClass( ) , 'unchecked') ;",
            "score": 99.46066623263889,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Class ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( ) ; } ;",
            "score": 99.4275261374081,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false +1) ;",
            "score": 99.41986846923828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg1+ 'unchecked') ;",
            "score": 99.58579799107143,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg 1 + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getName( ) ) ; }",
            "score": 99.54658435639881,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Name ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "System.print( 'unchecked') ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.52762001439145,
            "correctness": "uncompilable",
            "tokenized_patch": "System . print ( $STRING$ ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name -1) ;",
            "score": 99.48834228515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } finally { break ; }",
            "score": 99.4603207236842,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } finally { break ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( ] )0) ;",
            "score": 99.4448601217831,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( ] ) 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this ) ;",
            "score": 99.442626953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Object [ ] { ) ;",
            "score": 99.42746310763889,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Object [ ] { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ toString( ) + 'unchecked') ;",
            "score": 99.41815948486328,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + to CaMeL String ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getMethod( ) ) ;",
            "score": 99.54606119791667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'||0< matchers.length ) ;",
            "score": 99.48707411024306,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || 0 < matchers . length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOf( ) ) ;",
            "score": 99.46013047960069,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2+ null ) ;",
            "score": 99.44450378417969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610+ null ) ;",
            "score": 99.44450378417969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007+ null ) ;",
            "score": 99.44450378417969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [ ++0] ) ;",
            "score": 99.44172219669117,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ ++ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ substring + 'unchecked') ;",
            "score": 99.42729949951172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + substring + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ this + 'unchecked') ;",
            "score": 99.41756439208984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getType( ) , 'unchecked') ;",
            "score": 99.54555053710938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Type ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this.getName( ) ) ;",
            "score": 99.526416015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ invocation.getType( ) ) ;",
            "score": 99.49146185980902,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', true ) ;",
            "score": 99.48615373883929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Object [ ] { ) } ;",
            "score": 99.45999948601974,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Object [ ] { ) } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+2) ;",
            "score": 99.44393157958984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+3047126096857467610) ;",
            "score": 99.44393157958984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+2007) ;",
            "score": 99.44393157958984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { throw null ;",
            "score": 99.44149959788604,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { throw null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.42678833007812,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ invocation.getMethod( ) ) ;",
            "score": 99.54536365327381,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getMethod( ) ) ;",
            "score": 99.49142795138889,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked', false ) ;",
            "score": 99.48548889160156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( ) ;",
            "score": 99.4438809481534,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1,1) ;",
            "score": 99.44084167480469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "warn( 'unchecked') ; throw new UnsupportedOperationException( ) ;",
            "score": 99.42605590820312,
            "correctness": "uncompilable",
            "tokenized_patch": "warn ( $STRING$ ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ value ) ;",
            "score": 99.41400146484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { throw new UnsupportedOperationException( 'unchecked'-1) ;",
            "score": 99.58258928571429,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length( ) + 'unchecked') ;",
            "score": 99.5247802734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getType( ) ) ;",
            "score": 99.49085150824652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',0,0) ;",
            "score": 99.48529815673828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ value ) ;",
            "score": 99.44300842285156,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { return false ; }",
            "score": 99.44078911675348,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { return false ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) return ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.42601102941177,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) return ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null + true ) ;",
            "score": 99.41300964355469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?1:1) ;",
            "score": 99.54532623291016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 1 : 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0) { indexOfVararg =0;",
            "score": 99.52467041015625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 ) { index CaMeL Of CaMeL Vararg = 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start -1) ;",
            "score": 99.49041748046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?0:0,0) ;",
            "score": 99.48497856987848,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 0 : 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value , null , null ) ;",
            "score": 99.44045003255208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value , null , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ value( ) ) ;",
            "score": 99.43785095214844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked') ; } ;",
            "score": 99.42547607421875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ null +1) ;",
            "score": 99.41217041015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + null + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length !=0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.58110119047619,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.getClass( ) , 'unchecked') ;",
            "score": 99.54451293945313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . get CaMeL Class ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new RuntimeException( 'unchecked''unchecked') ) ;",
            "score": 99.4901187294408,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Runtime CaMeL Exception ( $STRING$ $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', false , 'unchecked') ;",
            "score": 99.48467254638672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , false , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+( value + 'unchecked') ) ;",
            "score": 99.45260281032986,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( value + $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else return true ;",
            "score": 99.43965911865234,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else return true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+ null ) ;",
            "score": 99.4377670288086,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOf ; else throw new UnsupportedOperationException( ) ;",
            "score": 99.42508951822917,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of ; else throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length ==1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.5808349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length == 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { throw new UnsupportedOperationException( + 'unchecked') ;",
            "score": 99.52422485351562,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers , true ) ;",
            "score": 99.48994445800781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg , 'unchecked') ;",
            "score": 99.48251681857639,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value(0) ) ;",
            "score": 99.43842629825367,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ( 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start , 'unchecked') ;",
            "score": 99.43671417236328,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ; } throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.4242935180664,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new ; } throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg +2) ;",
            "score": 99.5440185546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg +3047126096857467610) ;",
            "score": 99.5440185546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg +2007) ;",
            "score": 99.5440185546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final int matchers = invocation.getRawArguments( ).length -1;",
            "score": 99.4885189658717,
            "correctness": "plausible",
            "tokenized_patch": "final int matchers = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new boolean [ ] { ) ;",
            "score": 99.48248291015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new boolean [ ] { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ,0,1) ;",
            "score": 99.43791368272569,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , 0 , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ substring(0) ) ;",
            "score": 99.43635110294117,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + substring ( 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ; ) { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.42380099826389,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String ) invocation.getName( ) ) ;",
            "score": 99.57905505952381,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( 'unchecked'1) ) ;",
            "score": 99.54246884300595,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( matchers.size( ) -1) ;",
            "score": 99.48246934678819,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( matchers . size ( ) - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( value + 'unchecked') ) ;",
            "score": 99.45206705729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( value + $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name != null ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.43779839409723,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name != null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else { throw new IllegalArgumentException( 'unchecked') ; }",
            "score": 99.42359754774306,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ; } else { throw new UnsupportedOperationException( ) ;",
            "score": 99.41079711914062,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; } else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getName( ) + 'unchecked') ;",
            "score": 99.519775390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers + 'unchecked''unchecked') ;",
            "score": 99.48800838694854,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new ?0:0) ;",
            "score": 99.48226589626736,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new ? 0 : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( 'unchecked') ; } return ;",
            "score": 99.44855700041118,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { return false ;",
            "score": 99.4366096047794,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { return false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ value [0] ) ;",
            "score": 99.432861328125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } catch( ;",
            "score": 99.42333984375,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } catch ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null + value ) ;",
            "score": 99.4107666015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getMethod( ) , false ) ;",
            "score": 99.54202270507812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Method ( ) , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0&& matchers.size( ) >0)",
            "score": 99.48774157072368,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 && matchers . size ( ) > 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0, Object.class ) ;",
            "score": 99.48188612196181,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked'+ ) ;",
            "score": 99.44753848805146,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name [1] ) ;",
            "score": 99.43655215992646,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name [ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name *'unchecked') ;",
            "score": 99.43168640136719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name * $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { ; throw new UnsupportedOperationException( ) ; }",
            "score": 99.42300754123264,
            "correctness": "wrong",
            "tokenized_patch": "synchronized ( this ) { ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new new UnsupportedOperationException( ) ;",
            "score": 99.41021728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == -1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.575390625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == - 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( ) , true ) ;",
            "score": 99.54159691220238,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked'+ matchers ) ) ;",
            "score": 99.48754204644098,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ + matchers ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'.toString( ) + 'unchecked') ;",
            "score": 99.44704861111111,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ toString(0) ) ;",
            "score": 99.43610696231617,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + to CaMeL String ( 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) throw new UnsupportedOperationException( ) ;",
            "score": 99.43039119944854,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != -1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.57416092722039,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != - 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1,0,0) ;",
            "score": 99.47648111979167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( Object [ ] ) ) ;",
            "score": 99.4454345703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( Object [ ] ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1, false ) ;",
            "score": 99.43608856201172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ name ) ;",
            "score": 99.42994689941406,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked'+ ; }",
            "score": 99.42250569661458,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ name ) ;",
            "score": 99.40833282470703,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length !=1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.57396298363095,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length != 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getParent( ) ) ;",
            "score": 99.541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Parent ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + -1, 'unchecked') ;",
            "score": 99.51861572265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + - 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ matchers.size( ) + 'unchecked') ;",
            "score": 99.48704020182292,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + matchers . size ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(( CapturesArguments ) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.47532823350694,
            "correctness": "uncompilable",
            "tokenized_patch": "( ( Captures CaMeL Arguments ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String(1) ) ;",
            "score": 99.43598768446181,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name , this ) ;",
            "score": 99.42938995361328,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( ;",
            "score": 99.41776275634766,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ true ) ;",
            "score": 99.40641784667969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers <1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.57395533511513,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers < 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getName( )1) ;",
            "score": 99.53989955357143,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Name ( ) 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + this.getName( ) + ) ;",
            "score": 99.51851196289063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + this . get CaMeL Name ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getMessage( 'unchecked') ) ;",
            "score": 99.48573062294408,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Message ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1,1) ;",
            "score": 99.47366333007812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ break + 'unchecked') ;",
            "score": 99.44500732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + break + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1,0) ;",
            "score": 99.43574523925781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+0) ;",
            "score": 99.42901611328125,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "; synchronized( this ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.41693115234375,
            "correctness": "wrong",
            "tokenized_patch": "; synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new ) ; } throw new UnsupportedOperationException( ) ;",
            "score": 99.4039306640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new ) ; } throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg [0] ) ;",
            "score": 99.57335844494048,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + indexOfVararg ) ;",
            "score": 99.53978774126838,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getException( ) ) ;",
            "score": 99.51845974392361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != null && matchers.size( ) >0) {",
            "score": 99.4837646484375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != null && matchers . size ( ) > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length( ) -1) ;",
            "score": 99.47327338324652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length ( ) - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new String( ) ) ;",
            "score": 99.44496065027573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null ; } else { throw new UnsupportedOperationException( ) ; }",
            "score": 99.43541124131944,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null ; } else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( >0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.42890481387867,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ true + false ) ;",
            "score": 99.40391540527344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + true + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getRuntime( ) , 'unchecked') ;",
            "score": 99.53859252929688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Runtime ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&&0>= matchers.size( ) ) ;",
            "score": 99.51823120117187,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && 0 >= matchers . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size >0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.48363579644098,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked''unchecked') ;",
            "score": 99.47202845982143,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { ) ; }",
            "score": 99.44320518092105,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [ [ ++1] ) ;",
            "score": 99.43509250217014,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ [ ++ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value ) ;",
            "score": 99.42837088448661,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) return ; throw new UnsupportedOperationException( ) ;",
            "score": 99.41677856445312,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) return ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this + 'unchecked'+1) ;",
            "score": 99.40304565429688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this + $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getName( ) , 'unchecked') ;",
            "score": 99.571826171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Name ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "System.print( 'unchecked') ; throw new UnsupportedOperationException( ) ;",
            "score": 99.51796468098958,
            "correctness": "uncompilable",
            "tokenized_patch": "System . print ( $STRING$ ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { for( int ) ;",
            "score": 99.48332134046052,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { for ( int ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String( value ) ) ;",
            "score": 99.44314914279514,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String ( value ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1, this ) ;",
            "score": 99.43318939208984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value( 'unchecked') ) ;",
            "score": 99.42738970588235,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "warn( 'unchecked') ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.41553452435662,
            "correctness": "uncompilable",
            "tokenized_patch": "warn ( $STRING$ ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false +0) ;",
            "score": 99.40299987792969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != -1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.571728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != - 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0+ indexOfVararg ) ;",
            "score": 99.51677856445312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length !=1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.48290337456598,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg , this ) ;",
            "score": 99.47148980034723,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ) ; } ) ;",
            "score": 99.44300601356908,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ;",
            "score": 99.41534423828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + this + 'unchecked') ;",
            "score": 99.40280151367188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ invocation.getType( ) ) ;",
            "score": 99.5361095610119,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexOfVararg !=0) ;",
            "score": 99.51635131835937,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL Of CaMeL Vararg != 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size ==0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.48239617598684,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value + 'unchecked'+ this ) ;",
            "score": 99.44253200954861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value + $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start , null ) ;",
            "score": 99.4271011352539,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized(( this ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.41518147786458,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ;",
            "score": 99.40186485877403,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >=1) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.57167271205357,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length >= 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.size( )1) ;",
            "score": 99.48231265419408,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . size ( ) 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*0, 'unchecked') ;",
            "score": 99.47113800048828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+ value ) ;",
            "score": 99.42707824707031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ] ) ;",
            "score": 99.57142398231908,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers , invocation ) ;",
            "score": 99.48099517822266,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers , invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, -1) ;",
            "score": 99.47043026194854,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1,1) ;",
            "score": 99.43175506591797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name , false ) ;",
            "score": 99.42671203613281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this + 'unchecked'+ this ) ;",
            "score": 99.41432020399306,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this + $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ null +1) ;",
            "score": 99.39990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + null + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( int ) indexOfVararg ) ;",
            "score": 99.53390066964286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( int ) index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { for( int }",
            "score": 99.47975667317708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { for ( int }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+1, null ) ;",
            "score": 99.43114556206598,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name [0] ;",
            "score": 99.42652893066406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name [ 0 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } throw new Error( ) ;",
            "score": 99.41290961371527,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } throw new Error ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + ) ;",
            "score": 99.39956868489584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new String [ ] { 'unchecked'} ) ;",
            "score": 99.5146728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new String [ ] { $STRING$ } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length +1) ;",
            "score": 99.47905137803819,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length( ) ) ;",
            "score": 99.46936713324652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name , 'unchecked') ;",
            "score": 99.42546844482422,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ this.getClass( ) ) ;",
            "score": 99.41280788845486,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + this . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + name + 'unchecked') ;",
            "score": 99.39923095703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >2) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.56963820684524,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > $NUMBER$ ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >3047126096857467610) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.56963820684524,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > $NUMBER$ ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >2007) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.56963820684524,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > $NUMBER$ ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false , 'unchecked'+ indexOfVararg ) ;",
            "score": 99.53270874023437,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false , $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else { for( int",
            "score": 99.47781711154514,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else { for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'.size( ) -1) ;",
            "score": 99.46925184461806,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . size ( ) - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ substring(1) ) ;",
            "score": 99.4286247702206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + substring ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2+0) ;",
            "score": 99.42405700683594,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610+0) ;",
            "score": 99.42405700683594,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007+0) ;",
            "score": 99.42405700683594,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ false + false ) ;",
            "score": 99.39727020263672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + false + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ] , true ) ;",
            "score": 99.56951032366071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ] , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else { for( int )",
            "score": 99.47542531866776,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else { for ( int )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', name -1) ;",
            "score": 99.46892547607422,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , name - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+ start ,0) ;",
            "score": 99.42848714192708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + start , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } if( ;",
            "score": 99.41075897216797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } if ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false + value ) ;",
            "score": 99.39593505859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + null ) ;",
            "score": 99.53230590820313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { throw new UnsupportedOperationException( true ) ;",
            "score": 99.51383891858552,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length -1) ; }",
            "score": 99.47451942845395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length - 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value + 'unchecked'+ this ) ;",
            "score": 99.43625217013889,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value + $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked'+ value ) ;",
            "score": 99.42812771267361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String name =( String ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.41047498914931,
            "correctness": "uncompilable",
            "tokenized_patch": "String name = ( String ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { throw new UnsupportedOperationException( 'unchecked''unchecked') ;",
            "score": 99.56930541992188,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ) ; }",
            "score": 99.53220086348684,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexOfVararg <1) ;",
            "score": 99.51378784179687,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL Of CaMeL Vararg < 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers size -1) ;",
            "score": 99.4741569967831,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers size - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0, 'unchecked', 'unchecked') ;",
            "score": 99.46676974826389,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 , $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+ value ) ;",
            "score": 99.42692565917969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) throw new UnsupportedOperationException( ) ;",
            "score": 99.41950539981617,
            "correctness": "wrong",
            "tokenized_patch": "if ( 0 == 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( new String [ ] { 'unchecked'} ) ;",
            "score": 99.41008165147569,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new String [ ] { $STRING$ } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } return ) ;",
            "score": 99.39446258544922,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } return ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked'false ) ;",
            "score": 99.56801060267857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getMethod( ) , true ) ;",
            "score": 99.53212280273438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Method ( ) , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers + 'unchecked'+ invocation ) ;",
            "score": 99.47218831380208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + $STRING$ + invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked') ; } return ;",
            "score": 99.4338314658717,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+1, false ) ;",
            "score": 99.42671712239583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 1 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) throw new IllegalArgumentException( ) ;",
            "score": 99.41908174402573,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false +0) ;",
            "score": 99.3944091796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked'+ indexOfVararg -1) ;",
            "score": 99.56741768973214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ + index CaMeL Of CaMeL Vararg - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int indexOfVararg =0; throw new UnsupportedOperationException( ) ;",
            "score": 99.53117065429687,
            "correctness": "uncompilable",
            "tokenized_patch": "int index CaMeL Of CaMeL Vararg = 0 ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >( matchers.size( ) -1) )",
            "score": 99.4715511924342,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > ( matchers . size ( ) - 1 ) )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', Object.class ) ;",
            "score": 99.46642303466797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value(1) ) ;",
            "score": 99.42637005974265,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start Exception true ) ;",
            "score": 99.41891479492188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start Exception true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.40974426269531,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Runnable( ) { throw new RuntimeException( 'unchecked') ;",
            "score": 99.39430236816406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runnable ( ) { throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getException( ) , 'unchecked') ;",
            "score": 99.56561569940476,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Exception ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ) ; break ;",
            "score": 99.52992553710938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ; break ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.47062852647569,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ intValue -1) ;",
            "score": 99.46624077690973,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + int CaMeL Value - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Integer( ) ) ;",
            "score": 99.43013269761029,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Integer ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+1+0) ;",
            "score": 99.42609998914931,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ l + 'unchecked') ;",
            "score": 99.41740417480469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + l + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new UnsupportedOperationException( true ) ;",
            "score": 99.51224557976974,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0, false ) ;",
            "score": 99.46402740478516,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1+1) ;",
            "score": 99.42606898716518,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null , null ) ;",
            "score": 99.41691589355469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new UnsupportedOperationException( ) ;",
            "score": 99.4089824969952,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ,2) ;",
            "score": 99.564794921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ,3047126096857467610) ;",
            "score": 99.564794921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ,2007) ;",
            "score": 99.564794921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg , name ) ;",
            "score": 99.52909545898437,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, null , 'unchecked') ;",
            "score": 99.46242268880208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , null , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( Object [ ] )1) ;",
            "score": 99.42568790211396,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( Object [ ] ) 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + this ) ;",
            "score": 99.563720703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.getName( ) ) ;",
            "score": 99.52857055664063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true &&0< matchers.size( ) ) ;",
            "score": 99.51195068359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true && 0 < matchers . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) < matchers.size( ) ) {",
            "score": 99.46867370605469,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) < matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1.0, 'unchecked') ;",
            "score": 99.46175808376736,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 . 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [ : 'unchecked') ;",
            "score": 99.42521667480469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.41632080078125,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length > -1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.56370907738095,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > - 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.length( ) -1) ;",
            "score": 99.52715386284723,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . length ( ) - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalArgumentException( 'unchecked'+ ) ; }",
            "score": 99.42618600945724,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1,0) ;",
            "score": 99.42476654052734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0!=0) throw new UnsupportedOperationException( ) ;",
            "score": 99.415283203125,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 != 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false + true ) ;",
            "score": 99.39068603515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException( 'unchecked'+ ) ;",
            "score": 99.56365356445312,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + invocation.getName( ) + 'unchecked') ;",
            "score": 99.52682059151786,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + invocation . get CaMeL Name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexOfVararg ==0) ;",
            "score": 99.51070556640624,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL Of CaMeL Vararg == 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers , this ) ;",
            "score": 99.4681167602539,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { throw null ; }",
            "score": 99.42437744140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { throw null ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( *0) ) ;",
            "score": 99.41506060431985,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( * 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.40216064453125,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2+ null ) ;",
            "score": 99.3895263671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610+ null ) ;",
            "score": 99.3895263671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007+ null ) ;",
            "score": 99.3895263671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.getRuntime( ) , 'unchecked') ;",
            "score": 99.52623291015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . get CaMeL Runtime ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getId( ) , 'unchecked') ;",
            "score": 99.51002807617188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Id ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getException( ) ) ;",
            "score": 99.46725802951389,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked''unchecked', 'unchecked') ;",
            "score": 99.46109008789062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( ) ;",
            "score": 99.42502170138889,
            "correctness": "wrong",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getMessage( ) ) ;",
            "score": 99.42371961805556,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <0) { throw new IllegalArgumentException( ) ;",
            "score": 99.41494571461396,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2+ false ) ;",
            "score": 99.38768768310547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610+ false ) ;",
            "score": 99.38768768310547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007+ false ) ;",
            "score": 99.38768768310547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked'+ indexOfVararg ) ;",
            "score": 99.5087158203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { int indexOfVararg = matchers.size( ) -1;",
            "score": 99.46702067057292,
            "correctness": "uncompilable",
            "tokenized_patch": "try { int index CaMeL Of CaMeL Vararg = matchers . size ( ) - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( ) { return ;",
            "score": 99.42435495476974,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value [1] ) ;",
            "score": 99.4232177734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value [ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ; this ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.40070936414931,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ; this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false ) ; ) ;",
            "score": 99.38690185546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false ) ; ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException( 'unchecked'-1) ;",
            "score": 99.56310453869048,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked'+ indexOfVararg ) ;",
            "score": 99.52554321289062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( matchers != null )",
            "score": 99.46671335320724,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( matchers != null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0, true ) ;",
            "score": 99.4598388671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ 'unchecked') ;",
            "score": 99.41362653459821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String [ ] ) null ) ;",
            "score": 99.39996696920956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String [ ] ) null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int matchers = matchers -1; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.5629947060033,
            "correctness": "uncompilable",
            "tokenized_patch": "int matchers = matchers - 1 ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getException( ) ) ;",
            "score": 99.50786389802632,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ matchers.size( ) ) ;",
            "score": 99.46649848090277,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + matchers . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1,2) ;",
            "score": 99.45979309082031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1,3047126096857467610) ;",
            "score": 99.45979309082031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1,2007) ;",
            "score": 99.45979309082031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( new RuntimeException( 'unchecked') ) ;",
            "score": 99.42313385009766,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( new Runtime CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String [ ] { ; }",
            "score": 99.39940049913194,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String [ ] { ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException(2) ) ;",
            "score": 99.52503662109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException(3047126096857467610) ) ;",
            "score": 99.52503662109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException(2007) ) ;",
            "score": 99.52503662109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] {0",
            "score": 99.45942239200367,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { 0",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+0, null ) ;",
            "score": 99.4229736328125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 0 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+(( Integer ) ) ) ;",
            "score": 99.42137993706598,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( ( Integer ) ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+1+0) ;",
            "score": 99.4099349975586,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 1 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getMessage( ) ) ;",
            "score": 99.56174830386513,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.toString( ) ) ;",
            "score": 99.50723876953126,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >0) { if( matchers.length >0) {",
            "score": 99.46526135896382,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > 0 ) { if ( matchers . length > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2, 'unchecked', 'unchecked') ;",
            "score": 99.45938449435764,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-3047126096857467610, 'unchecked', 'unchecked') ;",
            "score": 99.45938449435764,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2007, 'unchecked', 'unchecked') ;",
            "score": 99.45938449435764,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , false , null ) ;",
            "score": 99.42169867621527,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , false , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( name -1) ) ;",
            "score": 99.42119004991319,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( name - 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ -0+0) ;",
            "score": 99.40927303538604,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + - 0 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( ) { return ;",
            "score": 99.39832899305556,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name + 'unchecked'+ false ) ;",
            "score": 99.38383483886719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name + $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ] , this ) ;",
            "score": 99.56111653645833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ] , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException( true ) ;",
            "score": 99.50479929070724,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers *1) ;",
            "score": 99.46443176269531,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers * 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new RuntimeException( 'unchecked') ) ;",
            "score": 99.42151557074652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new Runtime CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new NoSuchMethodException( ) ; }",
            "score": 99.41897101151316,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+",
            "score": 99.4092129794034,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOf ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.39815266927083,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false Exception null ) ;",
            "score": 99.383544921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false Exception null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg1, 'unchecked') ;",
            "score": 99.5603259858631,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getRawArguments( ).length -1;",
            "score": 99.4642333984375,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value , null , false ) ;",
            "score": 99.42111545138889,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value , null , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+( name + 'unchecked') ) ;",
            "score": 99.41813151041667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ( name + $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ toString( ) ;",
            "score": 99.40920122931985,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalStateException( 'unchecked') ;",
            "score": 99.3981071920956,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ null + null ) ;",
            "score": 99.38150787353516,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + null + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int matchers = matchers +1; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.55921695106908,
            "correctness": "uncompilable",
            "tokenized_patch": "int matchers = matchers + 1 ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( 'unchecked') ) ; }",
            "score": 99.52408854166667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'|| indexOfVararg >=0) ;",
            "score": 99.50394897460937,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || index CaMeL Of CaMeL Vararg >= 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { return ; }",
            "score": 99.4634033203125,
            "correctness": "plausible",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { return ; }",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+0,0) ;",
            "score": 99.42069498697917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( RuntimeException )( new IllegalArgumentException( 'unchecked') ) ;",
            "score": 99.41690866570724,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Runtime CaMeL Exception ) ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+2) ;",
            "score": 99.40807342529297,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+3047126096857467610) ;",
            "score": 99.40807342529297,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+2007) ;",
            "score": 99.40807342529297,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ; ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.3980712890625,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'this.getName( ) , 'unchecked') ;",
            "score": 99.55890764508929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ this . get CaMeL Name ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { throw new UnsupportedOperationException( false ) ;",
            "score": 99.50355931332237,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else { for( int }",
            "score": 99.46314761513158,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else { for ( int }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+1,0) ;",
            "score": 99.42047797309027,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + 'unchecked'+ this ) ;",
            "score": 99.41670735677083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value , false ) ;",
            "score": 99.40757751464844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false + name ) ;",
            "score": 99.3804931640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', getMethodName( ) ) ;",
            "score": 99.50260009765626,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , get CaMeL Method CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new ?1:0) ;",
            "score": 99.45838758680556,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new ? 1 : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked'+ value ) ;",
            "score": 99.41654887952302,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ! ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.40757751464844,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ! ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ getMethod( ) ) ;",
            "score": 99.39688449435764,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getClass( ) != 'unchecked') ;",
            "score": 99.55811767578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Class ( ) != $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexOfVararg +1) ;",
            "score": 99.52258911132813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL Of CaMeL Vararg + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers >0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.50257025824652,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } if( matchers != null )",
            "score": 99.46149645353618,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } if ( matchers != null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new int [ ] {0",
            "score": 99.45786420036765,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new int [ ] { 0",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { ) ; }",
            "score": 99.4154116981908,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ copy( ) ) ;",
            "score": 99.40629577636719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + copy ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( int ) indexOfVararg ) ;",
            "score": 99.52249145507812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( int ) index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'; } if( matchers == null ) {",
            "score": 99.46111739309211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; } if ( matchers == null ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Class [ ] {",
            "score": 99.45769500732422,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Class [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new UnsupportedOperationException( 'unchecked') ) ;",
            "score": 99.41416931152344,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value [0] ;",
            "score": 99.40531921386719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value [ 0 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new UnsupportedOperationException( ) ;",
            "score": 99.39644949776786,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false Exception null ) ;",
            "score": 99.37967681884766,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false Exception null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked'2) ;",
            "score": 99.55691964285714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked'3047126096857467610) ;",
            "score": 99.55691964285714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked'2007) ;",
            "score": 99.55691964285714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( Invocation ) invocation.getMethod( ) ) ;",
            "score": 99.52117047991071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( Invocation ) invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new UnsupportedOperationException( false ) ;",
            "score": 99.50140059621711,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( matchers == null )",
            "score": 99.45884874131944,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( matchers == null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( ) ; } ) ;",
            "score": 99.39574517144098,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false + name + 'unchecked') ;",
            "score": 99.37948608398438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers [0] != null ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.55683826264881,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers [ 0 ] != null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.getMethod( ) , 'unchecked') ;",
            "score": 99.52078247070312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . get CaMeL Method ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- matchers.size( ) ) ;",
            "score": 99.45732964409723,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - matchers . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked'+1) ;",
            "score": 99.41928100585938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked'+ ) ;",
            "score": 99.4135383157169,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value , this ) ;",
            "score": 99.40438842773438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ getName( ) ) ;",
            "score": 99.39565700954861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>= matchers.length ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.55680338541667,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 >= matchers . length ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.size( ) +1) ;",
            "score": 99.52022705078124,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . size ( ) + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getArguments( ) ) ;",
            "score": 99.498583984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Arguments ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getMethod( ).",
            "score": 99.45492393092105,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Method ( ) .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( log ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.4190673828125,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( log ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( Object [ ] ) ) ;",
            "score": 99.39557961856617,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( Object [ ] ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false , null ) ;",
            "score": 99.37882995605469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getRuntime( ) , 'unchecked') ;",
            "score": 99.49852905273437,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Runtime ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getClass( ) ) ;",
            "score": 99.45645480685764,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size ==0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.45450846354167,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+0+0) ;",
            "score": 99.41895209418402,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 0 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( -1) ) ;",
            "score": 99.41168571920956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( - 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( String ) null ) ;",
            "score": 99.39358520507812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( String ) null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2+2) ;",
            "score": 99.37763977050781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610+3047126096857467610) ;",
            "score": 99.37763977050781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007+2007) ;",
            "score": 99.37763977050781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException String( 'unchecked'+ indexOfVararg + 'unchecked') ;",
            "score": 99.55626860119048,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception String ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getException( ) + 'unchecked') ;",
            "score": 99.49849853515624,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Exception ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getName( ) ) ;",
            "score": 99.45579020182292,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked') ) ; } else {",
            "score": 99.45388312088816,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ ) ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+1) ;",
            "score": 99.41862487792969,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ element + 'unchecked') ;",
            "score": 99.41082763671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + element + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.39338684082031,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ this + 'unchecked') ;",
            "score": 99.3773193359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'!= invocation.getMethod( ) ) ;",
            "score": 99.51824340820312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ != invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length -1, 'unchecked') ;",
            "score": 99.45578342013889,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length - 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ substring(1) ) ;",
            "score": 99.41860064338235,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + substring ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ typeName( ) ) ;",
            "score": 99.39317491319444,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + type CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null ) ; ) ;",
            "score": 99.37661743164062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null ) ; ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers [ indexOfVararg ] ) ;",
            "score": 99.55514090401786,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers [ index CaMeL Of CaMeL Vararg ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ indexOfVararg1) ;",
            "score": 99.518212890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+ indexOfVararg ) ;",
            "score": 99.49747924804687,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) new UnsupportedOperationException( ) ;",
            "score": 99.45326741536458,
            "correctness": "wrong",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new ClassNotFoundException( 'unchecked'+ value + 'unchecked') ;",
            "score": 99.40965440538194,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start , this ) ;",
            "score": 99.40225219726562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.39105631510417,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this + 'unchecked'+ null ) ;",
            "score": 99.37542724609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this + $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getLocation( ) ) ;",
            "score": 99.51787719726562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Location ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true + invocation.getName( ) ) ;",
            "score": 99.49713134765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true + invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- matchers.length -1) ;",
            "score": 99.45439317491319,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - matchers . length - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'; } if( matchers != null ) {",
            "score": 99.45241185238487,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; } if ( matchers != null ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+0+1) ;",
            "score": 99.41815863715277,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 0 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ new Object [ ] { 'unchecked'} ) ;",
            "score": 99.40898980034723,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + new Object [ ] { $STRING$ } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( throw ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.4020767211914,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( throw ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( new ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.39092658547794,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( new ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + + + 'unchecked') ;",
            "score": 99.375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + + + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getName( ) , true ) ;",
            "score": 99.55476888020833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Name ( ) , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getMethod( ) ;",
            "score": 99.45196211965461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Method ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked'+1) ;",
            "score": 99.41781955295139,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.38885857077206,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false + this ) ;",
            "score": 99.37455749511719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new RuntimeException( ) ) ;",
            "score": 99.51723118832237,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Runtime CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0, 'unchecked', 'unchecked') ;",
            "score": 99.45431179470486,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 , $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ matchers ) ;",
            "score": 99.45075225830078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException( 'unchecked') ;",
            "score": 99.4073486328125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name [0] ) ;",
            "score": 99.40153952205883,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ super.getMethod( ) ) ;",
            "score": 99.3887939453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + super . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ null + null ) ;",
            "score": 99.37395368303571,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + null + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'-1,0) ;",
            "score": 99.45380401611328,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - 1 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers -1) ;",
            "score": 99.45065307617188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+( name + 'unchecked') ) ;",
            "score": 99.40721130371094,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + ( name + $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ value( 'unchecked') ) ;",
            "score": 99.40078555836396,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Exception( ) ) ;",
            "score": 99.38850672104779,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2+2) ;",
            "score": 99.37353515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610+3047126096857467610) ;",
            "score": 99.37353515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007+2007) ;",
            "score": 99.37353515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg , Object.class ) ;",
            "score": 99.55390014648438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) , null ) ;",
            "score": 99.51621704101562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + toString( ) + 'unchecked') ;",
            "score": 99.4942691200658,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + to CaMeL String ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg -0) ;",
            "score": 99.453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length <1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.45041232638889,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length < 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+1, 'unchecked') ;",
            "score": 99.41678195529514,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start Exception false ) ;",
            "score": 99.4005355834961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start Exception false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getType( ) ) ;",
            "score": 99.38832600911458,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( 'unchecked'+ toString( ) ) ;",
            "score": 99.37348937988281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( $STRING$ + to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0< matchers.length ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.553564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 < matchers . length ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getType( ) , false ) ;",
            "score": 99.51513061523437,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Type ( ) , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new List( ) ) ;",
            "score": 99.45273724724265,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new List ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) {",
            "score": 99.449951171875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+2) ;",
            "score": 99.41661071777344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+3047126096857467610) ;",
            "score": 99.41661071777344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+2007) ;",
            "score": 99.41661071777344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked', new Exception( 'unchecked') ) ;",
            "score": 99.40701293945312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ , new Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ value ) ;",
            "score": 99.39935302734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else { throw new IllegalArgumentException( ) ; }",
            "score": 99.38702751608456,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; }",
            "score": 99.37224469866071,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ) + 'unchecked';",
            "score": 99.5142578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int } else { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.49327256944444,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int } else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?2:0) ;",
            "score": 99.45240783691406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $NUMBER$ : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?3047126096857467610:0) ;",
            "score": 99.45240783691406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $NUMBER$ : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?2007:0) ;",
            "score": 99.45240783691406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $NUMBER$ : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } for( int }",
            "score": 99.44935607910156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } for ( int }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Object [ ] { 'unchecked'} ) ;",
            "score": 99.40686713324652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Object [ ] { $STRING$ } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value throw null ) ;",
            "score": 99.39912414550781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value throw null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ exp.getMethod( ) ) ;",
            "score": 99.38699001736111,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + exp . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true + indexOfVararg + 'unchecked') ;",
            "score": 99.49317016601563,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg , null ) ;",
            "score": 99.45235188802083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >( matchers.size( ) ) ) {",
            "score": 99.44715711805556,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > ( matchers . size ( ) ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { return ) ; }",
            "score": 99.41560194227431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { return ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ trim( 'unchecked') ) ;",
            "score": 99.3980712890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + trim ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false ) + 'unchecked';",
            "score": 99.37183380126953,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ] , false ) ;",
            "score": 99.55276925223214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ] , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getType( ) + 'unchecked') ;",
            "score": 99.49210205078126,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Type ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( invocation != null ) {",
            "score": 99.44612844366776,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( invocation != null ) {",
            "failed_triggering": "26/26",
            "failed_non_triggering": "20"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start , value ) ;",
            "score": 99.41446685791016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name1+ 'unchecked') ;",
            "score": 99.40504365808823,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name 1 + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ command + 'unchecked') ;",
            "score": 99.38654327392578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + command + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalStateException( 'unchecked') ;",
            "score": 99.37061309814453,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg + 'unchecked'+1) ;",
            "score": 99.55232543945313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexOfVararg >=1) ;",
            "score": 99.49193115234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL Of CaMeL Vararg >= 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( int )1) ;",
            "score": 99.4502312155331,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( int ) 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers ) ;",
            "score": 99.44484165736607,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start , value ) ;",
            "score": 99.41439819335938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start , value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new IllegalArgumentException( 'unchecked'+ name ) ;",
            "score": 99.38618738511029,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers [ length -1] ) ;",
            "score": 99.55229749177632,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers [ length - 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true + indexOfVararg -1) ;",
            "score": 99.49161376953126,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true + index CaMeL Of CaMeL Vararg - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { indexOfVararg ++ ;",
            "score": 99.4444644325658,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { index CaMeL Of CaMeL Vararg ++ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name , true ) ;",
            "score": 99.39762878417969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ; }",
            "score": 99.38617706298828,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false + this + 'unchecked') ;",
            "score": 99.36940002441406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false + this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException(0) ) ;",
            "score": 99.51270751953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', invocation.getMessage( ) ) ;",
            "score": 99.49132080078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , invocation . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.false ) ;",
            "score": 99.44910346137152,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+0, false ) ;",
            "score": 99.41398790147569,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 0 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name , this ) ;",
            "score": 99.39705657958984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg - -1) ;",
            "score": 99.55192057291667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ) != null ) ;",
            "score": 99.51193237304688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) != null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0) ;",
            "score": 99.49086216517857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, 'unchecked') ; }",
            "score": 99.44797650505515,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( invocation.getMethod( ).isVarArgs( ) )",
            "score": 99.44413677014802,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( invocation . get CaMeL Method ( ) . is CaMeL Var CaMeL Args ( ) )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1, 'unchecked'+1) ;",
            "score": 99.41361490885417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 , $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).getMessage( ) ;",
            "score": 99.4025519875919,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . get CaMeL Message ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0) ;",
            "score": 99.3966064453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name + + ) ;",
            "score": 99.36815643310547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name + + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) *new UnsupportedOperationException( ) ;",
            "score": 99.551513671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) * new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.51010131835938,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( String ) Object.class ) ;",
            "score": 99.49069053248355,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( String ) Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0,0) ;",
            "score": 99.44668579101562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0|| matchers.size( ) >0)",
            "score": 99.44379625822368,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 || matchers . size ( ) > 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value , 'unchecked') ;",
            "score": 99.39606475830078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } ) ;",
            "score": 99.38440704345703,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ true + null ) ;",
            "score": 99.36754608154297,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + true + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getState( ) ) ;",
            "score": 99.50948486328124,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL State ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.44635009765625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+ matchers ) ;",
            "score": 99.44127655029297,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1, 'unchecked'+1) ;",
            "score": 99.41337585449219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 , $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+( name -1) ) ;",
            "score": 99.40230984157986,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( name - 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ start ,0) ;",
            "score": 99.39556884765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + start , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; } catch( )",
            "score": 99.38425699869792,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } catch ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null + value ) ;",
            "score": 99.36640930175781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ indexOfVararg + 'unchecked') ;",
            "score": 99.55133666992188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getMethod( ) , null ) ;",
            "score": 99.50927734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Method ( ) , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) -1) ;",
            "score": 99.49029541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked'+ invocation ) ;",
            "score": 99.44095611572266,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ + invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+0, 'unchecked') ;",
            "score": 99.41293674045139,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( Object [ ] ) null ) ; }",
            "score": 99.38397894965277,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( Object [ ] ) null ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ indexOfVararg ) ; }",
            "score": 99.50925903320312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'-0,0) ;",
            "score": 99.44557100183823,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ - 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers ) ; } else",
            "score": 99.4388427734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ toString( ) + ) ;",
            "score": 99.41187241498162,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + to CaMeL String ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value( false ) ) ;",
            "score": 99.39457433363971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ( false ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ this.getMethod( ) ) ;",
            "score": 99.38379584418402,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + this . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this + 'unchecked'+ false ) ;",
            "score": 99.36603546142578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this + $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getName( ) , true ) ;",
            "score": 99.5509033203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Name ( ) , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexOfVararg -1) ;",
            "score": 99.50892333984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL Of CaMeL Vararg - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getException( ) , 'unchecked') ;",
            "score": 99.48956909179688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Exception ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers1+ 'unchecked') ;",
            "score": 99.43856991038604,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers 1 + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessException( 'unchecked'+ toString( ) ) ;",
            "score": 99.41141764322917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ + to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalArgumentException( 'unchecked') ; } ;",
            "score": 99.3996517783717,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start( ) + ) ;",
            "score": 99.39441636029412,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String [ ) ;",
            "score": 99.38274383544922,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String [ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + ) ;",
            "score": 99.36587289663461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(1) ;",
            "score": 99.50807698567708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers , false ) ;",
            "score": 99.4373550415039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { ; }",
            "score": 99.381591796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name + 'unchecked'+ null ) ;",
            "score": 99.36582946777344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name + $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) ,1) ;",
            "score": 99.50750122070312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+ start ,0) ;",
            "score": 99.41083441840277,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + start , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Integer( ) ) ;",
            "score": 99.39467486213235,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Integer ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length !=0) throw new UnsupportedOperationException( ) ;",
            "score": 99.3936767578125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation + 'unchecked') ;",
            "score": 99.38140106201172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', this.getClass( ) ) ;",
            "score": 99.5504150390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , this . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ { 'unchecked'} ) ;",
            "score": 99.44366455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + { $STRING$ } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start( 'unchecked') ;",
            "score": 99.39286041259766,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.38133239746094,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg *1) ;",
            "score": 99.5501953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg * 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'== invocation.getMethod( ) ) ;",
            "score": 99.5068115234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ == invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.48824734157986,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { invocation ;",
            "score": 99.44125027126736,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { invocation ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked').toString( ) ;",
            "score": 99.3941650390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) . to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+2+0) ;",
            "score": 99.3927001953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+3047126096857467610+0) ;",
            "score": 99.3927001953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+2007+0) ;",
            "score": 99.3927001953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.38095272288604,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + ] ) ;",
            "score": 99.36308288574219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new UnsupportedOperationException( 'unchecked'+ ) ;",
            "score": 99.54939575195313,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?0: -1) ;",
            "score": 99.44098259420956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 0 : - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { synchronized( matchers ) {",
            "score": 99.43306692023026,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { synchronized ( matchers ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+ name ) ;",
            "score": 99.409423828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ClassNotFoundException( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.39413791232639,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name - 'unchecked') ;",
            "score": 99.39148712158203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name - $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked'+ ) ;",
            "score": 99.38071017795139,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name + 'unchecked') ;",
            "score": 99.36280168805804,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg , 'unchecked') ;",
            "score": 99.54800415039062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getType( ) , true ) ;",
            "score": 99.5064453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Type ( ) , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length + 'unchecked') ;",
            "score": 99.4315414428711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [ ++1] ) ;",
            "score": 99.40940228630515,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ ++ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( char )1) ;",
            "score": 99.39148667279412,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( char ) 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new RuntimeException( 'unchecked') ; }",
            "score": 99.38004302978516,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Runtime CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ l ) ;",
            "score": 99.36274719238281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + l ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ) == 'unchecked') ;",
            "score": 99.487451171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) == $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( captureArgumentsFrom( invocation ) ) ;",
            "score": 99.43092747738487,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( capture CaMeL Arguments CaMeL From ( invocation ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start + 'unchecked') ;",
            "score": 99.3937759399414,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name , false ) ;",
            "score": 99.39127349853516,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.37991153492646,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+( = ) ) ;",
            "score": 99.36241149902344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( = ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.toString( ) ) ;",
            "score": 99.50602416992187,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0, this ) ;",
            "score": 99.43756103515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { if( matchers.get(",
            "score": 99.43008761935764,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { if ( matchers . get (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [ : 'unchecked') ;",
            "score": 99.40898895263672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this.( ) + 'unchecked') ;",
            "score": 99.39273231907895,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this . ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ 'unchecked'+1) ;",
            "score": 99.39047241210938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked'+ indexOfVararg + ) ;",
            "score": 99.54754638671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ + index CaMeL Of CaMeL Vararg + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', value , 'unchecked') ;",
            "score": 99.43743133544922,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , value , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked'+ value ) ;",
            "score": 99.40802680121527,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new String( value ) ) ;",
            "score": 99.39158121744792,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new String ( value ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ 'unchecked'+0) ;",
            "score": 99.39029693603516,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( Object [ ] )1) ;",
            "score": 99.54629677220395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( Object [ ] ) 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( null ) ) ;",
            "score": 99.50545043945313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( null ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexCaMeL",
            "score": 99.43612905649039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ matchers + 'unchecked') ;",
            "score": 99.42936706542969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + matchers + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getClass( ) + 'unchecked'+ ) ;",
            "score": 99.39119037828948,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Class ( ) + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) throw new IllegalArgumentException( ) ;",
            "score": 99.38995720358456,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "25/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalAccessException( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.37657928466797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ this ) ;",
            "score": 99.35870361328125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) , 'unchecked''unchecked') ;",
            "score": 99.54615420386905,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) , $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.captureFrom( ) ) ;",
            "score": 99.50455932617187,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . capture CaMeL From ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null + invocation.getName( ) ) ;",
            "score": 99.48564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null + invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ length -1) ;",
            "score": 99.43553251378677,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + length - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers + 'unchecked') ; }",
            "score": 99.42892635569854,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [2] ) ;",
            "score": 99.40740966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ $NUMBER$ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [3047126096857467610] ) ;",
            "score": 99.40740966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ $NUMBER$ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [2007] ) ;",
            "score": 99.40740966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ $NUMBER$ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked'+ name ) ;",
            "score": 99.39094623766448,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+0+1) ;",
            "score": 99.38993072509766,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 0 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'|| indexOfVararg +1) ;",
            "score": 99.50440063476563,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || index CaMeL Of CaMeL Vararg + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getName( ) -1) ;",
            "score": 99.48550415039062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Name ( ) - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'-1, 'unchecked') ;",
            "score": 99.43464929917279,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ - 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers + 'unchecked') ; } else",
            "score": 99.42864990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + $STRING$ ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2+ name + 'unchecked') ;",
            "score": 99.40738932291667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610+ name + 'unchecked') ;",
            "score": 99.40738932291667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007+ name + 'unchecked') ;",
            "score": 99.40738932291667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getClassName( ) ) ;",
            "score": 99.39065890842014,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Class CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ! ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.38974178538604,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ! ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getLocation( ) ) ;",
            "score": 99.37586127387152,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Location ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null Exception null ) ;",
            "score": 99.35722351074219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null Exception null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + this.getName( ) + 'unchecked') ;",
            "score": 99.54493350074405,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + this . get CaMeL Name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getMethod( ) , null ) ;",
            "score": 99.5035400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Method ( ) , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', true , null ) ;",
            "score": 99.43414306640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , true , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new RuntimeException( 'unchecked') ) ; }",
            "score": 99.4273745888158,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Runtime CaMeL Exception ( $STRING$ ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+1,0) ;",
            "score": 99.40732828776042,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 1 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ 'unchecked') ;",
            "score": 99.3893051147461,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } if( )",
            "score": 99.37554168701172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } if ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ false ) ;",
            "score": 99.35663713727679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg1, true ) ;",
            "score": 99.544921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg 1 , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&&0< indexOfVararg ) ;",
            "score": 99.50330810546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && 0 < index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getTypeName( ) ) ;",
            "score": 99.4850830078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Type CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length -2) ;",
            "score": 99.43315124511719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length -3047126096857467610) ;",
            "score": 99.43315124511719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length -2007) ;",
            "score": 99.43315124511719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ getName( ) ) ; }",
            "score": 99.42734888980263,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + get CaMeL Name ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+0,1) ;",
            "score": 99.40686713324652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 0 , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <0) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.38926786534927,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'( name + 'unchecked') ) ;",
            "score": 99.37468405330883,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ( name + $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.size( ) +1) ;",
            "score": 99.50276692708333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . size ( ) + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2,0) ;",
            "score": 99.43285369873047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-3047126096857467610,0) ;",
            "score": 99.43285369873047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2007,0) ;",
            "score": 99.43285369873047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else",
            "score": 99.42664513221153,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , null , false ) ;",
            "score": 99.4066162109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , null , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else { throw new UnsupportedOperationException( ) ;",
            "score": 99.37405395507812,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+ null ) ;",
            "score": 99.35592651367188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >=0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.5445556640625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length >= 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'|| indexOfVararg -1) ;",
            "score": 99.50239868164063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || index CaMeL Of CaMeL Vararg - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, 'unchecked''unchecked') ;",
            "score": 99.4325310202206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else {",
            "score": 99.42609049479167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name1+ 'unchecked') ;",
            "score": 99.38730755974265,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name 1 + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( ) ; } }",
            "score": 99.37345616957721,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; super.captureFrom( invocation ) ;",
            "score": 99.50164794921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; super . capture CaMeL From ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?0:0, ) ;",
            "score": 99.43202119715073,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 0 : 0 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ matchers + 'unchecked') ;",
            "score": 99.42554582868304,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + matchers + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked'+( ) + 'unchecked') ;",
            "score": 99.38723273026316,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.37153894761029,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked';",
            "score": 99.35402018229166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getField( ) ) ;",
            "score": 99.5015869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Field ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers >=0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.48359510633681,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers >= 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value( ) + 'unchecked') ;",
            "score": 99.40587700737848,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start ) ;",
            "score": 99.38833182198661,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ -1+ 'unchecked') ;",
            "score": 99.38702751608456,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + - 1 + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { ; throw new UnsupportedOperationException( ) ; }",
            "score": 99.3714599609375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ indexOfVararg ] ) ;",
            "score": 99.54276123046876,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getProperty( ) ) ;",
            "score": 99.501220703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Property ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getType( ) + 'unchecked') ;",
            "score": 99.4831787109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Type ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, 'unchecked', ) ;",
            "score": 99.43110926011029,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $STRING$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } for( int ) {",
            "score": 99.42499138327206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } for ( int ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ equals( null ) ) ;",
            "score": 99.38818359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + equals ( null ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ -1+ 'unchecked') ;",
            "score": 99.38605095358456,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + - 1 + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalArgumentException( ) ; } ;",
            "score": 99.3712158203125,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ else ) ;",
            "score": 99.35295104980469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + else ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getName( ) , this ) ;",
            "score": 99.54210205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Name ( ) , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(1, 'unchecked'+ indexOfVararg ) ;",
            "score": 99.50106201171874,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 1 , $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+1, 'unchecked') ;",
            "score": 99.40520562065973,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+(( Integer ) ) ) ;",
            "score": 99.38603379991319,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( ( Integer ) ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else if( ;",
            "score": 99.37099322150735,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else if ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ; } return ) ;",
            "score": 99.35220336914062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } return ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String ) invocation.getType( ) ) ;",
            "score": 99.54192243303571,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg , matchers ) ;",
            "score": 99.50076904296876,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked''unchecked', this ) ;",
            "score": 99.42932891845703,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $STRING$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result = invocation.getRawArguments( ).length -1;",
            "score": 99.42484777113971,
            "correctness": "uncompilable",
            "tokenized_patch": "result = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Double(1.0) ) ;",
            "score": 99.40443929036458,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Double ( 1 . 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name( ) + ) ;",
            "score": 99.38733628216912,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return null ; } throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.3689956665039,
            "correctness": "uncompilable",
            "tokenized_patch": "return null ; } throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getName( ) , this ) ;",
            "score": 99.541259765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Name ( ) , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.true ) ;",
            "score": 99.42857530381944,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } if( matchers == null )",
            "score": 99.4243099814967,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } if ( matchers == null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ else ) ;",
            "score": 99.38680267333984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + else ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ UnsupportedOperationException.) ;",
            "score": 99.38457288240132,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + Unsupported CaMeL Operation CaMeL Exception . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( = ) { throw new IllegalArgumentException( ) ;",
            "score": 99.35183715820312,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( = ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers <=0) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.540283203125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers <= 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', getName( ) + 'unchecked') ;",
            "score": 99.48178100585938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , get CaMeL Name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] {1",
            "score": 99.42802877987133,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { 1",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value , true ) ;",
            "score": 99.3863296508789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object( ) ) ;",
            "score": 99.38405474494485,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null + this ) ;",
            "score": 99.35122680664062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getName( ) + 'unchecked') ;",
            "score": 99.5402599516369,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Name ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', getTypeName( ) ) ;",
            "score": 99.48170776367188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , get CaMeL Type CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', null , false ) ;",
            "score": 99.42559051513672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , null , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers +1) ;",
            "score": 99.4229736328125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2+ 'unchecked') ;",
            "score": 99.40274810791016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610+ 'unchecked') ;",
            "score": 99.40274810791016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007+ 'unchecked') ;",
            "score": 99.40274810791016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ start ) ;",
            "score": 99.38558959960938,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException )( new Exception( 'unchecked') ) ;",
            "score": 99.38376752068015,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) ( new Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg1) ;",
            "score": 99.4991455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', null ,0) ;",
            "score": 99.42552185058594,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , null , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "boolean equals = false ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.3679558249081,
            "correctness": "uncompilable",
            "tokenized_patch": "boolean equals = false ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked'+ null ) ;",
            "score": 99.35115051269531,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg | 'unchecked') ;",
            "score": 99.5397705078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg | $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) + false ) ;",
            "score": 99.49911499023438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.this ) ;",
            "score": 99.42497422960069,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+1, false ) ;",
            "score": 99.40233018663194,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ format( ) ) ;",
            "score": 99.38388061523438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + format ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( 'unchecked', new Exception( 'unchecked') ) ;",
            "score": 99.38237762451172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( $STRING$ , new Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } return null ;",
            "score": 99.36752319335938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } return null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null + name ) ;",
            "score": 99.3506088256836,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg + + 'unchecked') ;",
            "score": 99.5393298921131,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked': false ) ;",
            "score": 99.4988021850586,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ : false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked'.getName( ) ) ;",
            "score": 99.48087158203126,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'?0:0) ;",
            "score": 99.42485495174633,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ? 0 : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1, false ) ;",
            "score": 99.40229143415179,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ trim( ) + ) ;",
            "score": 99.38358800551471,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + trim ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked'+ this ) ;",
            "score": 99.38180881076389,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } checkAccess( ) ;",
            "score": 99.36714002821181,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } check CaMeL Access ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null + true ) ;",
            "score": 99.34998321533203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( class.getName( ) , 'unchecked') ;",
            "score": 99.53924560546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( class . get CaMeL Name ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getMethod( ) + 'unchecked') ;",
            "score": 99.4986328125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Method ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', invocation ) ;",
            "score": 99.424560546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start , start ) ;",
            "score": 99.42130279541016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1, this ) ;",
            "score": 99.40219116210938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+( ) + 'unchecked') ;",
            "score": 99.3814697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ; } else { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.36631864659927,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; } else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+ null ) ;",
            "score": 99.34909057617188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getAnnotation( ) ) ;",
            "score": 99.4982666015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Annotation ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { $STRING$",
            "score": 99.4244025735294,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2+1, null ) ;",
            "score": 99.40200466579861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610+1, null ) ;",
            "score": 99.40200466579861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007+1, null ) ;",
            "score": 99.40200466579861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this.name + 'unchecked') ;",
            "score": 99.38096788194444,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this . name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( new ) { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.36562771267361,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( new ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg 'unchecked'+ 'unchecked') ;",
            "score": 99.53848121279762,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg $STRING$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ) ; return ;",
            "score": 99.49826049804688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ; return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', null , true ) ;",
            "score": 99.42436218261719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , null , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null : new UnsupportedOperationException( 'unchecked'+ matchers ) ;",
            "score": 99.42089080810547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null : new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1, false , null ) ;",
            "score": 99.40199788411458,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , false , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object( ) ) ;",
            "score": 99.38090245863971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ exp( ) ) ;",
            "score": 99.36555480957031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + exp ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getMessage( ) , true ) ;",
            "score": 99.53813244047619,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Message ( ) , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getName( ) , false ) ;",
            "score": 99.49808959960937,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Name ( ) , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false + invocation.getName( ) ) ;",
            "score": 99.48035278320313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false + invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg < matchers.size( ) ) { return ;",
            "score": 99.42348225911458,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < matchers . size ( ) ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ) ; } else {",
            "score": 99.41960144042969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+1+1) ;",
            "score": 99.40176730685764,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 1 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value -1) ;",
            "score": 99.38063049316406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( ) ) ;",
            "score": 99.3478515625,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& matchers.size( ) >0) ;",
            "score": 99.53743896484374,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && matchers . size ( ) > 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getName( ) , this ) ;",
            "score": 99.49752807617188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Name ( ) , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this.getType( ) ) ;",
            "score": 99.48021240234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?0: 'unchecked') ;",
            "score": 99.42162322998047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 0 : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers ) ; }",
            "score": 99.4193359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+(0) ) ;",
            "score": 99.3819580078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).toString( ) ;",
            "score": 99.37985409007354,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ) { throw new IllegalArgumentException( 'unchecked') ; }",
            "score": 99.36460248161765,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ null ) ;",
            "score": 99.34754289899554,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& matchers.size( ) -1) ;",
            "score": 99.53700561523438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && matchers . size ( ) - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getBytes( ) ) ;",
            "score": 99.49752807617188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Bytes ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'; }",
            "score": 99.41933186848958,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null ; } else { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.40072970920139,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null ; } else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name , 'unchecked') ;",
            "score": 99.38188171386719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } return false ;",
            "score": 99.36380004882812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } return false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ null +2) ;",
            "score": 99.34726388113839,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + null + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ null +3047126096857467610) ;",
            "score": 99.34726388113839,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + null + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ null +2007) ;",
            "score": 99.34726388113839,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + null + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getMessage( ) , 'unchecked') ;",
            "score": 99.536865234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Message ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getMethod( ) , false ) ;",
            "score": 99.4974853515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Method ( ) , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked''unchecked', null ) ;",
            "score": 99.42139434814453,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { synchronized( invocation ) {",
            "score": 99.41827713815789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { synchronized ( invocation ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked'+ value ) ) ;",
            "score": 99.40029568142361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ + value ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ size( ) ) ;",
            "score": 99.38162231445312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this , 'unchecked') ;",
            "score": 99.36285400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ null + false ) ;",
            "score": 99.34688568115234,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + null + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( Object [ ] ) 'unchecked') ;",
            "score": 99.53654399671052,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( Object [ ] ) $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ;",
            "score": 99.42063993566177,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers == 'unchecked') ;",
            "score": 99.41783905029297,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers == $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException(( Object [ ] ) null ) ;",
            "score": 99.36228314568015,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ( Object [ ] ) null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg + 'unchecked'+ ) ;",
            "score": 99.53623744419643,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false + indexOfVararg + 'unchecked') ;",
            "score": 99.47787475585938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',0) ;",
            "score": 99.42055838448661,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } } } ) ;",
            "score": 99.41763305664062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } } } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+2) ;",
            "score": 99.39974975585938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+3047126096857467610) ;",
            "score": 99.39974975585938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+2007) ;",
            "score": 99.39974975585938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( ) ;",
            "score": 99.38074747721355,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ element + 'unchecked') ;",
            "score": 99.37638092041016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + element + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ) { throw new UnsupportedOperationException( ) ; } ;",
            "score": 99.36199592141544,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw throw new UnsupportedOperationException( ) ;",
            "score": 99.34393310546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg -0) ;",
            "score": 99.53536987304688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- indexOfVararg ) ;",
            "score": 99.49673800998264,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', name , 'unchecked') ;",
            "score": 99.42015075683594,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , name , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( matchers == null )",
            "score": 99.41483989514802,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( matchers == null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ true ) ;",
            "score": 99.33839634486607,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg , l ) ;",
            "score": 99.49663696289062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , l ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( L.getRuntime( ) , 'unchecked') ;",
            "score": 99.47755737304688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( L . get CaMeL Runtime ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', value -1) ;",
            "score": 99.41959381103516,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , value - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+1, ) ;",
            "score": 99.3994140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( !=0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.37998334099265,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( super.getMethod( ) ) ;",
            "score": 99.37490505642361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( super . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ) ; ; }",
            "score": 99.3599853515625,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null ;",
            "score": 99.33829439603366,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&&1< indexOfVararg ) ;",
            "score": 99.49599609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && 1 < index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'true ) ;",
            "score": 99.41957444411058,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final int indexOfVararg = matchers.size( ) -1;",
            "score": 99.41147748161765,
            "correctness": "uncompilable",
            "tokenized_patch": "final int index CaMeL Of CaMeL Vararg = matchers . size ( ) - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( ; ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.35987764246323,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + ) ;",
            "score": 99.33791879507211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOf(1) ) ;",
            "score": 99.5343017578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ? new UnsupportedOperationException( ) ;",
            "score": 99.495703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ? new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==1) throw new UnsupportedOperationException( ) ;",
            "score": 99.41139131433823,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 1 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ,0, false ) ;",
            "score": 99.39830186631944,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , 0 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+0+0) ;",
            "score": 99.37942940848214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 0 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "boolean equals = false ; throw new UnsupportedOperationException( ) ;",
            "score": 99.35977172851562,
            "correctness": "wrong",
            "tokenized_patch": "boolean equals = false ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked';",
            "score": 99.33728966346153,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getName( ) , false ) ;",
            "score": 99.5341796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Name ( ) , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getName( ) , null ) ;",
            "score": 99.49553833007812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Name ( ) , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&&0<0) ;",
            "score": 99.41732788085938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && 0 < 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.41025904605263,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1, null , false ) ;",
            "score": 99.39820014105902,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , null , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( throw ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.37932272518383,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( throw ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new Error( 'unchecked') ) ;",
            "score": 99.37342834472656,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new Error ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Runnable( ) { throw new RuntimeException( ) ;",
            "score": 99.3337890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runnable ( ) { throw new Runtime CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ] , null ) ;",
            "score": 99.5341564360119,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ] , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'!= invocation.getName( ) ) ;",
            "score": 99.49520874023438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ != invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } for( int",
            "score": 99.41706085205078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; if( matchers == null ) {",
            "score": 99.40909830729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; if ( matchers == null ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( >=0) { throw new IllegalArgumentException( ) ;",
            "score": 99.37897805606617,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( >= 0 ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+( -1) ) ;",
            "score": 99.3732551125919,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( - 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else { throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.35914522058823,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( +0+ indexOfVararg + 'unchecked') ;",
            "score": 99.53308686755952,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + 0 + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true && indexOfVararg >=0) ;",
            "score": 99.47578735351563,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true && index CaMeL Of CaMeL Vararg >= 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',1, 'unchecked') ;",
            "score": 99.41695404052734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) == matchers.size( ) ) {",
            "score": 99.40890502929688,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) == matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1, 'unchecked', null ) ;",
            "score": 99.39649115668402,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value !=0) ;",
            "score": 99.37846374511719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value != 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getClass( ) ) ;",
            "score": 99.37315368652344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( ; ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.35885799632354,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { ) ;",
            "score": 99.33267211914062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length !=0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.53297119140625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0) { indexOfVararg ++ ; }",
            "score": 99.4929931640625,
            "correctness": "plausible",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 ) { index CaMeL Of CaMeL Vararg ++ ; }",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( + this.getName( ) + 'unchecked';",
            "score": 99.47500610351562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + this . get CaMeL Name ( ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers -0) ;",
            "score": 99.41665649414062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } if( matchers != null ) {",
            "score": 99.40793328536184,
            "correctness": "wrong",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } if ( matchers != null ) {",
            "failed_triggering": "25/26",
            "failed_non_triggering": "20"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ toString( name ) ) ;",
            "score": 99.39641974954044,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + to CaMeL String ( name ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) throw new UnsupportedOperationException( 'unchecked') ; return ;",
            "score": 99.35821892233456,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + ) ; }",
            "score": 99.33071899414062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0, false ) ;",
            "score": 99.4148941040039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation ) ; } else {",
            "score": 99.4078369140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return false ; } else { throw new UnsupportedOperationException( ) ; }",
            "score": 99.39618598090277,
            "correctness": "uncompilable",
            "tokenized_patch": "return false ; } else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value ;",
            "score": 99.37730994591347,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.35698590959821,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this + ) ;",
            "score": 99.330517578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked'0) ;",
            "score": 99.53105236235119,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked': true ) ;",
            "score": 99.49215698242188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ : true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false + indexOfVararg -1) ;",
            "score": 99.47413940429688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false + index CaMeL Of CaMeL Vararg - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Object.class ) ;",
            "score": 99.414306640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert invocation.getMethod( ).isVarArgs( ) ;",
            "score": 99.40660264756944,
            "correctness": "plausible",
            "tokenized_patch": "assert invocation . get CaMeL Method ( ) . is CaMeL Var CaMeL Args ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+1, ) ;",
            "score": 99.3960822610294,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start Exception null ) ;",
            "score": 99.37654876708984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start Exception null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException( 'unchecked'+ value + 'unchecked') ;",
            "score": 99.371337890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new RuntimeException( ) ; }",
            "score": 99.35576985677083,
            "correctness": "wrong",
            "tokenized_patch": "synchronized ( this ) { throw new Runtime CaMeL Exception ( ) ; }",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked'+ else",
            "score": 99.32813262939453,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.53078099300987,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getType( ) ) ;",
            "score": 99.49198404947917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] {",
            "score": 99.4140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } for( int )",
            "score": 99.40620422363281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } for ( int )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+0, ) ;",
            "score": 99.39597455193015,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 0 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked').getMessage( ) ;",
            "score": 99.37034098307292,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) . get CaMeL Message ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list + 'unchecked') ;",
            "score": 99.35417175292969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + 'unchecked'+ else",
            "score": 99.32758331298828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked') ;",
            "score": 99.53019205729167,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0, 'unchecked') ;",
            "score": 99.41366577148438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert matchers.size( ) > matchers.size( ) -1;",
            "score": 99.4058609008789,
            "correctness": "plausible",
            "tokenized_patch": "assert matchers . size ( ) > matchers . size ( ) - 1 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if( name == null ) throw new UnsupportedOperationException( ) ;",
            "score": 99.39553653492646,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name == null ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'.toString( ) ) ;",
            "score": 99.3699951171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new String [ ] { ) ;",
            "score": 99.35397677951389,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new String [ ] { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + 'unchecked';",
            "score": 99.32699381510416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.getType( ) , 'unchecked') ;",
            "score": 99.49113159179687,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . get CaMeL Type ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked';",
            "score": 99.4727847450658,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'-1, null ) ;",
            "score": 99.41171264648438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value !=0) throw new UnsupportedOperationException( ) ;",
            "score": 99.37505026424633,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value != 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new UnsupportedOperationException( ) ) return ;",
            "score": 99.36919403076172,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( new ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.35265395220588,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( new ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.3268291766827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'|| indexOfVararg <1) ;",
            "score": 99.52845458984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || index CaMeL Of CaMeL Vararg < 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ element.getName( ) ) ;",
            "score": 99.49091796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + element . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',2, 'unchecked') ;",
            "score": 99.41156768798828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',3047126096857467610, 'unchecked') ;",
            "score": 99.41156768798828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',2007, 'unchecked') ;",
            "score": 99.41156768798828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getMessage( ) ) ;",
            "score": 99.404296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value Exception null ) ;",
            "score": 99.37393951416016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value Exception null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked') ; } catch( ;",
            "score": 99.35234917534723,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } catch ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked';",
            "score": 99.32442220052083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true && indexOfVararg <0) ;",
            "score": 99.47271118164062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true && index CaMeL Of CaMeL Vararg < 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'false ) ;",
            "score": 99.4111797626202,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'Exception.getMessage( ) ) ;",
            "score": 99.40420692845395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ Exception . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked'+ ) ) ;",
            "score": 99.39485437729779,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ + ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ trim( ) ) ;",
            "score": 99.37367248535156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + trim ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ; } throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.35216471354167,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; } throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ l ) ;",
            "score": 99.32417515345982,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + l ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length <0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.52747192382813,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( ) , ) ;",
            "score": 99.49071655273437,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', ) ;",
            "score": 99.41066331129808,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers + ) ; }",
            "score": 99.40394592285156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+1,1) ;",
            "score": 99.39418538411458,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+ false ) ;",
            "score": 99.3731689453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ new String( name ) ) ;",
            "score": 99.36707305908203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + new String ( name ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked') ; }",
            "score": 99.35194307215073,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ) , 'unchecked''unchecked') ;",
            "score": 99.52733212425595,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) , $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getRuntime( ) ) ;",
            "score": 99.48986206054687,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'|| indexOfVararg >0) ;",
            "score": 99.47227172851562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || index CaMeL Of CaMeL Vararg > 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getException( ) ) ;",
            "score": 99.40914577907986,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { try {",
            "score": 99.403076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { try {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( UnsupportedOperationException.class ) ;",
            "score": 99.39414469401042,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( throw != null ) throw new UnsupportedOperationException( ) ;",
            "score": 99.37265912224265,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( throw != null ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else { return ;",
            "score": 99.36653406479779,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } synchronized( this )",
            "score": 99.35173034667969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } synchronized ( this )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Throwable( ) ;",
            "score": 99.32203674316406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Throwable ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'[ indexOfVararg -1] ) ;",
            "score": 99.52716936383929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ [ index CaMeL Of CaMeL Vararg - 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getMethod( ) , true ) ;",
            "score": 99.488671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Method ( ) , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'-1, 'unchecked') ;",
            "score": 99.40862165178571,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ - 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( captureArgumentsFrom( matchers ) ) ;",
            "score": 99.40141858552632,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( capture CaMeL Arguments CaMeL From ( matchers ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0+2) ;",
            "score": 99.3723373413086,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0+3047126096857467610) ;",
            "score": 99.3723373413086,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0+2007) ;",
            "score": 99.3723373413086,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new NoSuchMethodException( ) ; }",
            "score": 99.36576334635417,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.35131117876838,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Exception( ) ;",
            "score": 99.32176971435547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg1, false ) ;",
            "score": 99.52714611235119,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg 1 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getParent( ) , 'unchecked') ;",
            "score": 99.48821411132812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Parent ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'-0, 'unchecked') ;",
            "score": 99.4083023071289,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers ) ; } }",
            "score": 99.40107727050781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value != null ) throw new UnsupportedOperationException( ) ;",
            "score": 99.39318129595588,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value != null ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if <0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.37118709788604,
            "correctness": "uncompilable",
            "tokenized_patch": "if < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalArgumentException( 'unchecked'+ value ) ;",
            "score": 99.36569695723684,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( ; ; ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.35049777560764,
            "correctness": "wrong",
            "tokenized_patch": "for ( ; ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+2) ;",
            "score": 99.32100132533482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+3047126096857467610) ;",
            "score": 99.32100132533482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+2007) ;",
            "score": 99.32100132533482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg -1, ) ;",
            "score": 99.5265880766369,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'!= invocation.getType( ) ) ;",
            "score": 99.48720703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ != invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked') ;",
            "score": 99.47166090745192,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0, null ) ;",
            "score": 99.40808868408203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers -1) ; }",
            "score": 99.40029009650735,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers - 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+0, 'unchecked') ;",
            "score": 99.39286295572917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list( 'unchecked') ;",
            "score": 99.37108612060547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.34981282552083,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.5264956825658,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getName( ) , true ) ;",
            "score": 99.48692626953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Name ( ) , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.toString( ) ) ;",
            "score": 99.40800645616319,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . to CaMeL String ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start + 'unchecked') ; }",
            "score": 99.40004595588235,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , false , false ) ;",
            "score": 99.39120822482639,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , false , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>0) throw new UnsupportedOperationException( ) ;",
            "score": 99.3705695657169,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 > 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+( ) + 'unchecked') ;",
            "score": 99.3653923483456,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( ) { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.34824505974265,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ) ;",
            "score": 99.32081095377605,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getMethod( ) , 'unchecked') ;",
            "score": 99.48692016601562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Method ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2) ;",
            "score": 99.40794959435097,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'3047126096857467610) ;",
            "score": 99.40794959435097,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2007) ;",
            "score": 99.40794959435097,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) != matchers.size( ) ) {",
            "score": 99.39885711669922,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) != matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return false ; } else { throw new UnsupportedOperationException( ) ;",
            "score": 99.39107019761029,
            "correctness": "uncompilable",
            "tokenized_patch": "return false ; } else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.) ;",
            "score": 99.36527745863971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } catch( )",
            "score": 99.34804400275735,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } catch ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] ;",
            "score": 99.31554412841797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2, null ) ;",
            "score": 99.40715789794922,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-3047126096857467610, null ) ;",
            "score": 99.40715789794922,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2007, null ) ;",
            "score": 99.40715789794922,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { int matchers =0;",
            "score": 99.3976986533717,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { int matchers = 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ,1,0) ;",
            "score": 99.39088270399306,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , 1 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list( ) ) ;",
            "score": 99.37000274658203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).getLocalizedMessage( ) ;",
            "score": 99.36459832442434,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . get CaMeL Localized CaMeL Message ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Object value = null ; throw new UnsupportedOperationException( ) ;",
            "score": 99.34778594970703,
            "correctness": "wrong",
            "tokenized_patch": "Object value = null ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getPackage( ) ) ;",
            "score": 99.48621215820313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Package ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'?0:0) ;",
            "score": 99.4063491821289,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? 0 : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length ) ;",
            "score": 99.39727783203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start ,0,0) ;",
            "score": 99.39064534505208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start , 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( new ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.36929321289062,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( new ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } throw new ) ;",
            "score": 99.3473129272461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } throw new ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ; throw new UnsupportedOperationException( ) ;",
            "score": 99.31026517427884,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length !=1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.52503051757813,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length != 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getModifiers( ) ) ;",
            "score": 99.48580932617188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Modifiers ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + getName( ) + ) ;",
            "score": 99.46986897786458,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + get CaMeL Name ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0, true ) ;",
            "score": 99.40606689453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , ) ;",
            "score": 99.36826985677084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).getMessage( 'unchecked') ;",
            "score": 99.36414252387152,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . get CaMeL Message ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; } ) ;",
            "score": 99.34727567784927,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + ) ; }",
            "score": 99.3098373413086,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) ,0) ;",
            "score": 99.48579711914063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , 'unchecked') ;",
            "score": 99.46902231069711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1) ; } else {",
            "score": 99.39511287913604,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked'+ ) ;",
            "score": 99.36402180989583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.34646170479911,
            "correctness": "uncompilable",
            "tokenized_patch": "do { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + this ;",
            "score": 99.30967360276442,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException( this ) ;",
            "score": 99.52469675164474,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.toString( ) ) ;",
            "score": 99.40553792317708,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . to CaMeL String ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( matchers.length >",
            "score": 99.39495849609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( matchers . length >",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( ] ) ) ;",
            "score": 99.36703491210938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( ] ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ iterator + 'unchecked') ;",
            "score": 99.3638916015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + iterator + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.34641927083334,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this + 'unchecked'+ else",
            "score": 99.3093032836914,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this + $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String ) invocation.getMethod( ) ) ;",
            "score": 99.52442568824405,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [0] + 'unchecked') ;",
            "score": 99.46839735243056,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ 0 ] + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(0) ;",
            "score": 99.4049784342448,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getClass( )",
            "score": 99.39434814453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Class ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [ -1] ) ;",
            "score": 99.3899787454044,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ - 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2+ 'unchecked') ;",
            "score": 99.36669921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610+ 'unchecked') ;",
            "score": 99.36669921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007+ 'unchecked') ;",
            "score": 99.36669921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked'+ ;",
            "score": 99.36262512207031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( List ) null ) ;",
            "score": 99.34609985351562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( List ) null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+1) ;",
            "score": 99.30879429408482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getMessage( ) , this ) ;",
            "score": 99.52384440104167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Message ( ) , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.getName( ) , 'unchecked') ;",
            "score": 99.485205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . get CaMeL Name ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } for( int }",
            "score": 99.39427274816177,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } for ( int }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) { throw new Exception( 'unchecked') ; }",
            "score": 99.36578369140625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 == 0 ) { throw new Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.30555013020833,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg -2) ;",
            "score": 99.52379150390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg -3047126096857467610) ;",
            "score": 99.52379150390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg -2007) ;",
            "score": 99.52379150390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'-2, 'unchecked') ;",
            "score": 99.40411376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'-3047126096857467610, 'unchecked') ;",
            "score": 99.40411376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'-2007, 'unchecked') ;",
            "score": 99.40411376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) throw new UnsupportedOperationException( ) ;",
            "score": 99.39419376148896,
            "correctness": "plausible",
            "tokenized_patch": "if ( matchers == null ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start , value , null ) ;",
            "score": 99.38960774739583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , value , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.364990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getMethod( ) ,1) ;",
            "score": 99.48450317382813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Method ( ) , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getRuntime( ) ) ;",
            "score": 99.46624077690973,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getState( ) ) ;",
            "score": 99.40144178602431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL State ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( ) ) ; }",
            "score": 99.39225769042969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new Exception( 'unchecked'+1) ) ;",
            "score": 99.38900417751736,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new Exception ( $STRING$ + 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>=0) throw new UnsupportedOperationException( ) ;",
            "score": 99.36493278952206,
            "correctness": "wrong",
            "tokenized_patch": "if ( 0 >= 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if( ) throw new IllegalArgumentException( 'unchecked') ; return ;",
            "score": 99.3620246438419,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked'+ ) ; }",
            "score": 99.34372287326389,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name ) ;",
            "score": 99.30215454101562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked', invocation.getName( ) ) ;",
            "score": 99.52332763671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( ) + ) ;",
            "score": 99.48421020507813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ charValue( ) ) ;",
            "score": 99.46589491102431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + char CaMeL Value ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getCause( ) ) ;",
            "score": 99.40137396918402,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Cause ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+ start ) ;",
            "score": 99.38880920410156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2+ value ) ;",
            "score": 99.3646469116211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610+ value ) ;",
            "score": 99.3646469116211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007+ value ) ;",
            "score": 99.3646469116211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this ) ;",
            "score": 99.30094691685268,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true , 'unchecked'+ indexOfVararg ) ;",
            "score": 99.4841552734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true , $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom = invocation.getRawArguments( ).length -1;",
            "score": 99.4653384560033,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length -0) ;",
            "score": 99.40016174316406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getMethod( )",
            "score": 99.38938395182292,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Method ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Error( 'unchecked'+1) ) ;",
            "score": 99.38874647352431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Error ( $STRING$ + 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+ length ) ;",
            "score": 99.36453247070312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) throw new UnsupportedOperationException( ) ; else return ;",
            "score": 99.36078957950367,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; else return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new throw new UnsupportedOperationException( ) ;",
            "score": 99.34340256911058,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked''unchecked'+ indexOfVararg + ) ;",
            "score": 99.52250744047619,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getName( ) , false ) ;",
            "score": 99.484033203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Name ( ) , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, invocation ) ;",
            "score": 99.39959716796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getName( ) ;",
            "score": 99.38926937705592,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Name ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ value , null ) ;",
            "score": 99.38844517299107,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + value , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.36398550180289,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( 'unchecked'+ ) ; }",
            "score": 99.36039903428819,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new String [ ] { ) ; }",
            "score": 99.34281652113971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new String [ ] { ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ toString ) ;",
            "score": 99.299072265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + to CaMeL String ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getMethod( ) , null ) ;",
            "score": 99.48387451171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Method ( ) , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'L [0] ) ;",
            "score": 99.39866638183594,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ L [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', indexOfVararg ) ;",
            "score": 99.38920084635417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } finally {",
            "score": 99.36351013183594,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } finally {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this ;",
            "score": 99.29861215444711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg + 'unchecked', true ) ;",
            "score": 99.52186279296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'||1< indexOfVararg ) ;",
            "score": 99.48377075195313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || 1 < index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.class , 'unchecked') ;",
            "score": 99.46497802734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . class , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers1) ; }",
            "score": 99.38812255859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( new Exception( 'unchecked') ) ;",
            "score": 99.38719831194196,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( new Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new NoSuchMethodException( 'unchecked') ;",
            "score": 99.3593685752467,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ) { throw new IllegalArgumentException( ) ; }",
            "score": 99.34159851074219,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name ;",
            "score": 99.29599233774039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ indexOfVararg , 'unchecked') ;",
            "score": 99.52162388392857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.getType( ) ) ;",
            "score": 99.48368530273437,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + getType( ) + 'unchecked') ;",
            "score": 99.46473452919408,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + get CaMeL Type ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) <= matchers.size( ) ) {",
            "score": 99.38807678222656,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) <= matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1==0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.38612874348958,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 1 == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<0) throw new UnsupportedOperationException( ) ;",
            "score": 99.36180204503677,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 < 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Object [ ] { ) ; }",
            "score": 99.35919510690789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Object [ ] { ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ) ;",
            "score": 99.3407211303711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ! null ) ;",
            "score": 99.29485677083333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ! null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >=1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.52161865234375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length >= 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2+ invocation.getName( ) ) ;",
            "score": 99.46455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ + invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610+ invocation.getName( ) ) ;",
            "score": 99.46455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ + invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007+ invocation.getName( ) ) ;",
            "score": 99.46455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ + invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new boolean [ ] { $STRING$",
            "score": 99.39725988051471,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new boolean [ ] { $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ start ) ;",
            "score": 99.36042131696429,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) continue ; throw new UnsupportedOperationException( ) ;",
            "score": 99.3406982421875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) continue ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null ;",
            "score": 99.29482797475961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ } int indexOfVararg ) ;",
            "score": 99.46351318359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + } int index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final int indexOfVararg = matchers.length -1;",
            "score": 99.386474609375,
            "correctness": "uncompilable",
            "tokenized_patch": "final int index CaMeL Of CaMeL Vararg = matchers . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , throw ) ;",
            "score": 99.35846710205078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value + 'unchecked'+ ) ;",
            "score": 99.35498764935662,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( ) { ;",
            "score": 99.34026022518383,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( ) { ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this + 'unchecked') ;",
            "score": 99.28997802734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked', invocation ) ;",
            "score": 99.39584350585938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ , invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'; } else { for( int",
            "score": 99.3861945657169,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; } else { for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new ? 'unchecked': 'unchecked') ;",
            "score": 99.38245391845703,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+(( Integer ) ;",
            "score": 99.35482025146484,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( ( Integer ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ;",
            "score": 99.34014892578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked') ;",
            "score": 99.52090308779762,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'| invocation.getName( ) ) ;",
            "score": 99.4835693359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ | invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ invocation.getName( ) ) ;",
            "score": 99.4630126953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( invocation != null )",
            "score": 99.38525390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( invocation != null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [ ++0] ) ;",
            "score": 99.38140510110294,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ ++ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+ name ) ;",
            "score": 99.35785675048828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { return ; }",
            "score": 99.35324994255515,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { return ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Object [ ] { ; }",
            "score": 99.33968777126736,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Object [ ] { ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ] + ) ;",
            "score": 99.5201904296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ] + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getMethod( ) , this ) ;",
            "score": 99.4835205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Method ( ) , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getClass( ) != 'unchecked') ;",
            "score": 99.46286010742188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Class ( ) != $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.3927993774414,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + invocation.getName( ) ) ;",
            "score": 99.38506758840461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [ [0] ) ;",
            "score": 99.38139073988971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getMethodName( ) ) ;",
            "score": 99.35316975911458,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Method CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( ; ; ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.33958524816177,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( ; ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException throw new UnsupportedOperationException( ) ;",
            "score": 99.285400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg0+ 'unchecked') ;",
            "score": 99.52006603422619,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg 0 + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getConstructor( ) ) ;",
            "score": 99.48240356445312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Constructor ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2) ;",
            "score": 99.39133998325893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-3047126096857467610) ;",
            "score": 99.39133998325893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2007) ;",
            "score": 99.39133998325893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( matchers.) {",
            "score": 99.38462999131944,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( matchers . ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return true ; } else { throw new UnsupportedOperationException( ) ; }",
            "score": 99.38100179036458,
            "correctness": "uncompilable",
            "tokenized_patch": "return true ; } else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ start ) ;",
            "score": 99.3564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { ; throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.33938937717014,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked'+ else",
            "score": 99.28491973876953,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int matchers = matchers -1; throw new UnsupportedOperationException( ) ;",
            "score": 99.48238796657986,
            "correctness": "uncompilable",
            "tokenized_patch": "int matchers = matchers - 1 ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers + ) ;",
            "score": 99.38435872395833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked', 'unchecked') ;",
            "score": 99.38275553385417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name - 'unchecked') ;",
            "score": 99.35585021972656,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name - $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException(( Object [ ] ) ) ;",
            "score": 99.34894561767578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ( Object [ ] ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) ) { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.33889431423611,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ l ) ;",
            "score": 99.28456333705357,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + l ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length <0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.48226589626736,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0) ; } else {",
            "score": 99.3841193704044,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+0) ;",
            "score": 99.35537283761161,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.33876037597656,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'Exception",
            "score": 99.27794300426136,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg *0) ;",
            "score": 99.51934204101562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg * 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + getName( ) -1) ;",
            "score": 99.46200400904605,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + get CaMeL Name ( ) - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "z = invocation.getRawArguments( ).length -1;",
            "score": 99.38368135340073,
            "correctness": "uncompilable",
            "tokenized_patch": "z = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start , name ) ;",
            "score": 99.38056945800781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start , name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new String [ ] {",
            "score": 99.37915802001953,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new String [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( IllegalArgumentException ) new UnsupportedOperationException( ) ;",
            "score": 99.34811740451389,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Illegal CaMeL Argument CaMeL Exception ) new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do { throw new UnsupportedOperationException( ) ; }",
            "score": 99.33857073102679,
            "correctness": "uncompilable",
            "tokenized_patch": "do { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new String( ) ) ;",
            "score": 99.2751220703125,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new String ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getClass( ) , ) ;",
            "score": 99.51915893554687,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Class ( ) , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getMethod( ) , this ) ;",
            "score": 99.481884765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Method ( ) , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new IllegalArgumentException( ) ) ;",
            "score": 99.38361559416118,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { true",
            "score": 99.37886316636029,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { true",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <0) throw new UnsupportedOperationException( ) ;",
            "score": 99.35458374023438,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.34808349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final synchronized( this ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.33837212456598,
            "correctness": "uncompilable",
            "tokenized_patch": "final synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.27442345252403,
            "correctness": "uncompilable",
            "tokenized_patch": "throw throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException )( new IllegalArgumentException( 'unchecked') ) ;",
            "score": 99.51896158854167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) ( new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers1) ;",
            "score": 99.38279622395834,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2+1) ;",
            "score": 99.38016183035714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+3047126096857467610+1) ;",
            "score": 99.38016183035714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2007+1) ;",
            "score": 99.38016183035714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { matchers",
            "score": 99.37883444393383,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { matchers",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value + 'unchecked'+ ) ;",
            "score": 99.34784294577206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessException( ) ;",
            "score": 99.33714710582386,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked') ;",
            "score": 99.27400425502232,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg + 'unchecked', this ) ;",
            "score": 99.5186767578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.length( ) +1) ;",
            "score": 99.48053656684027,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . length ( ) + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; if( matchers != null ) {",
            "score": 99.38216145833333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; if ( matchers != null ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ toString(1) ;",
            "score": 99.37996419270833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + to CaMeL String ( 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Class [ ] { $STRING$",
            "score": 99.37714700137867,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Class [ ] { $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new IllegalArgumentException( 'unchecked') ) ;",
            "score": 99.34779357910156,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name + ) ;",
            "score": 99.27362467447917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg + 'unchecked''unchecked') ;",
            "score": 99.51849655877976,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getClass( ) ;",
            "score": 99.38188091077302,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Class ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom( invocation.getRawArguments( ) ) ;",
            "score": 99.37632242838542,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( invocation . get CaMeL Raw CaMeL Arguments ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String(0) ;",
            "score": 99.35393928079044,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String ( 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException( ) ;",
            "score": 99.34751198508523,
            "correctness": "wrong",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; ) ;",
            "score": 99.27252197265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& invocation instanceof CapturesArguments ) ;",
            "score": 99.4769287109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && invocation instanceof Captures CaMeL Arguments ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String name = invocation.getRawArguments( ).length -1;",
            "score": 99.38167317708333,
            "correctness": "uncompilable",
            "tokenized_patch": "String name = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value == null ) throw new UnsupportedOperationException( ) ;",
            "score": 99.37962431066177,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value == null ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureArgumentsFrom( invocation.getRawArguments( ) ) ;",
            "score": 99.37388102213542,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL Arguments CaMeL From ( invocation . get CaMeL Raw CaMeL Arguments ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name( ) ) ;",
            "score": 99.33604431152344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + this + 'unchecked';",
            "score": 99.2721923828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + this + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getName( ) , ) ;",
            "score": 99.51755981445312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Name ( ) , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new ? 'unchecked': 'unchecked') ;",
            "score": 99.45730929904514,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) new IllegalArgumentException( 'unchecked') ;",
            "score": 99.38053813733552,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String )1, 'unchecked') ;",
            "score": 99.3795525045956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getArgumentCaMeL",
            "score": 99.37256577435662,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Argument CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ start , 'unchecked') ;",
            "score": 99.35240173339844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + start , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; ;",
            "score": 99.34569295247395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } for( ) ;",
            "score": 99.3349838256836,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } for ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; ) ;",
            "score": 99.27057354266827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length <1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.51752319335938,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length < 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0!=0) throw new IllegalArgumentException( ) ;",
            "score": 99.3519646139706,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 != 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if( ; try { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.33470961626838,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this + 'unchecked';",
            "score": 99.2702880859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg , true ) ;",
            "score": 99.51675415039062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) new IllegalArgumentException( ) ;",
            "score": 99.38008626302083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [ [1] ) ;",
            "score": 99.37914321001838,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ [ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { false",
            "score": 99.37162511488971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { false",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length !=0) throw new IllegalArgumentException( ) ;",
            "score": 99.35185690487133,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value + 'unchecked') ; ;",
            "score": 99.34141630284927,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value + $STRING$ ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ; this ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.33371151194854,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ; this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new ) ;",
            "score": 99.26810128348214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.toString( ) , 'unchecked') ;",
            "score": 99.5165771484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . to CaMeL String ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg >=0) { indexOfVararg =0;",
            "score": 99.4555908203125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg >= 0 ) { index CaMeL Of CaMeL Vararg = 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( new Exception( 'unchecked') ) ;",
            "score": 99.37839084201389,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ,",
            "score": 99.37120863970588,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <0) throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.35052131204044,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.33214460100446,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ null +1) ;",
            "score": 99.26713053385417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + null + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this instanceof UnsupportedOperationException ) ;",
            "score": 99.46717664930556,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this instanceof Unsupported CaMeL Operation CaMeL Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "System.arraycopy( ) ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.37801784939236,
            "correctness": "uncompilable",
            "tokenized_patch": "System . arraycopy ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1) ;",
            "score": 99.36338454026442,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value( 'unchecked') ;",
            "score": 99.3504409790039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } return this ;",
            "score": 99.3319091796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } return this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].this ) ;",
            "score": 99.266845703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg + 'unchecked'+ ) ;",
            "score": 99.51642166940789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? -1:0) ;",
            "score": 99.45290958180146,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? - 1 : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Integer(1) ) ;",
            "score": 99.37781524658203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Integer ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( invocation.getName( ) ) ;",
            "score": 99.37713623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'-0) ;",
            "score": 99.36315104166667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name( 'unchecked') ;",
            "score": 99.3481674194336,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new NoSuchMethodException( ) ;",
            "score": 99.34006076388889,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.33025764016544,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false + ) ;",
            "score": 99.26600748697916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name ,0) ;",
            "score": 99.37703704833984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ size -1) ; }",
            "score": 99.3763786764706,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + size - 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'throw new Exception( 'unchecked') ;",
            "score": 99.34723977481617,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ throw new Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ value + 'unchecked') ;",
            "score": 99.33979627821181,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; ) { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.32906087239583,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } return ) ;",
            "score": 99.26591796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } return ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers + + 'unchecked') ;",
            "score": 99.45213407628677,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } for( int ) {",
            "score": 99.37613932291667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } for ( int ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.34698127297794,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked') ; } catch( )",
            "score": 99.32866753472223,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } catch ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + this + 'unchecked'+ else",
            "score": 99.26348114013672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + this + $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg /1) ;",
            "score": 99.51578979492187,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg / 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getCaMeL",
            "score": 99.3754638671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).getException( ) ;",
            "score": 99.35862103630515,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . get CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new RuntimeException( 'unchecked') ;",
            "score": 99.3387939453125,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; } ;",
            "score": 99.32617950439453,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked') ;",
            "score": 99.26325334821429,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', getMessage( ) ) ;",
            "score": 99.46373833550348,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].toString( ) ) ;",
            "score": 99.45133891858552,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+1+1) ;",
            "score": 99.376220703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 1 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { else {",
            "score": 99.37541198730469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',1) ;",
            "score": 99.35853794642857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2+ name ) ;",
            "score": 99.34519958496094,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610+ name ) ;",
            "score": 99.34519958496094,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007+ name ) ;",
            "score": 99.34519958496094,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ ;",
            "score": 99.33799235026042,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String [ ] { )",
            "score": 99.3255256204044,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String [ ] { )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ false ;",
            "score": 99.26322428385417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return true ; } else { throw new UnsupportedOperationException( ) ;",
            "score": 99.37562471277573,
            "correctness": "uncompilable",
            "tokenized_patch": "return true ; } else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers ) ; } else {",
            "score": 99.37367158777573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.TYPE ) ;",
            "score": 99.35828993055556,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . TYPE ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ 'unchecked'+ value ) ;",
            "score": 99.34518432617188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+",
            "score": 99.262451171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( } else { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.44970703125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( } else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name == null ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.37476264105902,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getModifiers( ) ) ;",
            "score": 99.37263319227431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Modifiers ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new int [ ] {1",
            "score": 99.3577521829044,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new int [ ] { 1",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <=0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.34385052849265,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( <= 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ *throw new UnsupportedOperationException( 'unchecked') ; */",
            "score": 99.323974609375,
            "correctness": "uncompilable",
            "tokenized_patch": "/ * throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; * /",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ -1) ;",
            "score": 99.262353515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >2) { throw new UnsupportedOperationException( ) ;",
            "score": 99.51294555664063,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > $NUMBER$ ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >3047126096857467610) { throw new UnsupportedOperationException( ) ;",
            "score": 99.51294555664063,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > $NUMBER$ ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >2007) { throw new UnsupportedOperationException( ) ;",
            "score": 99.51294555664063,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > $NUMBER$ ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1.1, 'unchecked') ;",
            "score": 99.44880506727431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 . 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2, 'unchecked') ;",
            "score": 99.37409973144531,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610, 'unchecked') ;",
            "score": 99.37409973144531,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007, 'unchecked') ;",
            "score": 99.37409973144531,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers2) ; }",
            "score": 99.37250518798828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers3047126096857467610) ; }",
            "score": 99.37250518798828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers2007) ; }",
            "score": 99.37250518798828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int matchers = invocation.getRawArguments( ).length -1;",
            "score": 99.35751003689236,
            "correctness": "plausible",
            "tokenized_patch": "int matchers = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if( ==0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.3427375344669,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalArgumentException( 'unchecked'+ ) ;",
            "score": 99.33683268229167,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( ; ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.32372283935547,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getMessage( 'unchecked') ) ;",
            "score": 99.51241455078124,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Message ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <=0) { indexOfVararg =0;",
            "score": 99.44805908203125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg <= 0 ) { index CaMeL Of CaMeL Vararg = 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2, null ) ;",
            "score": 99.37374114990234,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610, null ) ;",
            "score": 99.37374114990234,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007, null ) ;",
            "score": 99.37374114990234,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getMethod( ).isVarArgs( ) ;",
            "score": 99.37095133463542,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Method ( ) . is CaMeL Var CaMeL Args ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { indexCaMeL",
            "score": 99.35676405164931,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOf( ) ) ;",
            "score": 99.3349380493164,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ; } throw new UnsupportedOperationException( ) ;",
            "score": 99.32212611607143,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; } throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', invocation.getId( ) ) ;",
            "score": 99.51209716796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , invocation . get CaMeL Id ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int indexOfVararg = matchers.size( ) -1; if(",
            "score": 99.35558403862848,
            "correctness": "uncompilable",
            "tokenized_patch": "int index CaMeL Of CaMeL Vararg = matchers . size ( ) - 1 ; if (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value [ length ) ;",
            "score": 99.34247589111328,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value [ length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalStateException( 'unchecked') ; }",
            "score": 99.33311552159927,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( ) ) ;",
            "score": 99.32180551382211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked';",
            "score": 99.26231800426136,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', this.toString( ) ) ;",
            "score": 99.51112060546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , this . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'== indexOfVararg ) ;",
            "score": 99.46028645833333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ == index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else { throw new UnsupportedOperationException( 'unchecked'+1) ;",
            "score": 99.37339782714844,
            "correctness": "uncompilable",
            "tokenized_patch": "else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) ==0) { return ; }",
            "score": 99.36795247395834,
            "correctness": "plausible",
            "tokenized_patch": "if ( matchers . size ( ) == 0 ) { return ; }",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw( UnsupportedOperationException ) invocation.getName( ) ;",
            "score": 99.3551025390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) invocation . get CaMeL Name ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+ start ) ;",
            "score": 99.34173583984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ ) ;",
            "score": 99.3326885516827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } for( ; ; )",
            "score": 99.32121725643383,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } for ( ; ; )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false + false ) ;",
            "score": 99.26102120535714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1? 'unchecked': 'unchecked') ;",
            "score": 99.44652642144098,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1, 'unchecked', null ) ;",
            "score": 99.37310028076172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 , $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( captureFrom( invocation ) ) ;",
            "score": 99.36760397518383,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( capture CaMeL From ( invocation ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked'+ value ) ;",
            "score": 99.33247375488281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "while( ; ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.32084386488971,
            "correctness": "uncompilable",
            "tokenized_patch": "while ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + ) ; }",
            "score": 99.26034545898438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ) ; } else {",
            "score": 99.3634392233456,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } if( indexCaMeL",
            "score": 99.35330020680146,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } if ( index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name( ) ) ; }",
            "score": 99.32037712545956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null + ) ;",
            "score": 99.257470703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ matchers.length -1) ;",
            "score": 99.51076146175987,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + matchers . length - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? true : false ) ;",
            "score": 99.45462799072266,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? true : false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.44532606336806,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "System.arraycopy( ) ; throw new UnsupportedOperationException( ) ; }",
            "score": 99.37240261501736,
            "correctness": "uncompilable",
            "tokenized_patch": "System . arraycopy ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null && matchers.size( ) >0) {",
            "score": 99.36341094970703,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null && matchers . size ( ) > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "finally { throw new UnsupportedOperationException( ) ;",
            "score": 99.33135516826923,
            "correctness": "uncompilable",
            "tokenized_patch": "finally { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( list != null ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.32002766927083,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( list != null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.25699288504464,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers2) ;",
            "score": 99.36212565104167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers3047126096857467610) ;",
            "score": 99.36212565104167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers2007) ;",
            "score": 99.36212565104167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( invocation.getRawArguments( ) ) ;",
            "score": 99.35189056396484,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( invocation . get CaMeL Raw CaMeL Arguments ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false ;",
            "score": 99.25692983774039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( invocation ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.44464470358456,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( invocation ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- -1) ;",
            "score": 99.35147298177084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } finally { }",
            "score": 99.3300422219669,
            "correctness": "wrong",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } finally { }",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked'+ ;",
            "score": 99.31861787683823,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].class ) ;",
            "score": 99.25691441127232,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?2:1) ;",
            "score": 99.4539794921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $NUMBER$ : 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?3047126096857467610:1) ;",
            "score": 99.4539794921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $NUMBER$ : 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?2007:1) ;",
            "score": 99.4539794921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $NUMBER$ : 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.44254150390626,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [ -1] ) ;",
            "score": 99.37105066636029,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ - 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { for( int ) {",
            "score": 99.36086856617646,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { for ( int ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( +0, 'unchecked') ;",
            "score": 99.35096842447916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(2==0) throw new UnsupportedOperationException( ) ;",
            "score": 99.33113367417279,
            "correctness": "plausible",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if(3047126096857467610==0) throw new UnsupportedOperationException( ) ;",
            "score": 99.33113367417279,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(2007==0) throw new UnsupportedOperationException( ) ;",
            "score": 99.33113367417279,
            "correctness": "plausible",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'.toString( ) ) ;",
            "score": 99.32988739013672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Throwable( ) ) ;",
            "score": 99.256298828125,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Throwable ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getClass( ) ) ;",
            "score": 99.50892398231908,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getMethod( ) ) ;",
            "score": 99.45391845703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Object [ ] { ) ;",
            "score": 99.370849609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Object [ ] { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else",
            "score": 99.35979352678571,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getId( ) ) ;",
            "score": 99.35053168402777,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Id ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value == null ) throw new IllegalArgumentException( ) ;",
            "score": 99.33014993106617,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ; ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.31739044189453,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] {",
            "score": 99.25586700439453,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'?0:0;",
            "score": 99.50811408547794,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ ? 0 : 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size -1> matchers.size( ) ) {",
            "score": 99.35917445591518,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size - 1 > matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'| 'unchecked') ;",
            "score": 99.35023716517857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ | $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ null ) ;",
            "score": 99.32950592041016,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new UnsupportedOperationException( 'unchecked') ) return ;",
            "score": 99.32935288373162,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ toString ) ;",
            "score": 99.25241088867188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + to CaMeL String ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ indexOfVararg -1) ;",
            "score": 99.50743408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getName( ) + $STRING$",
            "score": 99.45297241210938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Name ( ) + $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.44106038411458,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.) ;",
            "score": 99.359130859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation instanceof UnsupportedOperationException ) ;",
            "score": 99.35021294487848,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation instanceof Unsupported CaMeL Operation CaMeL Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name( ) + 'unchecked'+",
            "score": 99.32945341222427,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ( ) + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ UnsupportedOperationException.) ;",
            "score": 99.3287417763158,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + Unsupported CaMeL Operation CaMeL Exception . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new String [ ] { ) ;",
            "score": 99.31684875488281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new String [ ] { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } return ;",
            "score": 99.25173514229911,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>= matchers.length ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.50731811523437,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 >= matchers . length ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'this.getName( ) ) ;",
            "score": 99.45255319695724,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ this . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'; } else {",
            "score": 99.35889434814453,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'.getMessage( ) ) ;",
            "score": 99.34972466362848,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if <0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.32911682128906,
            "correctness": "uncompilable",
            "tokenized_patch": "if < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IndexOutOfBoundsException( 'unchecked') ;",
            "score": 99.32705688476562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Index CaMeL Out CaMeL Of CaMeL Bounds CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.31668429904514,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ null ;",
            "score": 99.25052897135417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.getClass( ) ) ;",
            "score": 99.45056830512152,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( +0) ;",
            "score": 99.44053297776442,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } else return ) ;",
            "score": 99.36965942382812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } else return ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( invocation.getRawArguments( ).length >0) {",
            "score": 99.35873752170139,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( invocation . get CaMeL Raw CaMeL Arguments ( ) . length > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) invocation.getType( ) ;",
            "score": 99.34874770220588,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) invocation . get CaMeL Type ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ else",
            "score": 99.25052315848214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getName( ) ,0) ;",
            "score": 99.50545654296874,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Name ( ) , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked': null ) ;",
            "score": 99.4505615234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ : null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked'? 'unchecked': 'unchecked') ;",
            "score": 99.44025336371527,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+0, ) ;",
            "score": 99.36957146139706,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 0 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked') ; } else {",
            "score": 99.35782623291016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( >=0) throw new UnsupportedOperationException( ) ;",
            "score": 99.32746887207031,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( >= 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+(( Integer ) ;",
            "score": 99.32621765136719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( ( Integer ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ typeName ) ;",
            "score": 99.31395721435547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + type CaMeL Name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].this + 'unchecked') ;",
            "score": 99.2501449584961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'].getMessage( ) ) ;",
            "score": 99.50533447265624,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ] . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? false : false ) ;",
            "score": 99.4497299194336,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? false : false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.size( ) + 'unchecked') ;",
            "score": 99.43894449869792,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . size ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { return ; } else {",
            "score": 99.35688332950367,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { return ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new String [ ] { $STRING$",
            "score": 99.34775677849265,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new String [ ] { $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.32692307692308,
            "correctness": "uncompilable",
            "tokenized_patch": "else throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( )",
            "score": 99.31383514404297,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ -1) ;",
            "score": 99.24947916666666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ) ; } else",
            "score": 99.449658203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+ 'unchecked') ;",
            "score": 99.36902618408203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2, 'unchecked') ;",
            "score": 99.347119140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'3047126096857467610, 'unchecked') ;",
            "score": 99.347119140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2007, 'unchecked') ;",
            "score": 99.347119140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name ) ;",
            "score": 99.32647705078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getName( ) ) ;",
            "score": 99.3232192993164,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( name + 'unchecked') ) ; }",
            "score": 99.31289333767361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( name + $STRING$ ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ null + null ) ;",
            "score": 99.2493184407552,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + null + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; length < matchers.size( ) ; length ++ length )",
            "score": 99.44817504882812,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; length < matchers . size ( ) ; length ++ length )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked') ) ; } else",
            "score": 99.35417344835069,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ ) ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'0) ;",
            "score": 99.34708345853366,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+ value + 'unchecked') ;",
            "score": 99.32260470920139,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( ) ; } ; }",
            "score": 99.31222873263889,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int matchers = matchers +1; throw new UnsupportedOperationException( ) ;",
            "score": 99.50298394097223,
            "correctness": "uncompilable",
            "tokenized_patch": "int matchers = matchers + 1 ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ iterator.size( ) ) ;",
            "score": 99.43830023871527,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + iterator . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked'+1) ;",
            "score": 99.36901177300348,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw invocation.getMethod( ).isVarArgs( ) ;",
            "score": 99.35346815321181,
            "correctness": "uncompilable",
            "tokenized_patch": "throw invocation . get CaMeL Method ( ) . is CaMeL Var CaMeL Args ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',2) ;",
            "score": 99.34561593191964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',3047126096857467610) ;",
            "score": 99.34561593191964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',2007) ;",
            "score": 99.34561593191964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<0) throw new IllegalArgumentException( ) ;",
            "score": 99.32356531479779,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 < 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked'+ ;",
            "score": 99.32221984863281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ else ) ;",
            "score": 99.24799455915179,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + else ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } finally { return ;",
            "score": 99.36899820963542,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } finally { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { if( matchers.size( ) >0) {",
            "score": 99.35265241350446,
            "correctness": "uncompilable",
            "tokenized_patch": "try { if ( matchers . size ( ) > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(( CapturesArguments ) invocation ).captureFrom( invocation ) ;",
            "score": 99.34540872012867,
            "correctness": "wrong",
            "tokenized_patch": "( ( Captures CaMeL Arguments ) invocation ) . capture CaMeL From ( invocation ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value( ) ;",
            "score": 99.322119140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ break ) ;",
            "score": 99.32134137834821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + break ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ exp ) ;",
            "score": 99.30878557477679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + exp ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].this , 'unchecked') ;",
            "score": 99.24771881103516,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . this , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getName( ) ) ;",
            "score": 99.50186317845395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getMethod( ) , 'unchecked') ;",
            "score": 99.446533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Method ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ intValue( ) ) ;",
            "score": 99.43687608506944,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + int CaMeL Value ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', value ) ;",
            "score": 99.34388078962054,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Throwable.getMessage( 'unchecked') ) ;",
            "score": 99.31986919202302,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Throwable . get CaMeL Message ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } this.;",
            "score": 99.30791829427083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } this . ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'Exception",
            "score": 99.24614923650569,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != null && matchers.size( ) >0)",
            "score": 99.3501220703125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != null && matchers . size ( ) > 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1.0) ;",
            "score": 99.343505859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked') ; } }",
            "score": 99.30724419487848,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + this + ) ;",
            "score": 99.24540201822917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.4363037109375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; }",
            "score": 99.35008748372395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'-1) ;",
            "score": 99.34321812220982,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; ;",
            "score": 99.31788987379808,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; } finally {",
            "score": 99.30586511948529,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } finally {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false ;",
            "score": 99.24178372896634,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getRuntime( ) ) ;",
            "score": 99.43587453741776,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( iterator != null ) throw new UnsupportedOperationException( ) ;",
            "score": 99.36770450367646,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( iterator != null ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'; } if( matchers != null )",
            "score": 99.34999593098958,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; } if ( matchers != null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( invocation.getRawArguments( ) ,0) ;",
            "score": 99.34309895833333,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( invocation . get CaMeL Raw CaMeL Arguments ( ) , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } else {",
            "score": 99.31918334960938,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this + ) ;",
            "score": 99.24143629807692,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.49917423023896,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + this.getName( ) ) ;",
            "score": 99.43541195518092,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + this . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1+1, 'unchecked') ;",
            "score": 99.36766052246094,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 + 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getRawArguments( ).size( ) -1;",
            "score": 99.34844970703125,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Raw CaMeL Arguments ( ) . size ( ) - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Object.class , 'unchecked') ;",
            "score": 99.34231567382812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Object . class , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ toString( ) + 'unchecked'+",
            "score": 99.31788545496323,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + to CaMeL String ( ) + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ClassNotFoundException( 'unchecked') ;",
            "score": 99.31571742466518,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "while( ; ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.3050308227539,
            "correctness": "uncompilable",
            "tokenized_patch": "while ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false + ) ;",
            "score": 99.24112955729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2) ;",
            "score": 99.4411112467448,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610) ;",
            "score": 99.4411112467448,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007) ;",
            "score": 99.4411112467448,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + new String( 'unchecked') ) ;",
            "score": 99.43488625919117,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + new String ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } }",
            "score": 99.34810697115384,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { null",
            "score": 99.34154555376838,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { null",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>0) throw new IllegalArgumentException( ) ;",
            "score": 99.31752642463235,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 > 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ ) ;",
            "score": 99.3140536221591,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( ].getMessage( ) ) ;",
            "score": 99.24049595424107,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( ] . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg , ) ;",
            "score": 99.44095009251645,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1, true ) ;",
            "score": 99.36620330810547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } for( int )",
            "score": 99.34736184512867,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } for ( int )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null , 'unchecked') ;",
            "score": 99.34148297991071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( throw == null ) throw new IllegalArgumentException( ) ;",
            "score": 99.31728946461396,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( throw == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized(( this ) ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.30413140190973,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ( this ) ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false , 'unchecked') ;",
            "score": 99.23992047991071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else { throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.49658203125,
            "correctness": "uncompilable",
            "tokenized_patch": "else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getType( ) , 'unchecked') ;",
            "score": 99.44015163845486,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Type ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String name = invocation.getMethod( ).getName( ) ;",
            "score": 99.34252251519098,
            "correctness": "plausible",
            "tokenized_patch": "String name = invocation . get CaMeL Method ( ) . get CaMeL Name ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.0) ;",
            "score": 99.34018961588542,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ 'unchecked') ;",
            "score": 99.23845563616071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new RuntimeException( 'unchecked') ;",
            "score": 99.49526798023896,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( matchers.",
            "score": 99.34246467141544,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( matchers .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "System.else { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.33900451660156,
            "correctness": "uncompilable",
            "tokenized_patch": "System . else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ name + 'unchecked'+ ) ;",
            "score": 99.31144205729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + name + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.302978515625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalStateException( ) ; }",
            "score": 99.23690795898438,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL State CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true ? 'unchecked': 'unchecked') ;",
            "score": 99.43302917480469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { if( matchers.",
            "score": 99.34243435329861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { if ( matchers .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ Object.class ) ;",
            "score": 99.33732604980469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked').toString( ) ;",
            "score": 99.31140814887152,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) . to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } ;",
            "score": 99.30252779447116,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked':1) ;",
            "score": 99.43804168701172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ : 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else { throw new UnsupportedOperationException( ) ; }",
            "score": 99.36274937220982,
            "correctness": "uncompilable",
            "tokenized_patch": "else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>=0) throw new IllegalArgumentException( ) ;",
            "score": 99.31273696001838,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 >= 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "25/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ command ) ;",
            "score": 99.30205426897321,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + command ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ else null ) ;",
            "score": 99.23336588541666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + else null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { throw new UnsupportedOperationException( 'unchecked'+ indexCaMeL",
            "score": 99.4940185546875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getMethod( ) != null",
            "score": 99.4363525390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Method ( ) != null",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { throw ) ;",
            "score": 99.36262781479779,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >1) { return ; }",
            "score": 99.3398681640625,
            "correctness": "plausible",
            "tokenized_patch": "if ( matchers . size ( ) > 1 ) { return ; }",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).printStackTrace( ) ;",
            "score": 99.31099018297698,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . print CaMeL Stack CaMeL Trace ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ) ; ;",
            "score": 99.30121208639706,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException ;",
            "score": 99.23331705729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.43080647786458,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else { try {",
            "score": 99.33980066636029,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else { try {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ).toString( ) ;",
            "score": 99.31033145680146,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) . to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value ==0) throw new IllegalArgumentException( ) ;",
            "score": 99.30757410386029,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(.getMessage( 'unchecked') ) ;",
            "score": 99.29922146267361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( . get CaMeL Message ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ null +1) ;",
            "score": 99.23258463541667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + null + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( int )0) ;",
            "score": 99.43120978860294,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( int ) 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else throw new UnsupportedOperationException( ) ;",
            "score": 99.30750528971355,
            "correctness": "uncompilable",
            "tokenized_patch": "else throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } return false ;",
            "score": 99.232373046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } return false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'/1, 'unchecked') ;",
            "score": 99.43114471435547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start , name ) ;",
            "score": 99.361083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.33380805121527,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { ;",
            "score": 99.29812442555146,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ = false ) ;",
            "score": 99.23113606770833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + = false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getMethod( ) == null",
            "score": 99.43035888671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Method ( ) == null",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1+0, 'unchecked') ;",
            "score": 99.36095428466797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 + 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers ;",
            "score": 99.33897986778847,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked', this ) ;",
            "score": 99.33301595052083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getMessage( ) ) ;",
            "score": 99.30868530273438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "} else { throw new UnsupportedOperationException( ) ;",
            "score": 99.30120849609375,
            "correctness": "uncompilable",
            "tokenized_patch": "} else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new RuntimeException( 'unchecked') ;",
            "score": 99.49055032169117,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? true : true ) ;",
            "score": 99.42835998535156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? true : true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked'-1) ;",
            "score": 99.42776489257812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ [1] ) ;",
            "score": 99.36053466796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + [ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != null && matchers.length >0) {",
            "score": 99.33893694196429,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != null && matchers . length > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked', null ) ;",
            "score": 99.33236490885416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.30080997242646,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ l + ) ;",
            "score": 99.22969563802083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + l + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'this.getType( ) ) ;",
            "score": 99.42634662828948,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ this . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + ) + 'unchecked';",
            "score": 99.36032284007354,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( ) {",
            "score": 99.3386459350586,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getParent( ) ) ;",
            "score": 99.33068169487848,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Parent ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { new ; }",
            "score": 99.30734734786184,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { new ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(2==0) throw new IllegalArgumentException( ) ;",
            "score": 99.30075252757354,
            "correctness": "plausible",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if(3047126096857467610==0) throw new IllegalArgumentException( ) ;",
            "score": 99.30075252757354,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(2007==0) throw new IllegalArgumentException( ) ;",
            "score": 99.30075252757354,
            "correctness": "plausible",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { )",
            "score": 99.29662367876838,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ null + null ) ;",
            "score": 99.22959391276042,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + null + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? false : true ) ;",
            "score": 99.42595672607422,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? false : true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1, 'unchecked'+0) ;",
            "score": 99.35987091064453,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 , $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { return ;",
            "score": 99.33818708147321,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new boolean [ ] { false",
            "score": 99.32890050551471,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new boolean [ ] { false",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( System.getProperty( 'unchecked') ) ;",
            "score": 99.30733449835526,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( System . get CaMeL Property ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size ==0) throw new IllegalArgumentException( ) ;",
            "score": 99.29815314797794,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked'+",
            "score": 99.22827962239583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ++ indexOfVararg ) ;",
            "score": 99.42489463404605,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ++ index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0,0) ;",
            "score": 99.35955047607422,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException ) = new UnsupportedOperationException( ) ;",
            "score": 99.29698270909927,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception ) = new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String( ) ) ; }",
            "score": 99.29551188151042,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Exception.class ) ;",
            "score": 99.22686767578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Exception . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOf(0) ) ;",
            "score": 99.4863217002467,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of ( 0 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', name + 'unchecked') ;",
            "score": 99.42387390136719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ l , null ) ;",
            "score": 99.3592758178711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + l , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, ) ;",
            "score": 99.3273681640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value Exception ) ;",
            "score": 99.296728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].class + 'unchecked') ;",
            "score": 99.22611236572266,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . class + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', -1, 'unchecked') ;",
            "score": 99.42328239889706,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , - 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'this.getMethod( ) ) ;",
            "score": 99.42312140213816,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ this . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( new UnsupportedOperationException( ) ) ;",
            "score": 99.35914522058823,
            "correctness": "wrong",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if( matchers.size( ) >0) { if( matchers.",
            "score": 99.33568572998047,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { if ( matchers .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + 'unchecked') ; }",
            "score": 99.29401711856617,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getType( ) + $STRING$",
            "score": 99.42282104492188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Type ( ) + $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "position =0; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.42259216308594,
            "correctness": "uncompilable",
            "tokenized_patch": "position = 0 ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } catch( ) {",
            "score": 99.35903591579861,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } catch ( ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } else { for( int",
            "score": 99.33561437270221,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } else { for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked') ; }",
            "score": 99.32556966145833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } while( ; )",
            "score": 99.29363250732422,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } while ( ; )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.2254130045573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers <1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.48456488715277,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers < 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0,1) ;",
            "score": 99.35877990722656,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } if( matchers.",
            "score": 99.33549948299633,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } if ( matchers .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( String ) matchers.get(",
            "score": 99.32445610894098,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( String ) matchers . get (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOf ) ;",
            "score": 99.3054428100586,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start Exception ) ;",
            "score": 99.29212239583333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException )( new RuntimeException( 'unchecked') ) ;",
            "score": 99.48426577919408,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) ( new Runtime CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( Object [ ] )0) ;",
            "score": 99.42193962545956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( Object [ ] ) 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Double(1) ) ;",
            "score": 99.35855102539062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Double ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String start = invocation.getRawArguments( ).length -1;",
            "score": 99.33479139539931,
            "correctness": "uncompilable",
            "tokenized_patch": "String start = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <( matchers.length -1) ) {",
            "score": 99.3240966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < ( matchers . length - 1 ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ClassNotFoundException( ) ;",
            "score": 99.30526968149039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Class CaMeL Not CaMeL Found CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } return null ;",
            "score": 99.2926025390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } return null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value( ) + 'unchecked'+",
            "score": 99.29198500689338,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ( ) + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg + ) ;",
            "score": 99.48398309004934,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ).) ;",
            "score": 99.42021098889802,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ) ; }",
            "score": 99.33466448102679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1, 'unchecked') ;",
            "score": 99.3224853515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( 'unchecked') ;",
            "score": 99.3051025390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.29250081380208,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "} else { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.29112141927084,
            "correctness": "uncompilable",
            "tokenized_patch": "} else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name ;",
            "score": 99.22391451322116,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null ) ;",
            "score": 99.41897583007812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new Throwable( 'unchecked') ) ;",
            "score": 99.35762786865234,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new Throwable ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getArguments( ) ) ;",
            "score": 99.33385552300348,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Arguments ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else if(",
            "score": 99.32050323486328,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else if (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new NoSuchMethodException( 'unchecked') ; }",
            "score": 99.303955078125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do { throw new UnsupportedOperationException( ) ;",
            "score": 99.29227388822116,
            "correctness": "uncompilable",
            "tokenized_patch": "do { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "logger.arraycopy( ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.28952205882354,
            "correctness": "uncompilable",
            "tokenized_patch": "logger . arraycopy ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null Exception",
            "score": 99.22386756310097,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', name , Object.class ) ;",
            "score": 99.48221164279514,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , name , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1+0) ;",
            "score": 99.4211196899414,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + ) ; }",
            "score": 99.41879272460938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+0, 'unchecked') ;",
            "score": 99.35735212053571,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getLocalizedMessage( 'unchecked') ) ;",
            "score": 99.3038394325658,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Localized CaMeL Message ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } catch( ; }",
            "score": 99.29133436414931,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } catch ( ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false 'unchecked') ;",
            "score": 99.22371419270833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? true :1) ;",
            "score": 99.4178695678711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? true : 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { return true ;",
            "score": 99.35724954044117,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { return true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int indexOfVararg = matchers.size( ) -1;",
            "score": 99.31732177734375,
            "correctness": "uncompilable",
            "tokenized_patch": "int index CaMeL Of CaMeL Vararg = matchers . size ( ) - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ! false ) ;",
            "score": 99.2231201171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ! false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*-1, 'unchecked') ;",
            "score": 99.4205681295956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * - 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1) ;",
            "score": 99.35624186197917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation ) ; } else",
            "score": 99.33314514160156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( new Error( 'unchecked') ) ;",
            "score": 99.30357142857143,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( new Error ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } try { throw ;",
            "score": 99.28988647460938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } try { throw ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "finally { throw new UnsupportedOperationException( ) ; }",
            "score": 99.28785051618304,
            "correctness": "uncompilable",
            "tokenized_patch": "finally { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ this + 'unchecked') ;",
            "score": 99.2224629720052,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.42017957899306,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? -1:1) ;",
            "score": 99.41648236443015,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? - 1 : 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name ,1) ;",
            "score": 99.35610961914062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } synchronized( invocation ) {",
            "score": 99.33228257123162,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } synchronized ( invocation ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new RuntimeException( 'unchecked') ;",
            "score": 99.30345807756696,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null + ) ;",
            "score": 99.22024739583334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( int ) indexOfVararg ) ;",
            "score": 99.41546952097039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( int ) index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } else { return ) ;",
            "score": 99.35603601792279,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } else { return ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'; } else {",
            "score": 99.33156040736607,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(0, 'unchecked') ;",
            "score": 99.31664167131696,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( 'unchecked'+ value + 'unchecked') ;",
            "score": 99.30330113002232,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( $STRING$ + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( ) ) ;",
            "score": 99.28963797433036,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result.add( new UnsupportedOperationException( ) ) ;",
            "score": 99.28603515625,
            "correctness": "uncompilable",
            "tokenized_patch": "result . add ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + indexOfVararg + 'unchecked') ;",
            "score": 99.41546952097039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+ name ) ;",
            "score": 99.35602569580078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { for( int int",
            "score": 99.32988145616319,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { for ( int int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked''unchecked''unchecked') ;",
            "score": 99.31644694010417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOf ) ;",
            "score": 99.30284881591797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ) { throw new UnsupportedOperationException( ) ; } }",
            "score": 99.28929946001838,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null + null ;",
            "score": 99.21742350260416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + [0] + 'unchecked') ;",
            "score": 99.4176887063419,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + [ 0 ] + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start , start ) ;",
            "score": 99.35581970214844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start , start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( IllegalArgumentException ) new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.30278577302632,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Illegal CaMeL Argument CaMeL Exception ) new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1==0) throw new IllegalArgumentException( ) ;",
            "score": 99.28383501838235,
            "correctness": "plausible",
            "tokenized_patch": "if ( 1 == 0 ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length +0) ;",
            "score": 99.47852918836806,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false ? 'unchecked': 'unchecked') ;",
            "score": 99.41766357421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null : new UnsupportedOperationException( ) ;",
            "score": 99.32936448317308,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null : new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; break ;",
            "score": 99.31479317801339,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; break ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new RuntimeException( 'unchecked') ; }",
            "score": 99.30238444010416,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Runtime CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessException( 'unchecked') ;",
            "score": 99.28660074869792,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start( 'unchecked') +",
            "score": 99.2825927734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ( $STRING$ ) +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].) ;",
            "score": 99.21710674579327,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int } else { throw new UnsupportedOperationException( ) ;",
            "score": 99.4168701171875,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int } else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; length < matchers.size( ) ; size ++ )",
            "score": 99.41354851973684,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; length < matchers . size ( ) ; size ++ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( ) return ;",
            "score": 99.35529920789931,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( invocation != null )",
            "score": 99.32830132378473,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( invocation != null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation ) ;",
            "score": 99.31410725911458,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list.length ) ;",
            "score": 99.2809829711914,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list . length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null ) ; }",
            "score": 99.21659342447917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getName( ) , 'unchecked') ;",
            "score": 99.47648111979167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Name ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name(1) ) ;",
            "score": 99.3551384420956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ( 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1) ; } else {",
            "score": 99.3279670266544,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', name ) ;",
            "score": 99.31340680803571,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalArgumentException( ) ;",
            "score": 99.30097961425781,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( - , 'unchecked') ;",
            "score": 99.21644810267857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',0, Object.class ) ;",
            "score": 99.47639295789931,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , 0 , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked':0) ;",
            "score": 99.41283416748047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) invocation.getClass( ) ;",
            "score": 99.31317497702206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) invocation . get CaMeL Class ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked') ; } }",
            "score": 99.30048571134868,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked'+ ) ;",
            "score": 99.28518497242646,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ else }",
            "score": 99.2800048828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + else }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ ) ;",
            "score": 99.21622721354167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( invocation ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.41510009765625,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( invocation ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg1) ; }",
            "score": 99.41171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ; }",
            "score": 99.32681039663461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1) ; }",
            "score": 99.31265462239584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ;",
            "score": 99.2795879657452,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new ) ;",
            "score": 99.21621268136161,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? false :1) ;",
            "score": 99.41018676757812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? false : 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1+0) ;",
            "score": 99.35349818638393,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } for( int } else",
            "score": 99.32640165441177,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } for ( int } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked') ; }",
            "score": 99.31255231584821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IndexOutOfBoundsException( ) ;",
            "score": 99.2977783203125,
            "correctness": "wrong",
            "tokenized_patch": "throw new Index CaMeL Out CaMeL Of CaMeL Bounds CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } try { throw ) ;",
            "score": 99.28318876378677,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } try { throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + toString( ) ) ;",
            "score": 99.41484518612133,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value ,0) ;",
            "score": 99.35348510742188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size -1< matchers.size( ) ) {",
            "score": 99.32610212053571,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size - 1 < matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'-1) ;",
            "score": 99.309521484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+(( Object [ ] ) ;",
            "score": 99.29749213324652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( ( Object [ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked';",
            "score": 99.28289794921875,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked', false ) ;",
            "score": 99.21412876674107,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length > ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.47428171258224,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } else return false ;",
            "score": 99.35245513916016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } else return false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1) ; } else",
            "score": 99.32574462890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked'+ name ) ;",
            "score": 99.29722595214844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else if( )",
            "score": 99.2824348000919,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else if ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+ value ) ;",
            "score": 99.2754150390625,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked'Exception",
            "score": 99.21380208333333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+ value ) ;",
            "score": 99.35234069824219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ *if( matchers.size( ) >0) {",
            "score": 99.32489885602679,
            "correctness": "uncompilable",
            "tokenized_patch": "/ * if ( matchers . size ( ) > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; return ;",
            "score": 99.30695452008929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new NoSuchMethodException( 'unchecked') ;",
            "score": 99.29491509331598,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value.null ) ;",
            "score": 99.27476501464844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value . null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this ;",
            "score": 99.2125713641827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ [1] ) ;",
            "score": 99.35186767578125,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >( matchers.size( ) ) )",
            "score": 99.3227180032169,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > ( matchers . size ( ) ) )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked', false ) ;",
            "score": 99.3064697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( ) ;",
            "score": 99.2724609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ) ;",
            "score": 99.21241173377403,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ; } else { for( int",
            "score": 99.32239447699652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } else { for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', -1) ;",
            "score": 99.30611165364583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+0;",
            "score": 99.272216796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.2117411295573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.47122955322266,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int value =0; throw new UnsupportedOperationException( ) ;",
            "score": 99.35076141357422,
            "correctness": "wrong",
            "tokenized_patch": "int value = 0 ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalArgumentException( invocation.getType( ) ) ;",
            "score": 99.32156032986111,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked', true ) ;",
            "score": 99.305908203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( IllegalArgumentException ) new IllegalArgumentException( 'unchecked') ;",
            "score": 99.29240337171052,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Illegal CaMeL Argument CaMeL Exception ) new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ -0) ;",
            "score": 99.27213541666667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true + false ) ;",
            "score": 99.21168736049107,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).UnsupportedOperationException( ) ;",
            "score": 99.4073422080592,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'; } if( matchers == null )",
            "score": 99.321533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; } if ( matchers == null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( 'unchecked'+ ) ;",
            "score": 99.2921501608456,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final synchronized( this ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.27964154411765,
            "correctness": "uncompilable",
            "tokenized_patch": "final synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ throw ) ;",
            "score": 99.27112688337054,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value null ) ;",
            "score": 99.211669921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? null : 'unchecked') ;",
            "score": 99.40705871582031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? null : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null : new UnsupportedOperationException( ) ; } else {",
            "score": 99.32106018066406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null : new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( exp.getMessage( ) ) ;",
            "score": 99.29186333550348,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( exp . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value , ) ;",
            "score": 99.27107747395833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false1) ;",
            "score": 99.21095377604166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.invocation.getName( ) ) ;",
            "score": 99.405517578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [2] ) ;",
            "score": 99.3501968383789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ $NUMBER$ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [3047126096857467610] ) ;",
            "score": 99.3501968383789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ $NUMBER$ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [2007] ) ;",
            "score": 99.3501968383789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ $NUMBER$ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { ) {",
            "score": 99.32049560546875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked', Object.class ) ;",
            "score": 99.304443359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } finally { ) ;",
            "score": 99.288818359375,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } finally { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name + ) ;",
            "score": 99.21038348858173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked': 'unchecked') ; }",
            "score": 99.40502211626838,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ : $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } for( int } else {",
            "score": 99.32040066189236,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } for ( int } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; else { for( int",
            "score": 99.30437873391544,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; else { for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( element.getMessage( ) ) ;",
            "score": 99.28842502170139,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( element . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this.null ) ;",
            "score": 99.2657699584961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this . null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( 'unchecked'+ false ) ;",
            "score": 99.21029459635416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'?1:0;",
            "score": 99.46589211856617,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ ? 1 : 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; size < matchers.size( ) ; size ++ )",
            "score": 99.4047915810033,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; size < matchers . size ( ) ; size ++ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.34966681985294,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.size( ) ;",
            "score": 99.3191779641544,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . size ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) invocation.getMethod( ) ;",
            "score": 99.30396225873162,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) invocation . get CaMeL Method ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ) { throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.2879867553711,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start( ) + 'unchecked'+",
            "score": 99.26575425091912,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ( ) + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( ) ;",
            "score": 99.21019694010417,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', this + 'unchecked') ;",
            "score": 99.40930938720703,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getId( ) ) ;",
            "score": 99.40371365017361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Id ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >0) { if( matchers.length >0)",
            "score": 99.31917317708333,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > 0 ) { if ( matchers . length > 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { invocation",
            "score": 99.3037971047794,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { invocation",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked') ; } else {",
            "score": 99.28777754934211,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new InternalError( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.2767333984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Internal CaMeL Error ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException new UnsupportedOperationException( ) ;",
            "score": 99.21016693115234,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg -2) ;",
            "score": 99.46426052517361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg -3047126096857467610) ;",
            "score": 99.46426052517361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg -2007) ;",
            "score": 99.46426052517361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'|| indexOfVararg ) ;",
            "score": 99.40157741970486,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } synchronized( matchers ) {",
            "score": 99.31885483685662,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } synchronized ( matchers ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.null ) ;",
            "score": 99.30286322699652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( 'unchecked'+ name + 'unchecked') ;",
            "score": 99.28628104073661,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( $STRING$ + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getMessage( 'unchecked') ) ;",
            "score": 99.27619485294117,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Message ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ toString( ) ;",
            "score": 99.26493566176471,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ else ) ;",
            "score": 99.20976039341518,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + else ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexOfVararg ) ;",
            "score": 99.40146891276042,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1==0) throw new UnsupportedOperationException( ) ;",
            "score": 99.34914263556985,
            "correctness": "plausible",
            "tokenized_patch": "if ( 1 == 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1) ; } else {",
            "score": 99.31878662109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Class [ ] { $STRING$",
            "score": 99.26413143382354,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Class [ ] { $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked', invocation.getName( ) ) ;",
            "score": 99.46289740668402,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ , invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? null : null ) ;",
            "score": 99.40099334716797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? null : null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1, this ) ;",
            "score": 99.34895542689732,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "l = invocation.getRawArguments( ).length -1;",
            "score": 99.31555893841912,
            "correctness": "uncompilable",
            "tokenized_patch": "l = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getClass( ) ;",
            "score": 99.30203067555146,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Class ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( 'unchecked') ; } else {",
            "score": 99.28543251439145,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name( ) ) ; }",
            "score": 99.27455049402573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length ) ;",
            "score": 99.26079450334821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; size < matchers.size( ) ; length ++ length )",
            "score": 99.40076293945313,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; size < matchers . size ( ) ; length ++ length )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { try {",
            "score": 99.31522042410714,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { try {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( this , 'unchecked') ;",
            "score": 99.27393341064453,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( this , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ element ) ;",
            "score": 99.25818743024554,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + element ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ null ) ;",
            "score": 99.2073465983073,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "} else if( matchers.size( ) >0) {",
            "score": 99.31521170479911,
            "correctness": "wrong",
            "tokenized_patch": "} else if ( matchers . size ( ) > 0 ) {",
            "failed_triggering": "0/26",
            "failed_non_triggering": "20"
        },
        {
            "patch": "invocation.captureFrom( invocation.getName( ) ) ;",
            "score": 99.30133056640625,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( UnsupportedOperationException.class ) ;",
            "score": 99.27388763427734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ charValue ) ;",
            "score": 99.2570571899414,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + char CaMeL Value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg , true ) ;",
            "score": 99.46037462022569,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1, 'unchecked', 'unchecked') ;",
            "score": 99.40318388097427,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 , $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new ? 'unchecked': 'unchecked') ;",
            "score": 99.34756469726562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation ) ; }",
            "score": 99.31393229166666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'Object.class ) ;",
            "score": 99.29998372395833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value + 'unchecked') ; }",
            "score": 99.28345444623162,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( ;",
            "score": 99.27344563802083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException ; throw new UnsupportedOperationException( ) ;",
            "score": 99.25542853860294,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + 'unchecked'+",
            "score": 99.20721028645833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( false ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.34646426930146,
            "correctness": "plausible",
            "tokenized_patch": "if ( false ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0) ; } else",
            "score": 99.31355285644531,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].getMessage( ) ) ;",
            "score": 99.29972330729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+ value ) ;",
            "score": 99.28324890136719,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ trim( ) + 'unchecked'+",
            "score": 99.25453096277573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + trim ( ) + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ this + 'unchecked') ;",
            "score": 99.2061767578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + ) + 'unchecked';",
            "score": 99.34515021829044,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( captureFrom( matchers ) ) ;",
            "score": 99.31334731158088,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( capture CaMeL From ( matchers ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else for( int",
            "score": 99.29963235294117,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } for( ; )",
            "score": 99.27134704589844,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } for ( ; )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this.) ;",
            "score": 99.2530517578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ; ) ;",
            "score": 99.20514787946429,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; length < matchers.size( ) ; length ++ size )",
            "score": 99.39773559570312,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; length < matchers . size ( ) ; length ++ size )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( invocation.getRawArguments( ).length >1) {",
            "score": 99.31332736545139,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( invocation . get CaMeL Raw CaMeL Arguments ( ) . length > 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null.getMessage( ) ) ;",
            "score": 99.29958089192708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).initCause( ) ;",
            "score": 99.27129767922794,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . init CaMeL Cause ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+0+0) ;",
            "score": 99.2528788248698,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + 0 + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( ) ;",
            "score": 99.20424241286058,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) throw new UnsupportedOperationException( ) ;",
            "score": 99.4580310639881,
            "correctness": "wrong",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg - ) ;",
            "score": 99.3970947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1, true ) ;",
            "score": 99.34383719308036,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( String.valueOf( ) ) ;",
            "score": 99.27058241102431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( String . value CaMeL Of ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Class [ ] { null",
            "score": 99.25236960018383,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Class [ ] { null",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ = ) ;",
            "score": 99.20409284319196,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + = ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? true :0) ;",
            "score": 99.3968505859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? true : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getMethods( ) ) ;",
            "score": 99.31240505642361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Methods ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', invocation.getArgumentCaMeL",
            "score": 99.299072265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , invocation . get CaMeL Argument CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } ) ;",
            "score": 99.27056884765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+",
            "score": 99.20319158380681,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( L [0] , 'unchecked') ;",
            "score": 99.39680032169117,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( L [ 0 ] , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1, ) ;",
            "score": 99.342724609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?0: ) ;",
            "score": 99.29873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 0 : ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; } finally { ;",
            "score": 99.27023654513889,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } finally { ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list ) ;",
            "score": 99.25068010602679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ true ) ;",
            "score": 99.20272391183036,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.39647674560547,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , ) + 'unchecked';",
            "score": 99.34260110294117,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'int [ ].class ) ;",
            "score": 99.29722684972427,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ int [ ] . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ; } if( ;",
            "score": 99.26819610595703,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } if ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value.( ) ) ;",
            "score": 99.24954044117646,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value . ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked'+",
            "score": 99.2018310546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { for( int",
            "score": 99.31144205729167,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(( CapturesArguments ) invocation.getRawArguments( ) ).",
            "score": 99.296875,
            "correctness": "uncompilable",
            "tokenized_patch": "( ( Captures CaMeL Arguments ) invocation . get CaMeL Raw CaMeL Arguments ( ) ) .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value + 'unchecked') ; }",
            "score": 99.28076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list.size( ) ;",
            "score": 99.24857823988971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list . size ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.20100620814732,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getLocation( ) ) ;",
            "score": 99.31138102213542,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Location ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new boolean.class ) ;",
            "score": 99.29672420726104,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new boolean . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) UnsupportedOperationException( ) ;",
            "score": 99.26673719618056,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers ,0) ;",
            "score": 99.3955078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( invocation.getMethod( ) ) ;",
            "score": 99.31126573350694,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int indexOfVararg = invocation.getRawArguments( ).",
            "score": 99.29661729600694,
            "correctness": "uncompilable",
            "tokenized_patch": "int index CaMeL Of CaMeL Vararg = invocation . get CaMeL Raw CaMeL Arguments ( ) .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else { throw new UnsupportedOperationException( ) ; } }",
            "score": 99.26542833116319,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ 'unchecked') ;",
            "score": 99.24795968191964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Exception.get( ) ) ;",
            "score": 99.19999694824219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Exception . get ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.invocation.getMethod( ) ) ;",
            "score": 99.39534301757813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >1) { if( matchers.get(",
            "score": 99.31055365668402,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 1 ) { if ( matchers . get (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked', new Class [ ] {",
            "score": 99.29601332720588,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ , new Class [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.26502227783203,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return UnsupportedOperationException.UnsupportedOperationException( ) ;",
            "score": 99.24777221679688,
            "correctness": "uncompilable",
            "tokenized_patch": "return Unsupported CaMeL Operation CaMeL Exception . Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( ].getMessage( ) ) ;",
            "score": 99.19982147216797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( ] . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { throw new UnsupportedOperationException( $STRING$",
            "score": 99.45289248511905,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1) + 'unchecked';",
            "score": 99.34101867675781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', matchers ) ;",
            "score": 99.31014578683036,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( ) ) ;",
            "score": 99.2779052734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.2650146484375,
            "correctness": "uncompilable",
            "tokenized_patch": "; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1, 'unchecked') ;",
            "score": 99.394287109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getMethodName( ) ) ;",
            "score": 99.39231567382812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Method CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } if( matchers != null )",
            "score": 99.30997721354167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } if ( matchers != null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked';",
            "score": 99.29564412434895,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getLocalizedMessage( ) ) ;",
            "score": 99.27733696831598,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Localized CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked'; }",
            "score": 99.26457977294922,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name , ) ;",
            "score": 99.24697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ throw ) ;",
            "score": 99.19936697823661,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? false :0) ;",
            "score": 99.3916015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? false : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.34088493795956,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( element.toString( ) ) ;",
            "score": 99.27643500434027,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( element . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( String ) null ) ; }",
            "score": 99.26405244715073,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( String ) null ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( 'unchecked'+ toString( ) ) ;",
            "score": 99.24554084329044,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; if( matchers != null )",
            "score": 99.30783978630515,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; if ( matchers != null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.size -1) ;",
            "score": 99.29473114013672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . size - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name.toString( ) ) ;",
            "score": 99.27406141493056,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else throw new UnsupportedOperationException( ) ;",
            "score": 99.264013671875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ else } else {",
            "score": 99.24537568933823,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + else } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new ) ;",
            "score": 99.19736735026042,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].isVarArgs( ) ) ;",
            "score": 99.45185779389881,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . is CaMeL Var CaMeL Args ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.getMethod( ) ) ;",
            "score": 99.39034695095486,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } else { return false ;",
            "score": 99.33985811121323,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } else { return false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new InterruptedException( ) ) ;",
            "score": 99.30772489659927,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Interrupted CaMeL Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getName( ) ;",
            "score": 99.29454848345588,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Name ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; } finally { ) ;",
            "score": 99.27370733963816,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } finally { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ substring + 'unchecked') ; }",
            "score": 99.26398064108456,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + substring + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( 'unchecked'+ value ) ;",
            "score": 99.24418422154018,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ toString( ) ) ; }",
            "score": 99.33962115119485,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + to CaMeL String ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.",
            "score": 99.30764535757211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked') ; } for( int",
            "score": 99.29439968532986,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ ) ; } for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( UnsupportedOperationException.getMessage( 'unchecked') ) ;",
            "score": 99.27352102179276,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( Unsupported CaMeL Operation CaMeL Exception . get CaMeL Message ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "logger.out != null ; throw new UnsupportedOperationException( ) ;",
            "score": 99.24317842371323,
            "correctness": "uncompilable",
            "tokenized_patch": "logger . out != null ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ else",
            "score": 99.19699532645089,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'? 'unchecked': 'unchecked';",
            "score": 99.45106416590073,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ ? $STRING$ : $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + this.getType( ) ) ;",
            "score": 99.39235325863487,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + this . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'- indexOfVararg ) ;",
            "score": 99.38763106496711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ - index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "head = invocation.getRawArguments( ).length -1;",
            "score": 99.3075310202206,
            "correctness": "uncompilable",
            "tokenized_patch": "head = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new RuntimeException( ) ; }",
            "score": 99.27047293526786,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Runtime CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } ; } finally {",
            "score": 99.26026068793402,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ; } finally {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] {0",
            "score": 99.2430778952206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { 0",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'Exception",
            "score": 99.1966552734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name != null ) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.33812120225694,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name != null ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else { else {",
            "score": 99.30657599954044,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else { else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.25897623697917,
            "correctness": "uncompilable",
            "tokenized_patch": "do { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name , this ) ;",
            "score": 99.19655936104911,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int size =0; size < matchers.size( ) ; size ++ )",
            "score": 99.38651315789474,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int size = 0 ; size < matchers . size ( ) ; size ++ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+ l ) ;",
            "score": 99.33799743652344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + l ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { if(",
            "score": 99.30599975585938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { if (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(.toString( ) ) ;",
            "score": 99.26747759650735,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } this.) ;",
            "score": 99.2589340209961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } this . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'UnsupportedOperationException ;",
            "score": 99.1961898803711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ Unsupported CaMeL Operation CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.TYPE , 'unchecked') ;",
            "score": 99.4489013671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . TYPE , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+ start ) ;",
            "score": 99.3379898071289,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0&& matchers.size( ) >",
            "score": 99.30588666130515,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 && matchers . size ( ) >",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getState( ) ) ;",
            "score": 99.29185655381944,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL State ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+(( Object [ ] ) ;",
            "score": 99.26740858289931,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( ( Object [ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result.add( new UnsupportedOperationException( 'unchecked') ) ;",
            "score": 99.23963928222656,
            "correctness": "uncompilable",
            "tokenized_patch": "result . add ( new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ else",
            "score": 99.19588216145833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getType( ) , ) ;",
            "score": 99.38560084292763,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Type ( ) , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ matchers ) ;",
            "score": 99.30550944010416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.length -1) ;",
            "score": 99.29166412353516,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . length - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new NullPointerException( 'unchecked') ; }",
            "score": 99.26607019761029,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ name( ) ) ;",
            "score": 99.25843157087054,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) throw new UnsupportedOperationException( ) ;",
            "score": 99.23855154854911,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this + 'unchecked';",
            "score": 99.19565993088942,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.getName( ) ) ;",
            "score": 99.38555230034723,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2+ 'unchecked') ;",
            "score": 99.335205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+3047126096857467610+ 'unchecked') ;",
            "score": 99.335205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2007+ 'unchecked') ;",
            "score": 99.335205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( invocation.getClass( ) ) ;",
            "score": 99.30548095703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( invocation . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } }",
            "score": 99.29158238002232,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Exception.class + 'unchecked') ;",
            "score": 99.19522094726562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Exception . class + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getParent( ) ) ;",
            "score": 99.38490804036458,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Parent ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { synchronized( matchers )",
            "score": 99.30483669704861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { synchronized ( matchers )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', this.invocation ) ;",
            "score": 99.2911376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , this . invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getClassLoader( ) ) ;",
            "score": 99.25677490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Class CaMeL Loader ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ valueOf ) ;",
            "score": 99.23651123046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value CaMeL Of ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value.null ) ;",
            "score": 99.19522094726562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value . null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+1+1) ;",
            "score": 99.33462863498264,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length -1> matchers.size( ) ) {",
            "score": 99.30433872767857,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length - 1 > matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ) ;",
            "score": 99.29022575827206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new NullPointerException( ) ) ;",
            "score": 99.26558645148026,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Null CaMeL Pointer CaMeL Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Class [ ] { )",
            "score": 99.23583266314338,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Class [ ] { )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.19485677083334,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null.toString( ) ) ;",
            "score": 99.38648139105902,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else { throw new UnsupportedOperationException( 'unchecked'+1) ; }",
            "score": 99.33362534466912,
            "correctness": "uncompilable",
            "tokenized_patch": "else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String name = invocation.getType( ).getName( ) ;",
            "score": 99.30427381727431,
            "correctness": "uncompilable",
            "tokenized_patch": "String name = invocation . get CaMeL Type ( ) . get CaMeL Name ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { new",
            "score": 99.2900749655331,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { new",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( ) ; } } else {",
            "score": 99.26473195929276,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ toString( ) ;",
            "score": 99.23540900735294,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ ! null ) ;",
            "score": 99.194287109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ! null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { indexOfVararg = matchers.length -1; }",
            "score": 99.44612630208333,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { index CaMeL Of CaMeL Vararg = matchers . length - 1 ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getJavaMethod( ) ) ;",
            "score": 99.38147583007813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Java CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( iterator == null ) throw new UnsupportedOperationException( ) ;",
            "score": 99.3323974609375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( iterator == null ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size -1>= matchers.size( ) ) {",
            "score": 99.30344935825893,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size - 1 >= matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, 'unchecked'+ indexCaMeL",
            "score": 99.2887321920956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } this.( ) ;",
            "score": 99.25464585248162,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } this . ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( 'unchecked'+ value ) ;",
            "score": 99.234130859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked', indexOfVararg ) ;",
            "score": 99.30335828993056,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { throw new UnsupportedOperationCaMeL",
            "score": 99.28839789496527,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { throw new Unsupported CaMeL Operation CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( ) {",
            "score": 99.25396369485294,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ size( ) + 'unchecked'+",
            "score": 99.23332663143383,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + size ( ) + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } return ;",
            "score": 99.19403483072917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.isVarArgs( ) ) ;",
            "score": 99.38051147460938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . is CaMeL Var CaMeL Args ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } else { throw null ;",
            "score": 99.3315788717831,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } else { throw null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers ) ; } else",
            "score": 99.30326843261719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getId( ) ) ;",
            "score": 99.28766547309027,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Id ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ) ; } )",
            "score": 99.26128472222223,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ exp ) ;",
            "score": 99.25186593191964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + exp ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ Integer.class ) ;",
            "score": 99.23322296142578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + Integer . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( name + 'unchecked') ;",
            "score": 99.19207763671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + invocation.getType( ) ) ;",
            "score": 99.37888697574013,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1,0) ;",
            "score": 99.33124651227679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ }",
            "score": 99.28750610351562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalArgumentException( 'unchecked') ; } }",
            "score": 99.26067151521382,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String ) null ) ; }",
            "score": 99.25170135498047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) null ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) { throw new Exception( 'unchecked') ;",
            "score": 99.2324951171875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 == 0 ) { throw new Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + name + 'unchecked';",
            "score": 99.19178873697916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + name + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException( 'unchecked') ; } }",
            "score": 99.44146437872024,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'this.getClass( ) ) ;",
            "score": 99.37864925986842,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ this . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.0) ;",
            "score": 99.30281066894531,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getMethod( ) ;",
            "score": 99.28685087316177,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Method ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length [0] ) ;",
            "score": 99.44108312270221,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.invocation.getType( ) ) ;",
            "score": 99.3782958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( this ) ;",
            "score": 99.32839068244485,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "name = invocation.getRawArguments( ).length -1;",
            "score": 99.3026984719669,
            "correctness": "uncompilable",
            "tokenized_patch": "name = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.FALSE ) ;",
            "score": 99.28666178385417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . FALSE ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } ; if( ;",
            "score": 99.25164031982422,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ; if ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list.0) ;",
            "score": 99.23121643066406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ -- indexOfVararg ) ;",
            "score": 99.3769595497533,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + -- index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) new UnsupportedOperationException( 'unchecked';",
            "score": 99.302490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException l = new UnsupportedOperationException( ) ;",
            "score": 99.22877412683823,
            "correctness": "plausible",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception l = new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false , ) ;",
            "score": 99.19039713541666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0) { invocation.captureFrom( ) ; }",
            "score": 99.44001116071429,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 ) { invocation . capture CaMeL From ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.size( ) ) ;",
            "score": 99.37674560546876,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg",
            "score": 99.28649139404297,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Throwable.getMessage( ) ) ;",
            "score": 99.25946044921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Throwable . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.22813197544643,
            "correctness": "uncompilable",
            "tokenized_patch": "else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null ) ; } return",
            "score": 99.18990325927734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null ) ; } return",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg 'unchecked') ;",
            "score": 99.43962016858552,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( } else { throw new UnsupportedOperationException( ) ;",
            "score": 99.38105773925781,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( } else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ indexOfVararg ;",
            "score": 99.37582236842105,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + index CaMeL Of CaMeL Vararg ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1+1, ) ;",
            "score": 99.32626953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 + 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getException( ) ) ;",
            "score": 99.30063205295139,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg + ) ;",
            "score": 99.28431611902573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( 'unchecked') ; } }",
            "score": 99.25944010416667,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return Boolean.valueOf( value ).booleanValue( ) ;",
            "score": 99.2505241842831,
            "correctness": "uncompilable",
            "tokenized_patch": "return Boolean . value CaMeL Of ( value ) . boolean CaMeL Value ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list.value ) ;",
            "score": 99.22777557373047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list . value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2;",
            "score": 99.1895000751202,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610;",
            "score": 99.1895000751202,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007;",
            "score": 99.1895000751202,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', true , true ) ;",
            "score": 99.43809509277344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , true , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; length < indexOfVararg ; size ++ )",
            "score": 99.3757259971217,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; length < index CaMeL Of CaMeL Vararg ; size ++ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name != null ) throw new UnsupportedOperationException( ) ; }",
            "score": 99.32626681857639,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name != null ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String1= invocation.getRawArguments( ).length -1;",
            "score": 99.29863145616319,
            "correctness": "uncompilable",
            "tokenized_patch": "String 1 = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg >=( matchers.length -1) ) {",
            "score": 99.28358968098958,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg >= ( matchers . length - 1 ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( this ) ;",
            "score": 99.2574462890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) return ; return true ;",
            "score": 99.22732543945312,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 == 0 ) return ; return true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg2) ;",
            "score": 99.3751156455592,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg3047126096857467610) ;",
            "score": 99.3751156455592,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg2007) ;",
            "score": 99.3751156455592,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+1, null ) ;",
            "score": 99.32600233289931,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getClass( ) ;",
            "score": 99.28300924862133,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Class ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( command.getMessage( ) ) ;",
            "score": 99.25371636284723,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( command . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2;",
            "score": 99.18667367788461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610;",
            "score": 99.18667367788461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007;",
            "score": 99.18667367788461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + indexOfVararg -1) ;",
            "score": 99.37966437088816,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + index CaMeL Of CaMeL Vararg - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) + ) ;",
            "score": 99.37395918996711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ value , false ) ;",
            "score": 99.32585797991071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + value , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else if( matchers.",
            "score": 99.29800075954861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else if ( matchers .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getName( ) ;",
            "score": 99.28232709099265,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Name ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String [ ] { 'unchecked';",
            "score": 99.2493896484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String [ ] { $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ toString( ;",
            "score": 99.18499755859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + to CaMeL String ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( true ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.32556870404412,
            "correctness": "wrong",
            "tokenized_patch": "if ( true ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; break ;",
            "score": 99.29763559194711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; break ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.invocation ) ;",
            "score": 99.28225368923611,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } Method [ ] ) ;",
            "score": 99.24911678538604,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } Method [ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new Exception( ) ) ;",
            "score": 99.18360188802083,
            "correctness": "plausible",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new Exception ( ) ) ;",
            "failed_triggering": "25/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name -0) ;",
            "score": 99.37899017333984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.getType( ) ) ;",
            "score": 99.37362331814236,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0) ; }",
            "score": 99.29717610677083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg + 'unchecked';",
            "score": 99.28212603400735,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) return ; return true ;",
            "score": 99.2224833170573,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) return ; return true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ toString( ) ;",
            "score": 99.18270670572916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0) { invocation.captureFrom( ) ;",
            "score": 99.43236083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 ) { invocation . capture CaMeL From ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getMethod( ).",
            "score": 99.29702579273896,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Method ( ) .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', l ) ;",
            "score": 99.28191266741071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , l ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( ) ; } else {",
            "score": 99.25141737196181,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new IllegalArgumentException( ) ;",
            "score": 99.24795096261161,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ value ) ;",
            "score": 99.22158813476562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2) ;",
            "score": 99.18253580729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+3047126096857467610) ;",
            "score": 99.18253580729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2007) ;",
            "score": 99.18253580729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked'+ indexOfVararg ) ;",
            "score": 99.43158922697368,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'0, 'unchecked') ;",
            "score": 99.2817626953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { )",
            "score": 99.24893008961396,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.24665832519531,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value ;",
            "score": 99.2215576171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ) , 'unchecked'+ indexCaMeL",
            "score": 99.43083844866071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) , $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& matchers != null ) ;",
            "score": 99.37698364257812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && matchers != null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked': ) ;",
            "score": 99.37172037760416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ : ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1) + 'unchecked';",
            "score": 99.32183074951172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "ex = invocation.getRawArguments( ).length -1;",
            "score": 99.2967170266544,
            "correctness": "uncompilable",
            "tokenized_patch": "ex = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1, new Object [ ] {",
            "score": 99.28064643012152,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , new Object [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ) ; } else {",
            "score": 99.24884996916118,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ String.class ) ;",
            "score": 99.22090911865234,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + String . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ childValue ) ;",
            "score": 99.18079376220703,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + child CaMeL Value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'UnsupportedOperationException.class ) ;",
            "score": 99.37653551603618,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ Unsupported CaMeL Operation CaMeL Exception . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getRuntime( ) ) ;",
            "score": 99.37137858072917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(2==0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.32168918185764,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(3047126096857467610==0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.32168918185764,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(2007==0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.32168918185764,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( matchers.get(",
            "score": 99.29611545138889,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( matchers . get (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new int [ ] {",
            "score": 99.28010559082031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new int [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.24622344970703,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+ name ) ;",
            "score": 99.2205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( 'unchecked'+ null ) ;",
            "score": 99.18072916666667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', true ,0) ;",
            "score": 99.43024444580078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , true , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , 'unchecked'+ indexOfVararg ) ;",
            "score": 99.37002724095395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+0, null ) ;",
            "score": 99.32131522042411,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 0 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1) ; } for( int",
            "score": 99.2799072265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 ) ; } for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false ) ; } return",
            "score": 99.18067169189453,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false ) ; } return",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ start ,0) ;",
            "score": 99.32081821986607,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + start , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers.length ) ;",
            "score": 99.29521942138672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers . length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( ) { return ; }",
            "score": 99.24385793585526,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( ) { return ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] {(",
            "score": 99.21879308363971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name + 'unchecked';",
            "score": 99.18020833333334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'!= indexOfVararg ) ;",
            "score": 99.36881510416667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ != index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1,1) ;",
            "score": 99.32079206194196,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } } else {",
            "score": 99.29171752929688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name + 'unchecked') ; }",
            "score": 99.24481560202206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ break ) ;",
            "score": 99.24346051897321,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + break ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new throw new UnsupportedOperationException( ) ;",
            "score": 99.21807391826923,
            "correctness": "uncompilable",
            "tokenized_patch": "return new throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + -1+ 'unchecked') ;",
            "score": 99.37371826171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + - 1 + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name == null ) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.32010904947917,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name == null ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getRawArguments( ) ;",
            "score": 99.29060872395833,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Raw CaMeL Arguments ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'1) ;",
            "score": 99.27900913783482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "finally { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.21791294642857,
            "correctness": "uncompilable",
            "tokenized_patch": "finally { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ this ) ;",
            "score": 99.17994907924107,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg.length ) ;",
            "score": 99.36502685546876,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg . length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.31993910845588,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { for( int )",
            "score": 99.2904052734375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { for ( int )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) ;",
            "score": 99.27898810891544,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String ) null ) ;",
            "score": 99.243994140625,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) null ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start( 'unchecked') 'unchecked'+",
            "score": 99.21717744715073,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ( $STRING$ ) $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + this + 'unchecked'+",
            "score": 99.17981770833333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + this + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ? 'unchecked': 'unchecked';",
            "score": 99.4254379272461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ? $STRING$ : $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) ) ; }",
            "score": 99.36430921052632,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "ctor = invocation.getRawArguments( ).length -1;",
            "score": 99.2901252297794,
            "correctness": "uncompilable",
            "tokenized_patch": "ctor = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "; synchronized( this ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.24379595588235,
            "correctness": "uncompilable",
            "tokenized_patch": "; synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } finally { ;",
            "score": 99.2420654296875,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } finally { ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( 'unchecked') ;",
            "score": 99.2170077237216,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ = null ) ;",
            "score": 99.17979329427084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + = null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.37117084703948,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1<0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.31914605034723,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 1 < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >1) {",
            "score": 99.2900899251302,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) invocation.getException( ) ;",
            "score": 99.27781767003677,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) invocation . get CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ; } if( )",
            "score": 99.24352264404297,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } if ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( value != null ) {",
            "score": 99.241943359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( value != null ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0;",
            "score": 99.21697528545673,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false + null ) ;",
            "score": 99.17978341238839,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.getMessage( ) ) ;",
            "score": 99.36344401041667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+1+1) ;",
            "score": 99.31704372829861,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) -1;",
            "score": 99.28978553185097,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( toString( ) ) ;",
            "score": 99.27690124511719,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( to CaMeL String ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+ name ) ;",
            "score": 99.242919921875,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') UnsupportedOperationException( ) ;",
            "score": 99.2417056435033,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this ;",
            "score": 99.17914373224431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; size < matchers.size( ) ; length ++ size )",
            "score": 99.363134765625,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; size < matchers . size ( ) ; length ++ size )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ) ; } else",
            "score": 99.28888702392578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked', 'unchecked') ;",
            "score": 99.27655029296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') + 'unchecked';",
            "score": 99.24070521763393,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ ! false ) ;",
            "score": 99.17886555989584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ! false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) , ) ;",
            "score": 99.36152086759868,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [1] ) ; }",
            "score": 99.31615492876838,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ 1 ] ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ,(",
            "score": 99.27630615234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( ) ;",
            "score": 99.24024793836806,
            "correctness": "wrong",
            "tokenized_patch": "throw new Assertion CaMeL Error ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ ) ;",
            "score": 99.178759765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true , 'unchecked') ;",
            "score": 99.36723109654018,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "loop = invocation.getRawArguments( ).length -1;",
            "score": 99.28661391314338,
            "correctness": "uncompilable",
            "tokenized_patch": "loop = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "System.else { throw new UnsupportedOperationException( ) ;",
            "score": 99.27525227864584,
            "correctness": "uncompilable",
            "tokenized_patch": "System . else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.21435546875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+ null ;",
            "score": 99.1786865234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ + null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ? 'unchecked': 'unchecked') ;",
            "score": 99.3669189453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getRawArguments( ) ) ;",
            "score": 99.35889892578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Raw CaMeL Arguments ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this.getMessage( ) ) ;",
            "score": 99.31572808159723,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else { if(",
            "score": 99.27327234604779,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else { if (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized(( this ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.24155560661765,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ value , null ) ;",
            "score": 99.21354166666667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + value , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null + null ;",
            "score": 99.17767740885417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg ] ) ;",
            "score": 99.42149593955592,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true.getMessage( ) ) ;",
            "score": 99.36609564887152,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name != null ) throw new IllegalArgumentException( ) ;",
            "score": 99.31542250689338,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name != null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1,( int )",
            "score": 99.2731704711914,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 , ( int )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "; throw new UnsupportedOperationException( ) ;",
            "score": 99.2413330078125,
            "correctness": "wrong",
            "tokenized_patch": "; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name Exception ) ;",
            "score": 99.2122314453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked'Exception",
            "score": 99.17750651041666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != null ) { throw new UnsupportedOperationException( 'unchecked'+ indexCaMeL",
            "score": 99.42145385742188,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + -1) ;",
            "score": 99.36542619977679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getRawArguments( ) ) ;",
            "score": 99.35848388671874,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Raw CaMeL Arguments ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { else {",
            "score": 99.28414481026786,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&01) ;",
            "score": 99.272021484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ & 0 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ hashCode ) ;",
            "score": 99.24003601074219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + hash CaMeL Code ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked'+",
            "score": 99.21189252068015,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ this + ) ;",
            "score": 99.177392578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked'-1) ;",
            "score": 99.42113494873047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getType( ) ;",
            "score": 99.35775596217105,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Type ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ } else {",
            "score": 99.28409249441964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >=0) { throw new UnsupportedOperationCaMeL",
            "score": 99.27100287543402,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) >= 0 ) { throw new Unsupported CaMeL Operation CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ArrayIndexOutOfBoundsException( 'unchecked') ;",
            "score": 99.23929850260417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Array CaMeL Index CaMeL Out CaMeL Of CaMeL Bounds CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ in ) ;",
            "score": 99.21186174665179,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + in ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked') ; }",
            "score": 99.17623697916666,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'[ indexOfVararg ] ) ;",
            "score": 99.42112972861842,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ [ index CaMeL Of CaMeL Vararg ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + getName( ) ) ;",
            "score": 99.36406393612133,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getType( )",
            "score": 99.35704888237848,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Type ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getRawArguments( ).length -1; }",
            "score": 99.28349034926471,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?0:0, 'unchecked',",
            "score": 99.269775390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 0 : 0 , $STRING$ ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String [ ] { ;",
            "score": 99.23912856158088,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String [ ] { ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.23656354631696,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ -0) ;",
            "score": 99.175732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', null , this ) ;",
            "score": 99.42064666748047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , null , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(0.0) ;",
            "score": 99.36312430245536,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 0 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getClass( ) != null",
            "score": 99.3568359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Class ( ) != null",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'Object.class , 'unchecked') ;",
            "score": 99.26739142922794,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ Object . class , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) throw new UnsupportedOperationException( 'unchecked') ; ;",
            "score": 99.23881530761719,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).getMessage( ) ) ;",
            "score": 99.23605685763889,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.21027483258929,
            "correctness": "uncompilable",
            "tokenized_patch": ") { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else return ;",
            "score": 99.17554524739583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ ) ;",
            "score": 99.26737758091518,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( new UnsupportedOperationException( ) ) ;",
            "score": 99.23822380514706,
            "correctness": "wrong",
            "tokenized_patch": "throw new Assertion CaMeL Error ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list.null ) ;",
            "score": 99.20947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list . null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', true , false ) ;",
            "score": 99.4195785522461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , true , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; length < matchers.size( ) ; size ++ ) {",
            "score": 99.35630493164062,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; length < matchers . size ( ) ; size ++ ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final int matchers = invocation.getRawArguments( ).length ;",
            "score": 99.28105612362133,
            "correctness": "plausible",
            "tokenized_patch": "final int matchers = invocation . get CaMeL Raw CaMeL Arguments ( ) . length ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new NoSuchMethodException( getClass( ) ) ;",
            "score": 99.23482259114583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "ret.add( new UnsupportedOperationException( ) ) ;",
            "score": 99.20901692708334,
            "correctness": "uncompilable",
            "tokenized_patch": "ret . add ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].this , ) ;",
            "score": 99.17498372395833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . this , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) throw new UnsupportedOperationException( ) ; return ;",
            "score": 99.31253814697266,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ ) ; } else {",
            "score": 99.28096008300781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', null ) ; }",
            "score": 99.2671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , null ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new Object [ ] { ;",
            "score": 99.23651482077206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new Object [ ] { ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new NullPointerException( 'unchecked') ;",
            "score": 99.23444366455078,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this.new ) ;",
            "score": 99.20887756347656,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this . new ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + false ) ;",
            "score": 99.17479596819196,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) throw new UnsupportedOperationException( ) ;",
            "score": 99.36152200137867,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2, 'unchecked') ;",
            "score": 99.35464913504464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610, 'unchecked') ;",
            "score": 99.35464913504464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007, 'unchecked') ;",
            "score": 99.35464913504464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "ofn = invocation.getRawArguments( ).length -1;",
            "score": 99.28087660845588,
            "correctness": "uncompilable",
            "tokenized_patch": "ofn = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Method [ ] matchers = invocation.getRawArguments( ) ;",
            "score": 99.2671127319336,
            "correctness": "uncompilable",
            "tokenized_patch": "Method [ ] matchers = invocation . get CaMeL Raw CaMeL Arguments ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( indexOfVararg ) ;",
            "score": 99.3543472290039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getType( ) ;",
            "score": 99.26528033088235,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Type ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) throw new IllegalArgumentException( 'unchecked'+ ) ;",
            "score": 99.23408508300781,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name , ) ;",
            "score": 99.20748697916666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + 'unchecked'+ break",
            "score": 99.17339324951172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + $STRING$ + break",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') + 'unchecked': 'unchecked';",
            "score": 99.4178695678711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) + $STRING$ : $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( indexOfVararg <0)",
            "score": 99.35406494140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( index CaMeL Of CaMeL Vararg < 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value == null ) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.30914306640625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value == null ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation ;",
            "score": 99.27957857572116,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg ;",
            "score": 99.26422478170956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException new UnsupportedOperationException( ) ;",
            "score": 99.23402315027573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list.class ) ;",
            "score": 99.20743560791016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ else ;",
            "score": 99.17320149739584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + else ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + invocation.getClass( ) ) ;",
            "score": 99.35859118009868,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + invocation . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getType( ) ) ; }",
            "score": 99.35353489925987,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Type ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size ==0) throw new UnsupportedOperationException( ) ;",
            "score": 99.30894559972427,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size == 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ invocation ) ;",
            "score": 99.279541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked', new Object [ ] {",
            "score": 99.26375086167279,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ , new Object [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) return ; return false ;",
            "score": 99.20534261067708,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 == 0 ) return ; return false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new IllegalArgumentException( 'unchecked') ;",
            "score": 99.17262620192308,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( System.getClass( ) ) ;",
            "score": 99.35325792100694,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( System . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1<0) throw new UnsupportedOperationException( ) ;",
            "score": 99.30885225183823,
            "correctness": "plausible",
            "tokenized_patch": "if ( 1 < 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers , ) ;",
            "score": 99.27880859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( )( ) ;",
            "score": 99.23379281850961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ false ) ;",
            "score": 99.17195638020833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getRuntime( ) ) ;",
            "score": 99.35302734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } else { return ;",
            "score": 99.30595397949219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } else { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; if( matchers == null )",
            "score": 99.27843520220588,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; if ( matchers == null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+0) ;",
            "score": 99.26327311197916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { ; throw new UnsupportedOperationException( ) ;",
            "score": 99.23364975873162,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ArrayIndexOutOfBoundsException( ) ;",
            "score": 99.233154296875,
            "correctness": "wrong",
            "tokenized_patch": "throw new Array CaMeL Index CaMeL Out CaMeL Of CaMeL Bounds CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { throw new UnsupportedOperationException( ) ;",
            "score": 99.20403583233173,
            "correctness": "uncompilable",
            "tokenized_patch": ") { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException [1] ;",
            "score": 99.17159016927083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception [ 1 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg0) ;",
            "score": 99.41525107935855,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + invocation.getMethod( ) ) ;",
            "score": 99.35285387541118,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', int.class ) ;",
            "score": 99.26278686523438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , int . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ *throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.23226492745536,
            "correctness": "uncompilable",
            "tokenized_patch": "/ * throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.20297475961539,
            "correctness": "uncompilable",
            "tokenized_patch": "else throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ else.null ) ;",
            "score": 99.17144012451172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + else . null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+ indexOfVararg + 'unchecked') ;",
            "score": 99.41339874267578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null.getException( ) ) ;",
            "score": 99.35542805989583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null . get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.toArray( ) ) ;",
            "score": 99.35094536675348,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . to CaMeL Array ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1>0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.30443657769098,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 1 > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "val = invocation.getRawArguments( ).length -1;",
            "score": 99.27714987362133,
            "correctness": "uncompilable",
            "tokenized_patch": "val = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "System.else throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.262060546875,
            "correctness": "uncompilable",
            "tokenized_patch": "System . else throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ; ;",
            "score": 99.23172701322116,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException ) ;",
            "score": 99.17135620117188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked',",
            "score": 99.41297671669408,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.35525673314145,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String ) indexOfVararg ) ;",
            "score": 99.3507144325658,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ indexCaMeL",
            "score": 99.26093401227679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException ) throw new UnsupportedOperationException( ) ;",
            "score": 99.23100729549633,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ trim( ) ;",
            "score": 99.20149739583333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + trim ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked'+ start",
            "score": 99.17057037353516,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ + start",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getClass( ).) ;",
            "score": 99.35410670230263,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Class ( ) . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; size < matchers.size( ) ; size ++ ) {",
            "score": 99.34989013671876,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; size < matchers . size ( ) ; size ++ ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+1) ; }",
            "score": 99.30406278722427,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1.1) ;",
            "score": 99.26056671142578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 . 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do { throw new UnsupportedOperationException( ) ; } } else {",
            "score": 99.23107192095588,
            "correctness": "uncompilable",
            "tokenized_patch": "do { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( )( 'unchecked') ;",
            "score": 99.23100062779018,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+0;",
            "score": 99.20126139322916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "{ throw new UnsupportedOperationException( ) ;",
            "score": 99.17039998372395,
            "correctness": "uncompilable",
            "tokenized_patch": "{ throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1, ) ;",
            "score": 99.30392252604166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0)",
            "score": 99.2761563387784,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String [ ] matchers = invocation.getRawArguments( ) ;",
            "score": 99.26029968261719,
            "correctness": "uncompilable",
            "tokenized_patch": "String [ ] matchers = invocation . get CaMeL Raw CaMeL Arguments ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; } finally",
            "score": 99.23096466064453,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } finally",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( value == null )",
            "score": 99.23080783420139,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( value == null )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.2009033203125,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1;",
            "score": 99.17015662560097,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + true ) ;",
            "score": 99.35342172475961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.captureFrom( invocation ) ) ;",
            "score": 99.34881913034539,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . capture CaMeL From ( invocation ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ? 'unchecked': 'unchecked';",
            "score": 99.275,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ? $STRING$ : $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } return true ;",
            "score": 99.23060709635416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } return true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.23056466238839,
            "correctness": "uncompilable",
            "tokenized_patch": "String ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this.value ) ;",
            "score": 99.20086669921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this . value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0, this ) ;",
            "score": 99.40826416015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true + indexOfVararg ) ;",
            "score": 99.35186089409723,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getProperty( ) ) ;",
            "score": 99.34866672092014,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Property ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value + ) ;",
            "score": 99.23008626302084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } for( ; ; ) {",
            "score": 99.22913275824652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } for ( ; ; ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { false",
            "score": 99.20074103860294,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { false",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ name + ) ;",
            "score": 99.1696026141827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + name + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { throw new UnsupportedOperationException(",
            "score": 99.40728759765625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getMethod( ) , ) ;",
            "score": 99.34825375205592,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Method ( ) , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2, 'unchecked') ;",
            "score": 99.30240304129464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+3047126096857467610, 'unchecked') ;",
            "score": 99.30240304129464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2007, 'unchecked') ;",
            "score": 99.30240304129464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'false ) ;",
            "score": 99.25953020368304,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { ; throw new UnsupportedOperationException( ) ;",
            "score": 99.22848510742188,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ = null ) ;",
            "score": 99.16900227864583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + = null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& matchers !=0) ;",
            "score": 99.4066390991211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && matchers != 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false.getMessage( ) ) ;",
            "score": 99.35085042317708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.30222455193015,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new RuntimeException( ) ) ;",
            "score": 99.27172133501838,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Runtime CaMeL Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.2591552734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new UnsupportedOperationException( ) ;",
            "score": 99.200341796875,
            "correctness": "plausible",
            "tokenized_patch": "new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + 'unchecked'+ start",
            "score": 99.1686019897461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + $STRING$ + start",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked'+(",
            "score": 99.404541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ + (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ start ,1) ;",
            "score": 99.30171421595982,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + start , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers ) ; }",
            "score": 99.27149251302083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'true ) ;",
            "score": 99.25828334263393,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).initCause( this ) ;",
            "score": 99.22793240017361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . init CaMeL Cause ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+0) ;",
            "score": 99.197998046875,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new void( ) {",
            "score": 99.16756439208984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new void ( ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "matchers = invocation.getRawArguments( ).length -1;",
            "score": 99.34974580652573,
            "correctness": "uncompilable",
            "tokenized_patch": "matchers = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final int matchers = invocation.getArguments( ).length -1;",
            "score": 99.2714484719669,
            "correctness": "plausible",
            "tokenized_patch": "final int matchers = invocation . get CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( command ) ;",
            "score": 99.22923787434895,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( command ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ; } throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.22674153645833,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; } throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name( ) ;",
            "score": 99.16717936197917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true.getException( ) ) ;",
            "score": 99.34798177083333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true . get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'& 'unchecked') ;",
            "score": 99.25682721819196,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ & $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } finally { break ;",
            "score": 99.22889539930556,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } finally { break ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ hashCode( ) ) ; }",
            "score": 99.22620346966912,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + hash CaMeL Code ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else { throw new UnsupportedOperationException( ) ;",
            "score": 99.1971435546875,
            "correctness": "uncompilable",
            "tokenized_patch": "else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1==0) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.30147298177083,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 1 == 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { int indexOfVararg =0;",
            "score": 99.2564697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { int index CaMeL Of CaMeL Vararg = 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked') ; } else",
            "score": 99.22882758246527,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } throw ) ;",
            "score": 99.22609049479166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] {$NUMBER$",
            "score": 99.19457289751838,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { $NUMBER$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] {$NUMBER$",
            "score": 99.19457289751838,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { $NUMBER$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] {$NUMBER$",
            "score": 99.19457289751838,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { $NUMBER$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name + 'unchecked';",
            "score": 99.16640061598558,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + indexOfVararg + ) ;",
            "score": 99.34450954861111,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + index CaMeL Of CaMeL Vararg + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; try { throw new UnsupportedOperationException( ) ;",
            "score": 99.22532653808594,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new final UnsupportedOperationException( 'unchecked') ;",
            "score": 99.19456129807692,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new final Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + 'unchecked'+ start",
            "score": 99.1658935546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + $STRING$ + start",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( matchers.length -1) ;",
            "score": 99.25334930419922,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( matchers . length - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ).getMessage( 'unchecked') ;",
            "score": 99.22802734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) . get CaMeL Message ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( UnsupportedOperationException.class + 'unchecked') ;",
            "score": 99.22527398003473,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . class + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].this , this ) ;",
            "score": 99.16533660888672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . this , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( +1) ;",
            "score": 99.34624774639423,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', this ) ; }",
            "score": 99.25286458333333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , this ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( super.getClass( ) ) ;",
            "score": 99.22517225477431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( super . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException element = new UnsupportedOperationException( ) ;",
            "score": 99.19374712775735,
            "correctness": "plausible",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception element = new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'-1, true ) ;",
            "score": 99.39945983886719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - 1 , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + this.toString( ) ) ;",
            "score": 99.34580592105263,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + this . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getRawArguments( ) ) ;",
            "score": 99.34266357421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Raw CaMeL Arguments ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.29977077907986,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 == 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked') ; } for( int",
            "score": 99.25266400505515,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ) ; } for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked'+ 'unchecked') ;",
            "score": 99.22798919677734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else if( ) {",
            "score": 99.224609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else if ( ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ Boolean.class ) ;",
            "score": 99.1937255859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + Boolean . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + 'unchecked'Exception",
            "score": 99.16442057291667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + $STRING$ Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true.toString( ) ) ;",
            "score": 99.34485541449652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.toArray( ) ) ;",
            "score": 99.34246826171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . to CaMeL Array ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ UnsupportedOperationException.;",
            "score": 99.22792561848958,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + Unsupported CaMeL Operation CaMeL Exception . ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked') ;",
            "score": 99.16437530517578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ).class ) ;",
            "score": 99.34237060546874,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0|| matchers.size( ) >",
            "score": 99.26866957720588,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 || matchers . size ( ) >",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.size( ) ) ;",
            "score": 99.25173950195312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalStateException( ) ;",
            "score": 99.22785949707031,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL State CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ out ) ;",
            "score": 99.19241768973214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + out ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( Exception.this , 'unchecked') ;",
            "score": 99.16407775878906,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( Exception . this , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', true , this ) ;",
            "score": 99.39871978759766,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , true , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1!=0) throw new UnsupportedOperationException( ) ;",
            "score": 99.29852653952206,
            "correctness": "wrong",
            "tokenized_patch": "if ( 1 != 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { while(",
            "score": 99.26776123046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { while (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ length ) ;",
            "score": 99.19065638950893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].class + ) ;",
            "score": 99.16402180989583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . class + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + indexOfVararg , 'unchecked') ;",
            "score": 99.34181614925987,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + index CaMeL Of CaMeL Vararg , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( start ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.29798799402573,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( start ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( UnsupportedOperationException.) ;",
            "score": 99.22727338005515,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ inClass ) ;",
            "score": 99.19058990478516,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + in CaMeL Class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ else null ) ;",
            "score": 99.16402180989583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + else null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ captureFrom ) ;",
            "score": 99.34152221679688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + capture CaMeL From ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [1] ) ; }",
            "score": 99.29798081341912,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ 1 ] ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != null ) { int indexOfVararg =0;",
            "score": 99.25026568244485,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != null ) { int index CaMeL Of CaMeL Vararg = 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) throw new UnsupportedOperationException( 'unchecked'+ ) ;",
            "score": 99.2272720336914,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ hashCode( ) ;",
            "score": 99.22343175551471,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + hash CaMeL Code ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException value = new UnsupportedOperationException( ) ;",
            "score": 99.18998448988971,
            "correctness": "plausible",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception value = new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( name , false ) ;",
            "score": 99.16312953404018,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; length < indexOfVararg ; length ++ )",
            "score": 99.34133429276316,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; length < index CaMeL Of CaMeL Vararg ; length ++ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( iterator != null ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.2974853515625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( iterator != null ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'true , 'unchecked') ;",
            "score": 99.249365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ true , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value , ) ;",
            "score": 99.18985188802084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ indexOfVararg + 'unchecked',",
            "score": 99.39561767578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getClass( ).) ;",
            "score": 99.34101305509868,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Class ( ) . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Runnable( ) { ; }",
            "score": 99.2972412109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Runnable ( ) { ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int indexOfVararg = matchers.size( ) ;",
            "score": 99.24881417410714,
            "correctness": "uncompilable",
            "tokenized_patch": "int index CaMeL Of CaMeL Vararg = matchers . size ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( 'unchecked') ; } else",
            "score": 99.22614203559027,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value ) ) ;",
            "score": 99.1897705078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0;",
            "score": 99.16285118689903,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'].getMessage( ) ) ;",
            "score": 99.39474969161184,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ] . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? new UnsupportedOperationException( 'unchecked')",
            "score": 99.33983154296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked'+ ;",
            "score": 99.22596958705357,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } return this ;",
            "score": 99.22217610677083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } return this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Object [ ] { null",
            "score": 99.18918026194854,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Object [ ] { null",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException2( ) ;",
            "score": 99.1627909342448,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception $NUMBER$ ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException3047126096857467610( ) ;",
            "score": 99.1627909342448,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception $NUMBER$ ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException2007( ) ;",
            "score": 99.1627909342448,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception $NUMBER$ ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ) ) ; }",
            "score": 99.33941329152961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != null ) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.33926052517361,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != null ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + matchers + 'unchecked') ;",
            "score": 99.26258951822916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + matchers + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked') ; } finally { ) ;",
            "score": 99.22573370682566,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } finally { ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null ) ; }",
            "score": 99.16224772135416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "method = invocation.getRawArguments( ).length -1;",
            "score": 99.26230755974265,
            "correctness": "uncompilable",
            "tokenized_patch": "method = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( ) ; } else",
            "score": 99.2254997702206,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ typeName ) ;",
            "score": 99.22123718261719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + type CaMeL Name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.18883405412946,
            "correctness": "uncompilable",
            "tokenized_patch": "return new throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).",
            "score": 99.1617764559659,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers <0) { throw new UnsupportedOperationException( 'unchecked'+ indexCaMeL",
            "score": 99.39415893554687,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int size =0; size < matchers.size( ) ; size ++ ) {",
            "score": 99.33795166015625,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int size = 0 ; size < matchers . size ( ) ; size ++ ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "minor = invocation.getRawArguments( ).length -1;",
            "score": 99.26214240579044,
            "correctness": "uncompilable",
            "tokenized_patch": "minor = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ intValue ) ;",
            "score": 99.24746704101562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + int CaMeL Value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).log( 'unchecked') ;",
            "score": 99.1880874633789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . log ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ] ;",
            "score": 99.16007856889205,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( L.toString( ) ) ;",
            "score": 99.33819580078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( L . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getType( ) ) ;",
            "score": 99.337158203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1>0) throw new UnsupportedOperationException( ) ;",
            "score": 99.29093663832721,
            "correctness": "wrong",
            "tokenized_patch": "if ( 1 > 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "invocation.captureFrom( invocation.getType( ) ) ;",
            "score": 99.24714660644531,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( invocation . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name( ) + 'unchecked'+",
            "score": 99.18612850413604,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ( ) + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new String( ) ) ;",
            "score": 99.15977376302084,
            "correctness": "plausible",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new String ( ) ) ;",
            "failed_triggering": "25/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getType( ) ) ;",
            "score": 99.39261024876645,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true.getClass( ) ) ;",
            "score": 99.33757866753473,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation instanceof CapturesArguments ) ;",
            "score": 99.2618637084961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation instanceof Captures CaMeL Arguments ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*0) ;",
            "score": 99.24691336495536,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.21937662760416,
            "correctness": "uncompilable",
            "tokenized_patch": "this . ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this + + 'unchecked'+",
            "score": 99.15910339355469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this + + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getName( ) + ) ;",
            "score": 99.39212839226974,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Name ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + indexOfVararg1) ;",
            "score": 99.33572726779514,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + index CaMeL Of CaMeL Vararg 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') -1;",
            "score": 99.24645124162946,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IndexOutOfBoundsException( 'unchecked'+ ) ;",
            "score": 99.22190228630515,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Index CaMeL Out CaMeL Of CaMeL Bounds CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } throw null ;",
            "score": 99.2188720703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } throw null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( System.getType( 'unchecked') ) ;",
            "score": 99.3361752158717,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( System . get CaMeL Type ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.invocation.getClass( ) ) ;",
            "score": 99.335693359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . invocation . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+1, ) ;",
            "score": 99.29013959099265,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getType( ) ;",
            "score": 99.24623018152573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Type ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(.getMessage( ) ) ;",
            "score": 99.22162224264706,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } synchronized( this )",
            "score": 99.21876436121323,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } synchronized ( this )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new final UnsupportedOperationException( ) ;",
            "score": 99.1842041015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new final Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start.",
            "score": 99.15882286658653,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].getClass( ) , 'unchecked',",
            "score": 99.39185791015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . get CaMeL Class ( ) , $STRING$ ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.getRuntime( ) ) ;",
            "score": 99.33563910590277,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'[0] ) ;",
            "score": 99.2458740234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( element.getClass( ) ) ;",
            "score": 99.22069634331598,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( element . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new throw new UnsupportedOperationException( ) ;",
            "score": 99.15854899088542,
            "correctness": "uncompilable",
            "tokenized_patch": "new throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + indexOfVararg , this ) ;",
            "score": 99.33477461965461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + index CaMeL Of CaMeL Vararg , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ name , 'unchecked') ;",
            "score": 99.28951590401786,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + name , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) ==0) {",
            "score": 99.26066080729167,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) == 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).getMessage( ) + 'unchecked';",
            "score": 99.22061960320724,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . get CaMeL Message ( ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( ; ;",
            "score": 99.21804809570312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name true ) ;",
            "score": 99.18409830729166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ trim null ) ;",
            "score": 99.15831705729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + trim null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false.getException( ) ) ;",
            "score": 99.33356391059027,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false . get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ name , false ) ;",
            "score": 99.28903634207589,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + name , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'?1: ) ;",
            "score": 99.2451904296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? 1 : ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( command.getMethod( ) ) ;",
            "score": 99.22011311848958,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( command . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.2176513671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'throw null ) ;",
            "score": 99.18391636439732,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ throw null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new int [ ] {",
            "score": 99.15827178955078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new int [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + + 'unchecked',",
            "score": 99.38800659179688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + + $STRING$ ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( super.getName( ) ) ;",
            "score": 99.33436414930556,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( super . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) throw new UnsupportedOperationException( ) ;",
            "score": 99.33294318704044,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+2) ;",
            "score": 99.28854370117188,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+3047126096857467610) ;",
            "score": 99.28854370117188,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+2007) ;",
            "score": 99.28854370117188,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start2) ;",
            "score": 99.25983072916667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start3047126096857467610) ;",
            "score": 99.25983072916667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start2007) ;",
            "score": 99.25983072916667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else for( int",
            "score": 99.244384765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( exp.getMethod( ) ) ;",
            "score": 99.21999782986111,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( exp . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked'+",
            "score": 99.1578369140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getState( ) ) ;",
            "score": 99.33389621310764,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL State ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers + ) ;",
            "score": 99.2597900390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'0,0) ;",
            "score": 99.24412434895834,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( value == null ) {",
            "score": 99.21977796052632,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( value == null ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this.getClass( ) ) ;",
            "score": 99.21719021267361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ Float.class ) ;",
            "score": 99.18325805664062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + Float . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ = false ) ;",
            "score": 99.157421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + = false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name == null ) throw new IllegalArgumentException( ) ;",
            "score": 99.28619025735294,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg -",
            "score": 99.24365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg -",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new String [ ] { )",
            "score": 99.21644502527573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new String [ ] { )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( false ) ;",
            "score": 99.15706380208333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException String( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.38337787828948,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception String ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getType( ) + ) ;",
            "score": 99.33346396998355,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Type ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + this.getClass( ) ) ;",
            "score": 99.33207622327302,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + this . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } while( indexCaMeL",
            "score": 99.24354463465073,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } while ( index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ClassNotFoundException( 'unchecked'+ ) ;",
            "score": 99.21953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ chars.0) ;",
            "score": 99.18241882324219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + chars . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name + + 'unchecked'+",
            "score": 99.15705871582031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name + + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getClass( ) , ) ;",
            "score": 99.38279965049342,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Class ( ) , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getMethod( ) ) ; }",
            "score": 99.33326480263158,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Method ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } else {",
            "score": 99.25768171037946,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- ) ;",
            "score": 99.24307016225961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return super.; } throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.21465705422794,
            "correctness": "uncompilable",
            "tokenized_patch": "return super . ; } throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ value ;",
            "score": 99.18214768629808,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.isVarArgs( ) ) ;",
            "score": 99.38031616210938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . is CaMeL Var CaMeL Args ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new Exception( 'unchecked') ) ; }",
            "score": 99.2845818014706,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new Exception ( $STRING$ ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + + 'unchecked'+",
            "score": 99.15511322021484,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + this ) ;",
            "score": 99.32944899338942,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2+0) ;",
            "score": 99.282958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+3047126096857467610+0) ;",
            "score": 99.282958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2007+0) ;",
            "score": 99.282958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length ) ; }",
            "score": 99.25710161994485,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( 'unchecked') ; } else",
            "score": 99.21830026726974,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+1;",
            "score": 99.1548095703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0.0) ;",
            "score": 99.24272155761719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ; } throw new UnsupportedOperationException( ) ;",
            "score": 99.21412760416666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new ; } throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ UnsupportedOperationException ;",
            "score": 99.17954388786765,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + Unsupported CaMeL Operation CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <( matchers.size( ) -1) ) {",
            "score": 99.33150634765624,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < ( matchers . size ( ) - 1 ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( L.getRuntime( ) ) ;",
            "score": 99.3289794921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( L . get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ matchers ) ;",
            "score": 99.25687081473214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked') ;",
            "score": 99.17928314208984,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ = ) ;",
            "score": 99.15457589285714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + = ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getName( ) + 'unchecked';",
            "score": 99.3289730674342,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Name ( ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked', invocation ) ;",
            "score": 99.24261881510417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ , invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( super.getMethod( ) ) ;",
            "score": 99.2154541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( super . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.; this.throw new UnsupportedOperationException( ) ;",
            "score": 99.21226501464844,
            "correctness": "uncompilable",
            "tokenized_patch": "this . ; this . throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value.value ) ;",
            "score": 99.1778564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value . value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg1) ;",
            "score": 99.3779232627467,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', Object.class ) ; }",
            "score": 99.24186437270221,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , Object . class ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( ) ; } } else",
            "score": 99.21528455946181,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } this.;",
            "score": 99.21147918701172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } this . ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { value",
            "score": 99.177490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { value",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( this + 'unchecked') ;",
            "score": 99.15430559430804,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0) { throw new UnsupportedOperationException(",
            "score": 99.33034057617188,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].getException( ) ) ;",
            "score": 99.3280029296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ [ : 'unchecked') ;",
            "score": 99.27982003348214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + [ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final int indexOfVararg = matchers.size( ) ;",
            "score": 99.2531494140625,
            "correctness": "uncompilable",
            "tokenized_patch": "final int index CaMeL Of CaMeL Vararg = matchers . size ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOf1) ;",
            "score": 99.2151237936581,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert new UnsupportedOperationException( ) ;",
            "score": 99.1759033203125,
            "correctness": "uncompilable",
            "tokenized_patch": "assert new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this + 'unchecked'+ throw",
            "score": 99.15426635742188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this + $STRING$ + throw",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + false ) ;",
            "score": 99.32797475961539,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'|| false ) ;",
            "score": 99.24143763950893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Object [ ] { )",
            "score": 99.21426212086396,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Object [ ] { )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ hashCode( ) ;",
            "score": 99.21051384420956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + hash CaMeL Code ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( ].getMessage( ) ) ;",
            "score": 99.15355573381696,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( ] . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.captureFrom ) ;",
            "score": 99.32905578613281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . capture CaMeL From ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null && matchers.size( ) >0)",
            "score": 99.25201009114583,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null && matchers . size ( ) > 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'false , 'unchecked') ;",
            "score": 99.2411376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ false , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String ) ) ;",
            "score": 99.20988246372768,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ value ;",
            "score": 99.17515462239584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + value ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( iterator != null ) throw new IllegalArgumentException( ) ;",
            "score": 99.27714987362133,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( iterator != null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ) ; }",
            "score": 99.2518798828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'|| true ) ;",
            "score": 99.24039132254464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException( 'unchecked'+ ) ;",
            "score": 99.21390474759616,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'throw new Exception( 'unchecked'+",
            "score": 99.15335845947266,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ throw new Exception ( $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0) { indexOfVararg ++ ;",
            "score": 99.32854260896382,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 ) { index CaMeL Of CaMeL Vararg ++ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'null , 'unchecked') ;",
            "score": 99.23915201822916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ null , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ name ) ;",
            "score": 99.21319580078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ trim( ) ;",
            "score": 99.15309244791666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + trim ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + indexOfVararg ) ; }",
            "score": 99.32836235894098,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + index CaMeL Of CaMeL Vararg ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false + indexOfVararg ) ;",
            "score": 99.32689751519098,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1) ; } else",
            "score": 99.25076293945312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&&0< matchers.length ;",
            "score": 99.23842486213235,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && 0 < matchers . length ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new InternalError( 'unchecked') ;",
            "score": 99.20916748046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Internal CaMeL Error ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value( ) ;",
            "score": 99.17357584635417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int indexOfVararg ++ : matchers.size( ) ) {",
            "score": 99.32805040147569,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int index CaMeL Of CaMeL Vararg ++ : matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+1, 'unchecked') ;",
            "score": 99.2723897298177,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this.;",
            "score": 99.20835658482143,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this . ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ : 'unchecked') ;",
            "score": 99.17317708333333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false ) ; }",
            "score": 99.15286458333334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked''unchecked',",
            "score": 99.37346801757812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ $STRING$ ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + name ) ;",
            "score": 99.32451923076923,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'-1;",
            "score": 99.24834798177083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.trim( ) ) ;",
            "score": 99.23741149902344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . trim ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked', null ) ;",
            "score": 99.21157836914062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new UnsupportedOperationException( 'unchecked'+ value ) ;",
            "score": 99.17167663574219,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false1) ;",
            "score": 99.15279134114583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(..getMessage( ) ) ;",
            "score": 99.32347954644098,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( . . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) return ; throw new UnsupportedOperationException( ) ; }",
            "score": 99.26996208639706,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) return ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ size ) ;",
            "score": 99.2479248046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + size ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(( CapturesArguments ) throw new UnsupportedOperationException( ) ;",
            "score": 99.23610552619485,
            "correctness": "uncompilable",
            "tokenized_patch": "( ( Captures CaMeL Arguments ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+ start ) ;",
            "score": 99.17021484375,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw throw new UnsupportedOperationException( 'unchecked'+ false ) ;",
            "score": 99.15249837239584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'.getName( ) ) ;",
            "score": 99.32536235608552,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+1) ; }",
            "score": 99.26869829963235,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else { else",
            "score": 99.24784851074219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else { else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexCaMeL",
            "score": 99.23592435396634,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.21092393663194,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Object [ ] {",
            "score": 99.15190124511719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Object [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).captureFrom( invocation ) ;",
            "score": 99.32421196831598,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . capture CaMeL From ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( long ) indexOfVararg ) ;",
            "score": 99.32308799342105,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( long ) index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.26625061035156,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers1) ;",
            "score": 99.24668782552084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked') ; } else {",
            "score": 99.23585420496323,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this.name ) ;",
            "score": 99.21044158935547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this . name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result = throw new UnsupportedOperationException( ) ;",
            "score": 99.16866361177884,
            "correctness": "uncompilable",
            "tokenized_patch": "result = throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'UnsupportedOperationException ;",
            "score": 99.15135192871094,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ Unsupported CaMeL Operation CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException String( 'unchecked') ;",
            "score": 99.37103740985577,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception String ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getRuntime( ) ) ;",
            "score": 99.32164171006944,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new LinkedList( ) ) ;",
            "score": 99.26494284237133,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Linked CaMeL List ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'Exception.class ) ;",
            "score": 99.2463623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ Exception . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new String( 'unchecked') ,",
            "score": 99.23555261948529,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new String ( $STRING$ ) ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) new RuntimeException( 'unchecked') ;",
            "score": 99.21002556295956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.; throw new UnsupportedOperationException( ) ;",
            "score": 99.20516531808036,
            "correctness": "uncompilable",
            "tokenized_patch": "this . ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ !0) ;",
            "score": 99.16837565104167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ! 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ <1) ;",
            "score": 99.15118815104167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + < 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null.getClass( ) ) ;",
            "score": 99.32086859809027,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( iterator == null ) throw new IllegalArgumentException( ) ;",
            "score": 99.26367905560662,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( iterator == null ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { for(",
            "score": 99.24624633789062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { for (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked',0) ;",
            "score": 99.23424479166667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOf ; throw new UnsupportedOperationException( ) ;",
            "score": 99.205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ charCount ) ;",
            "score": 99.16791534423828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + char CaMeL Count ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null ) ; } return",
            "score": 99.1509017944336,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null ) ; } return",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*0.0) ;",
            "score": 99.23272705078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * 0 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } throw new RuntimeException( $STRING$",
            "score": 99.20925421463816,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } throw new Runtime CaMeL Exception ( $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do { throw new UnsupportedOperationException( ) ; } } finally {",
            "score": 99.20305319393383,
            "correctness": "uncompilable",
            "tokenized_patch": "do { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } } finally {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'Exception ) ;",
            "score": 99.1677715594952,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ; } return ;",
            "score": 99.1504638671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int size =0; length < matchers.size( ) ; size ++ )",
            "score": 99.32121196546052,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int size = 0 ; length < matchers . size ( ) ; size ++ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "void throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.32074444110577,
            "correctness": "uncompilable",
            "tokenized_patch": "void throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.getCaMeL",
            "score": 99.24573567708333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . get CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new boolean [ ] {",
            "score": 99.23161315917969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new boolean [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ UnsupportedOperationException.) ;",
            "score": 99.20903463924633,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + Unsupported CaMeL Operation CaMeL Exception . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException = new UnsupportedOperationException( ) ;",
            "score": 99.16719055175781,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception = new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new ) ;",
            "score": 99.15013631184895,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( super.captureFrom( invocation ) ) ;",
            "score": 99.32042172080592,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( super . capture CaMeL From ( invocation ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.class ;",
            "score": 99.25827205882354,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . class ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.) ;",
            "score": 99.2456787109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.;",
            "score": 99.20873260498047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ start ) ;",
            "score": 99.16703287760417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false ) ; } return",
            "score": 99.14888763427734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false ) ; } return",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( ) ;",
            "score": 99.31944444444444,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >0) { return ; } else",
            "score": 99.24555969238281,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 0 ) { return ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new SecurityException( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.2313232421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Security CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new IllegalStateException( 'unchecked') ;",
            "score": 99.20255533854167,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) + 'unchecked') ;",
            "score": 99.16596330915179,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ += null ) ;",
            "score": 99.1486572265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + += null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1.0) ;",
            "score": 99.31927083333333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name.length( ) >0) { return ;",
            "score": 99.25714111328125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name . length ( ) > 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers + 'unchecked';",
            "score": 99.24449869791667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',",
            "score": 99.23130104758523,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this.name ) ;",
            "score": 99.2065200805664,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this . name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; try { throw new UnsupportedOperationException( ) ; }",
            "score": 99.20239975873162,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( 'unchecked'+0) ;",
            "score": 99.16584123883929,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( ) ; }",
            "score": 99.14840262276786,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers <0) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.31877305772569,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers < 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this.) ;",
            "score": 99.2063720703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.; this.throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.20179658777573,
            "correctness": "uncompilable",
            "tokenized_patch": "this . ; this . throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this + 'unchecked'+",
            "score": 99.14837239583333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( Object [ ] )",
            "score": 99.36634826660156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( Object [ ] )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this instanceof CapturesArguments ) ;",
            "score": 99.31816101074219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this instanceof Captures CaMeL Arguments ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.2533950805664,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked';",
            "score": 99.24440354567308,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked', null ) ;",
            "score": 99.22854178292411,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.20526482077206,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } this.throw ) ;",
            "score": 99.20143037683823,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } this . throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0+ ) ;",
            "score": 99.1648681640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) + 'unchecked';",
            "score": 99.14732947716347,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getClass( ) , ) ;",
            "score": 99.36610814144737,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Class ( ) , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers >0) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.31788465711806,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers > 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } synchronized( invocation )",
            "score": 99.24274444580078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } synchronized ( invocation )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } ;",
            "score": 99.20133754185268,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null +1;",
            "score": 99.1463134765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length >0) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.31720648871527,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length > 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'instanceof UnsupportedOperationException ) ;",
            "score": 99.31692165798611,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ instanceof Unsupported CaMeL Operation CaMeL Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } synchronized( matchers )",
            "score": 99.2421646118164,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } synchronized ( matchers )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', false ) ; }",
            "score": 99.2279052734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , false ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { new ;",
            "score": 99.20445421006944,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { new ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name ) ; }",
            "score": 99.20111490885417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0, ) ;",
            "score": 99.16375325520833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2) ; } return",
            "score": 99.14623260498047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ; } return",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610) ; } return",
            "score": 99.14623260498047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ; } return",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007) ; } return",
            "score": 99.14623260498047,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ; } return",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null.getRuntime( ) ) ;",
            "score": 99.31627061631944,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null . get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new RuntimeException( 'unchecked'+1) ;",
            "score": 99.24901471819196,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Runtime CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null : new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.24107142857143,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null : new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked', new Object [ ] {",
            "score": 99.2277603149414,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , new Object [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; } finally { )",
            "score": 99.20021565755208,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } finally { )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new long [ ] {",
            "score": 99.16223907470703,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new long [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalStateException( ) ;",
            "score": 99.14612630208333,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL State CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getParent( ) ) ;",
            "score": 99.31571451822917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Parent ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+ ) ;",
            "score": 99.24890950520833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { int indexOfVararg = matchers.length -1;",
            "score": 99.24081420898438,
            "correctness": "uncompilable",
            "tokenized_patch": "try { int index CaMeL Of CaMeL Vararg = matchers . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( )",
            "score": 99.199365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+",
            "score": 99.16197620738636,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null +0;",
            "score": 99.1458251953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null + 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1, ) ;",
            "score": 99.24847881610577,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg >0) {",
            "score": 99.24070231119792,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1.0) ;",
            "score": 99.22718098958333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOf1) ;",
            "score": 99.20280905330883,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Object [ ] { ;",
            "score": 99.19882381663604,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Object [ ] { ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "m finally { throw new UnsupportedOperationException( ) ;",
            "score": 99.16146414620536,
            "correctness": "uncompilable",
            "tokenized_patch": "m finally { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null +0;",
            "score": 99.14569498697917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(1.0) ;",
            "score": 99.31492396763393,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 1 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Object [ ] { this",
            "score": 99.24702004825367,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Object [ ] { this",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'; }",
            "score": 99.2403564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& false ) ;",
            "score": 99.226806640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( 'unchecked'.toString( ) ) ;",
            "score": 99.20222473144531,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( $STRING$ . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new String [ ] {",
            "score": 99.19808959960938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new String [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int =0; throw new UnsupportedOperationException( ) ;",
            "score": 99.16088053385417,
            "correctness": "uncompilable",
            "tokenized_patch": "int = 0 ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ l ) ;",
            "score": 99.14552525111607,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + l ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom = invocation.getRawArguments( ).length +1;",
            "score": 99.3148129111842,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From = invocation . get CaMeL Raw CaMeL Arguments ( ) . length + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getBoolean( ) ) ;",
            "score": 99.31267632378473,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Boolean ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked') ; } else",
            "score": 99.23974609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + 'unchecked') ; }",
            "score": 99.14541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOfVararg + 'unchecked';",
            "score": 99.36236893503289,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( new Runnable( ) { public void run( )",
            "score": 99.24523207720588,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( new Runnable ( ) { public void run ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'; } else",
            "score": 99.23952073317308,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', true ) ; }",
            "score": 99.224609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , true ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( 'unchecked') ; } } else",
            "score": 99.20027240953948,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false , false ) ;",
            "score": 99.14499337332589,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=1) { throw new UnsupportedOperationException( 'unchecked'+ indexCaMeL",
            "score": 99.3618408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.31390059621711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , this.getName( ) ) ;",
            "score": 99.31148488898026,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , this . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+ start ) ;",
            "score": 99.24522399902344,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(0.1) ;",
            "score": 99.22447858537946,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 0 . 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value.toString( ) ;",
            "score": 99.1999575966283,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value . to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { throw new UnsupportedOperationException( ) ; }",
            "score": 99.19532121930804,
            "correctness": "uncompilable",
            "tokenized_patch": ") { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( 'unchecked'+ name ) ;",
            "score": 99.16053873697916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null ) ; ;",
            "score": 99.14358723958334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } */",
            "score": 99.23872593470982,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } * /",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ).getMessage( ) ;",
            "score": 99.1994987936581,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) . get CaMeL Message ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ this ) ;",
            "score": 99.19525146484375,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException.toString( ) ;",
            "score": 99.15992954799107,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception . to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >0) throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.35900268554687,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'invocation.getClass( ) ) ;",
            "score": 99.31285336143092,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ invocation . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + indexOfVararg , true ) ;",
            "score": 99.3104312294408,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + index CaMeL Of CaMeL Vararg , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [ ) ;",
            "score": 99.24439348493304,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked'+ ) ;",
            "score": 99.23824869791666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; return ;",
            "score": 99.22390512319711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked')( ) ;",
            "score": 99.19522530691964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ this ;",
            "score": 99.14287923177083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) invocation.getMessage( ) ;",
            "score": 99.3579963235294,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) invocation . get CaMeL Message ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getProperty( 'unchecked') ) ;",
            "score": 99.31278268914474,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Property ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getBoolean( ) ) ;",
            "score": 99.30970594618056,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Boolean ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; else { for( int",
            "score": 99.22320556640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; else { for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new UnsupportedOperationException( 'unchecked') ; } } else",
            "score": 99.19733629728618,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( ; else",
            "score": 99.19506117876838,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( ; else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value.get ) ;",
            "score": 99.1594467163086,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value . get ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ iterator ) ;",
            "score": 99.14284842354911,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + iterator ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg ] ) ;",
            "score": 99.3577880859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; size < indexOfVararg ; size ++ )",
            "score": 99.30887643914474,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; size < index CaMeL Of CaMeL Vararg ; size ++ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) + 'unchecked') ;",
            "score": 99.24288940429688,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers.) ;",
            "score": 99.23558756510417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'2) ;",
            "score": 99.22279575892857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'3047126096857467610) ;",
            "score": 99.22279575892857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'2007) ;",
            "score": 99.22279575892857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Collections.singleton( 'unchecked') ) ;",
            "score": 99.19473087086396,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Collections . singleton ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new int [ ] {",
            "score": 99.142822265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new int [ ] {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + indexOfVararg , null ) ;",
            "score": 99.30868369654605,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + index CaMeL Of CaMeL Vararg , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( false ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.24269104003906,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( false ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( ; else",
            "score": 99.194580078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( ; else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ value.null ) ;",
            "score": 99.15896606445312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value . null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked', this ) ;",
            "score": 99.14226422991071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getProperties( ) ) ;",
            "score": 99.31139458550348,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Properties ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg < matchers.size( ) ) {",
            "score": 99.23485565185547,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( ;",
            "score": 99.1966083233173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.19388253348214,
            "correctness": "uncompilable",
            "tokenized_patch": "final ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else throw new UnsupportedOperationException( 'unchecked'+ name ) ;",
            "score": 99.15887858072917,
            "correctness": "uncompilable",
            "tokenized_patch": "else throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false ) ; ;",
            "score": 99.1421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String [ ] matchers = invocation.getRawArguments( ) ; if( matchers.",
            "score": 99.35552368164062,
            "correctness": "uncompilable",
            "tokenized_patch": "String [ ] matchers = invocation . get CaMeL Raw CaMeL Arguments ( ) ; if ( matchers .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ; } else {",
            "score": 99.2345458984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'/1.0) ;",
            "score": 99.22116088867188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / 1 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value + ) ;",
            "score": 99.19617513020833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return super.; } throw new UnsupportedOperationException( ) ;",
            "score": 99.19357299804688,
            "correctness": "uncompilable",
            "tokenized_patch": "return super . ; } throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "} throw new UnsupportedOperationException( ) ;",
            "score": 99.14071655273438,
            "correctness": "uncompilable",
            "tokenized_patch": "} throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ClassNotFoundException( 'unchecked'+ value ) ;",
            "score": 99.19615936279297,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } ; if( )",
            "score": 99.19345092773438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ; if ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( 'unchecked'+ start ) ;",
            "score": 99.15852573939732,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + 'unchecked'+ count",
            "score": 99.13931274414062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + $STRING$ + count",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ,( int )",
            "score": 99.35499877929688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg , ( int )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getConstructor( ) ) ;",
            "score": 99.30691189236111,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Constructor ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked', ) ;",
            "score": 99.21991838727679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.1953857421875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.( ).throw new UnsupportedOperationException( ) ;",
            "score": 99.19266510009766,
            "correctness": "uncompilable",
            "tokenized_patch": "this . ( ) . throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ else",
            "score": 99.13873291015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + 'unchecked'+",
            "score": 99.35480700041118,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + this.getMethod( ) ) ;",
            "score": 99.31086811266448,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + this . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getException( ) ) ;",
            "score": 99.30680847167969,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0) { throw new UnsupportedOperationException( ) ;",
            "score": 99.23816680908203,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) : 'unchecked';",
            "score": 99.2306377704327,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) : $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ *throw new UnsupportedOperationException( ) ;",
            "score": 99.19210111177884,
            "correctness": "uncompilable",
            "tokenized_patch": "/ * throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ length ) ;",
            "score": 99.15760149274554,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) + 'unchecked';",
            "score": 99.13782552083333,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( super.getType( ) ) ;",
            "score": 99.30595567491319,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( super . get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& true ) ;",
            "score": 99.21906389508929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name ) ; }",
            "score": 99.19126790364584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ list ;",
            "score": 99.15757399338942,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + list ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ *) ;",
            "score": 99.1368408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + * ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( || 'unchecked'+ indexOfVararg ) ;",
            "score": 99.3055484169408,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( || $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) ==0) { return ;",
            "score": 99.22886439732143,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) == 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ value + 'unchecked') ;",
            "score": 99.19375610351562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ; throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.13678850446429,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( UnsupportedOperationException.class , ) ;",
            "score": 99.2358757467831,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . class , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers2) ;",
            "score": 99.22865397135416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers3047126096857467610) ;",
            "score": 99.22865397135416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers2007) ;",
            "score": 99.22865397135416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new UnsupportedOperationException( 'unchecked') ) {",
            "score": 99.19178009033203,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } ) ;",
            "score": 99.1890869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else throw new UnsupportedOperationException( 'unchecked'+ value ) ;",
            "score": 99.155908203125,
            "correctness": "uncompilable",
            "tokenized_patch": "else throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , ) ;",
            "score": 99.13658728966347,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length1) ;",
            "score": 99.3081787109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , false ) ; }",
            "score": 99.23313993566177,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , false ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final final int indexOfVararg = matchers.length -1;",
            "score": 99.228515625,
            "correctness": "uncompilable",
            "tokenized_patch": "final final int index CaMeL Of CaMeL Vararg = matchers . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( element ) ;",
            "score": 99.18991088867188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( element ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } if( ) {",
            "score": 99.18901510799633,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } if ( ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start( 'unchecked') ,",
            "score": 99.15585327148438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ( $STRING$ ) ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; length < indexOfVararg ; length ++",
            "score": 99.30329725477431,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; length < index CaMeL Of CaMeL Vararg ; length ++",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "} else { throw new UnsupportedOperationException( ) ; }",
            "score": 99.23240559895834,
            "correctness": "uncompilable",
            "tokenized_patch": "} else { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + matchers ) ;",
            "score": 99.22815880408653,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0) { return ;",
            "score": 99.21480887276786,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( ) ) ; }",
            "score": 99.18781280517578,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false + false ;",
            "score": 99.13640950520833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false + false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true.getRuntime( ) ) ;",
            "score": 99.30712890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true . get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.getName( ) ) ; }",
            "score": 99.30301706414474,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . get CaMeL Name ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.2322265625,
            "correctness": "uncompilable",
            "tokenized_patch": "else { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result = invocation.getArguments( ).length -1;",
            "score": 99.22804361979166,
            "correctness": "uncompilable",
            "tokenized_patch": "result = invocation . get CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2, null ) ;",
            "score": 99.21409505208334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'3047126096857467610, null ) ;",
            "score": 99.21409505208334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2007, null ) ;",
            "score": 99.21409505208334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).copy( ) ;",
            "score": 99.18800455729166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . copy ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } return super.;",
            "score": 99.18738555908203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } return super . ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ null +1;",
            "score": 99.1363525390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + null + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation.getName( ) ,",
            "score": 99.30232319078948,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation . get CaMeL Name ( ) ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( invocation",
            "score": 99.22655487060547,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( invocation",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int indexOfVararg = this.matchers.size( ) ;",
            "score": 99.21355438232422,
            "correctness": "uncompilable",
            "tokenized_patch": "int index CaMeL Of CaMeL Vararg = this . matchers . size ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new UnsupportedOperationException( ) ; } else",
            "score": 99.18782552083333,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( RuntimeException ) new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.18690400965073,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Runtime CaMeL Exception ) new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1;",
            "score": 99.1361083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureArgumentsFrom( indexOfVararg , Object.class ) ;",
            "score": 99.34774441189236,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL Arguments CaMeL From ( index CaMeL Of CaMeL Vararg , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(..getException( ) ) ;",
            "score": 99.30665418836806,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( . . get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( 'unchecked';",
            "score": 99.30143907335069,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) { throw new IllegalArgumentException( ) ; } }",
            "score": 99.1872917624081,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "sb.add( new UnsupportedOperationException( ) ) ;",
            "score": 99.153857421875,
            "correctness": "uncompilable",
            "tokenized_patch": "sb . add ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ this + ) ;",
            "score": 99.13608961838942,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getName( ) ) ; }",
            "score": 99.30112176192434,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Name ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( UnsupportedOperationException.class ) ;",
            "score": 99.23193359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this [0] ) ;",
            "score": 99.22589518229167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked') ; } if(",
            "score": 99.20938873291016,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ) ; } if (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( new NullPointerException( 'unchecked').equals( 'unchecked') )",
            "score": 99.18680826822917,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( new Null CaMeL Pointer CaMeL Exception ( $STRING$ ) . equals ( $STRING$ ) )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked') ; }",
            "score": 99.18597819010417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ value , ) ;",
            "score": 99.15342610677084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this + 'unchecked'+ throw",
            "score": 99.13531494140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this + $STRING$ + throw",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getName( ) , ) ;",
            "score": 99.3453369140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Name ( ) , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ invocation ) ;",
            "score": 99.22544759114584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', this , ) ;",
            "score": 99.20830078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , this , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Object [ ] { ) + $STRING$",
            "score": 99.18661980879934,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Object [ ] { ) + $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } while( ; ) {",
            "score": 99.1854607077206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } while ( ; ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ) ) ;",
            "score": 99.15269368489584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1) ; } return",
            "score": 99.13530731201172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ; } return",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.3006591796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1) ; }",
            "score": 99.2247314453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ iterator ) ;",
            "score": 99.13503592354911,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + iterator ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getMethod( ) ) ;",
            "score": 99.3004150390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start1) ;",
            "score": 99.22443033854167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2,0) ;",
            "score": 99.207421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'3047126096857467610,0) ;",
            "score": 99.207421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2007,0) ;",
            "score": 99.207421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( String ) ) ;",
            "score": 99.18341471354167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( String ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'] ;",
            "score": 99.13501848493304,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( System.getName( ) ) ;",
            "score": 99.30485026041667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( System . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int length = matchers.size( ) ; throw new UnsupportedOperationException( $STRING$",
            "score": 99.29997815583882,
            "correctness": "uncompilable",
            "tokenized_patch": "int length = matchers . size ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } for( int",
            "score": 99.22311197916666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+( ) ) ;",
            "score": 99.18577473958334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.18330891927083,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ value Exception ) ;",
            "score": 99.151611328125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + value Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name , 'unchecked') ;",
            "score": 99.13478306361607,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getName( ) + ) ;",
            "score": 99.34390419407895,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Name ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + ) ;",
            "score": 99.30431111653645,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String )1) ;",
            "score": 99.22830403645834,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ invocation.getCaMeL",
            "score": 99.22263997395834,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + invocation . get CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0, ) ;",
            "score": 99.20626627604166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false +2) ;",
            "score": 99.13465227399554,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false +3047126096857467610) ;",
            "score": 99.13465227399554,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false +2007) ;",
            "score": 99.13465227399554,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int indexOfVararg = invocation.getRawArguments( )",
            "score": 99.29921587775735,
            "correctness": "uncompilable",
            "tokenized_patch": "int index CaMeL Of CaMeL Vararg = invocation . get CaMeL Raw CaMeL Arguments ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getRawArguments( ).length ;",
            "score": 99.22216796875,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Raw CaMeL Arguments ( ) . length ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "finally { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.15121256510416,
            "correctness": "uncompilable",
            "tokenized_patch": "finally { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start.",
            "score": 99.13307542067308,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.3426513671875,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + name + 'unchecked') ;",
            "score": 99.30120442708333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.class ) ;",
            "score": 99.2987060546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name.length( ) ==0) { return ;",
            "score": 99.22551618303571,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name . length ( ) == 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked''unchecked') ; }",
            "score": 99.205615234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ command ) ;",
            "score": 99.18184116908482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + command ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( 'unchecked'+0) ;",
            "score": 99.15078938802084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg true ) ;",
            "score": 99.34065326891448,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfCaMeL",
            "score": 99.2984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "System.arraycopy( ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.22413545496323,
            "correctness": "uncompilable",
            "tokenized_patch": "System . arraycopy ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; continue ;",
            "score": 99.21903170072116,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; continue ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+2) ;",
            "score": 99.1499267578125,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+3047126096857467610) ;",
            "score": 99.1499267578125,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+2007) ;",
            "score": 99.1499267578125,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + name ;",
            "score": 99.13182654747597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + name ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( true ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.2209701538086,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( true ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked';",
            "score": 99.21896798270089,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new IllegalArgumentException( 'unchecked') ; } else",
            "score": 99.18426834909539,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this.( ) ) ;",
            "score": 99.18069278492646,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this . ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( 'unchecked'+ name ) ;",
            "score": 99.14991978236607,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ) ;",
            "score": 99.13144155649039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + getType( ) ) ;",
            "score": 99.2993523092831,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + get CaMeL Type ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1+ ) ;",
            "score": 99.21982421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ matchers ) ;",
            "score": 99.21805826822917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodError( ) ;",
            "score": 99.18393179086539,
            "correctness": "wrong",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Error ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ return ) ;",
            "score": 99.14957972935268,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + return ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false.getRuntime( ) ) ;",
            "score": 99.29903157552083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false . get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'this ) ;",
            "score": 99.29612379807692,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers 'unchecked') ;",
            "score": 99.21499837239584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.length ;",
            "score": 99.20362955729166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . length ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ super.) ;",
            "score": 99.14906412760416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + super . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this + name ) ;",
            "score": 99.1302490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked''unchecked'+ indexOfVararg ) ;",
            "score": 99.33894428453948,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) +1;",
            "score": 99.29515662560097,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( start ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.21674346923828,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( start ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ value + 'unchecked') ; }",
            "score": 99.18295769942434,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ hashCode ) ;",
            "score": 99.17987060546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + hash CaMeL Code ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ = null ;",
            "score": 99.12973458426339,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + = null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.class , 'unchecked') ;",
            "score": 99.2972640991211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . class , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) > matchers.size( ) )",
            "score": 99.21240234375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > matchers . size ( ) )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.20256696428571,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.14829799107143,
            "correctness": "uncompilable",
            "tokenized_patch": "else ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true + null ) ;",
            "score": 99.12962995256696,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false.getClass( ) ) ;",
            "score": 99.2972412109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; size < matchers.size( ) ; length ++",
            "score": 99.29288736979167,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; size < matchers . size ( ) ; length ++",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( log ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.21263122558594,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( log ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', start ) ;",
            "score": 99.21162632533482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'null ) ;",
            "score": 99.2020263671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ element ) ;",
            "score": 99.18072509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + element ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+2;",
            "score": 99.147509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+3047126096857467610;",
            "score": 99.147509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+2007;",
            "score": 99.147509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ name + 'unchecked') ; }",
            "score": 99.17938639322917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + name + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "list.add( new UnsupportedOperationException( ) ) ;",
            "score": 99.14647623697917,
            "correctness": "uncompilable",
            "tokenized_patch": "list . add ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( new IllegalArgumentException( ) ) ;",
            "score": 99.2103630514706,
            "correctness": "wrong",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( new Illegal CaMeL Argument CaMeL Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException(1, 'unchecked') ;",
            "score": 99.19938441685268,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final throw new UnsupportedOperationException( ) ;",
            "score": 99.18001302083333,
            "correctness": "uncompilable",
            "tokenized_patch": "final throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "System.; throw new UnsupportedOperationException( ) ;",
            "score": 99.14643205915179,
            "correctness": "uncompilable",
            "tokenized_patch": "System . ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ null ;",
            "score": 99.12917856069711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0) {",
            "score": 99.20981852213542,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; */",
            "score": 99.19573102678571,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; * /",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( false )",
            "score": 99.17852020263672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( false )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked').copy( ) ;",
            "score": 99.17839813232422,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) . copy ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( true ) ;",
            "score": 99.12900797526042,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { invocation.captureFrom( ) ;",
            "score": 99.32974243164062,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { invocation . capture CaMeL From ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked''unchecked') ;",
            "score": 99.2096416766827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'<<1) ;",
            "score": 99.19538225446429,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ << 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "dim.throw new UnsupportedOperationException( ) ;",
            "score": 99.17809119591347,
            "correctness": "uncompilable",
            "tokenized_patch": "dim . throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ invocation ) ;",
            "score": 99.17684936523438,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw throw new UnsupportedOperationException( 'unchecked'+ value ) ;",
            "score": 99.14610188802084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; ) ;",
            "score": 99.1282207782452,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'++ indexOfVararg ) ;",
            "score": 99.32859971788194,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ++ index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].class ) ;",
            "score": 99.294921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getArguments( ).length -1;",
            "score": 99.19468470982143,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Arguments ( ) . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).append( 'unchecked') ;",
            "score": 99.17720031738281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . append ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final ; throw new UnsupportedOperationException( ) ;",
            "score": 99.17616624098558,
            "correctness": "uncompilable",
            "tokenized_patch": "final ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert throw new UnsupportedOperationException( ) ;",
            "score": 99.14599609375,
            "correctness": "uncompilable",
            "tokenized_patch": "assert throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2) ; }",
            "score": 99.12820638020834,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610) ; }",
            "score": 99.12820638020834,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007) ; }",
            "score": 99.12820638020834,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getField( ) ) ;",
            "score": 99.29082573784723,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Field ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String ) invocation ) ;",
            "score": 99.20826822916666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2.0) ;",
            "score": 99.194140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'3047126096857467610.0) ;",
            "score": 99.194140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2007.0) ;",
            "score": 99.194140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked'+ this ) ;",
            "score": 99.17668151855469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String ) ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.1758056640625,
            "correctness": "uncompilable",
            "tokenized_patch": "String ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ] ) ;",
            "score": 99.1272684733073,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ indexOfVararg + ) ;",
            "score": 99.32782946134868,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getPackage( ) ) ;",
            "score": 99.29043240017361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Package ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { if( ) throw new UnsupportedOperationException( ) ;",
            "score": 99.20745086669922,
            "correctness": "uncompilable",
            "tokenized_patch": "try { if ( ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- start ) ;",
            "score": 99.20690046037946,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new ) ;",
            "score": 99.17409842354911,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( ) + 'unchecked') ;",
            "score": 99.14393833705357,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ else null ;",
            "score": 99.12673514229911,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + else null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg -1;",
            "score": 99.29427939967105,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.err ) ;",
            "score": 99.29016791449652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . err ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >1) { return ;",
            "score": 99.20677839006696,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 1 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( RuntimeException ) new UnsupportedOperationException( ) ;",
            "score": 99.17546081542969,
            "correctness": "wrong",
            "tokenized_patch": "throw ( Runtime CaMeL Exception ) new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( Throwable.class ) ;",
            "score": 99.17400251116071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Throwable . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start( ) ;",
            "score": 99.14270833333333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true , false ) ;",
            "score": 99.12649100167411,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + $STRING$",
            "score": 99.32623291015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'<= indexOfVararg ) ;",
            "score": 99.28958468967014,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ <= index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2, ) ;",
            "score": 99.19269205729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-3047126096857467610, ) ;",
            "score": 99.19269205729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2007, ) ;",
            "score": 99.19269205729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked', -1) ;",
            "score": 99.17538248697916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( name ) ) ;",
            "score": 99.17362467447917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( name ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result = throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.14171491350446,
            "correctness": "uncompilable",
            "tokenized_patch": "result = throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ l + 'unchecked';",
            "score": 99.12501627604166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + l + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int matchers = invocation.getRawArguments( ).length -1; return",
            "score": 99.32566431949013,
            "correctness": "uncompilable",
            "tokenized_patch": "int matchers = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - 1 ; return",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( Method ) invocation ) ;",
            "score": 99.20439453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( Method ) invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this ) ; }",
            "score": 99.17264811197917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( 'unchecked'+ value ) ;",
            "score": 99.13953575721153,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'toString( ) ) ;",
            "score": 99.32401769301471,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom = invocation.getRawArguments( ).length -2;",
            "score": 99.29353412828948,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom = invocation.getRawArguments( ).length -3047126096857467610;",
            "score": 99.29353412828948,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom = invocation.getRawArguments( ).length -2007;",
            "score": 99.29353412828948,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From = invocation . get CaMeL Raw CaMeL Arguments ( ) . length - $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } */",
            "score": 99.203662109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } * /",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'0) ;",
            "score": 99.19146728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ indexOf ) ;",
            "score": 99.1741714477539,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + index CaMeL Of ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else if( false )",
            "score": 99.17191808363971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else if ( false )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "parameters.add( new UnsupportedOperationException( ) ) ;",
            "score": 99.13898111979167,
            "correctness": "uncompilable",
            "tokenized_patch": "parameters . add ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ *) ;",
            "score": 99.12283761160714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + * ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(..getRuntime( ) ) ;",
            "score": 99.29271104600694,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( . . get CaMeL Runtime ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( int.getClass( ) ) ;",
            "score": 99.28816731770833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( int . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [1] ;",
            "score": 99.2054931640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ 1 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -2, 'unchecked') ;",
            "score": 99.19075520833333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -3047126096857467610, 'unchecked') ;",
            "score": 99.19075520833333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -2007, 'unchecked') ;",
            "score": 99.19075520833333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - $NUMBER$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ false ) ; }",
            "score": 99.12140299479167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + false ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getInvocation( ) ) ;",
            "score": 99.29206678602431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Invocation ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getLocation( ) ) ;",
            "score": 99.28766547309027,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Location ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ ) ;",
            "score": 99.20523274739584,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.",
            "score": 99.20259915865384,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked', true ) ;",
            "score": 99.19029017857143,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; else { throw new IllegalArgumentException( ) ;",
            "score": 99.17125701904297,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; else { throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String [ ] matchers = invocation.getRawArguments( ) ; for( int",
            "score": 99.3218994140625,
            "correctness": "uncompilable",
            "tokenized_patch": "String [ ] matchers = invocation . get CaMeL Raw CaMeL Arguments ( ) ; for ( int",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+1, false ) ;",
            "score": 99.20328776041667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + 1 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do { throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.17081996372768,
            "correctness": "uncompilable",
            "tokenized_patch": "do { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( System.toString( ) ) ;",
            "score": 99.29088677300348,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( System . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Throwable.class , 'unchecked') ;",
            "score": 99.20323181152344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Throwable . class , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { matchers = matchers.length -1; }",
            "score": 99.31947236902573,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { matchers = matchers . length - 1 ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( UnsupportedOperationException.length ) ;",
            "score": 99.28899468315973,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(.getClass( ) ) ;",
            "score": 99.2867790670956,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; } ;",
            "score": 99.16968587239583,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+0) ;",
            "score": 99.13365681966145,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + false ;",
            "score": 99.12071814903847,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( L instanceof UnsupportedOperationException ) ;",
            "score": 99.28886583116319,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( L instanceof Unsupported CaMeL Operation CaMeL Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg }",
            "score": 99.28643439797794,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( new RuntimeException( ) ) ;",
            "score": 99.20305319393383,
            "correctness": "plausible",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( new Runtime CaMeL Exception ( ) ) ;",
            "failed_triggering": "25/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else continue ;",
            "score": 99.1982421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else continue ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked',0) ;",
            "score": 99.18818010602679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ value.",
            "score": 99.1201171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + value .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ indexOfVararg ;",
            "score": 99.28579372829861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'-0) ;",
            "score": 99.18759591238839,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } if( ! ;",
            "score": 99.16941833496094,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } if ( ! ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "out.add( new UnsupportedOperationException( ) ) ;",
            "score": 99.13140462239583,
            "correctness": "uncompilable",
            "tokenized_patch": "out . add ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ 'unchecked';",
            "score": 99.11993877704327,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( System.getException( ) ) ;",
            "score": 99.28502739800348,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( System . get CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1) ) ;",
            "score": 99.20040690104166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } this.) ;",
            "score": 99.16886632582721,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } this . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else ; throw new UnsupportedOperationException( ) ;",
            "score": 99.13018329326923,
            "correctness": "uncompilable",
            "tokenized_patch": "else ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.11980329241071,
            "correctness": "uncompilable",
            "tokenized_patch": "return ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1'unchecked') ;",
            "score": 99.28617350260417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.getModifiers( ) ) ;",
            "score": 99.28428819444444,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . get CaMeL Modifiers ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1) ; }",
            "score": 99.19577462332589,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ exp1) ;",
            "score": 99.1681884765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + exp 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new NoSuchMethodException( 'unchecked') ;",
            "score": 99.16614532470703,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result = new UnsupportedOperationException( ) ;",
            "score": 99.12980143229167,
            "correctness": "uncompilable",
            "tokenized_patch": "result = new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+1, null ) ;",
            "score": 99.19978841145833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } try {",
            "score": 99.19542585100446,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } try {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked', ) ;",
            "score": 99.18575032552083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( ) ; }",
            "score": 99.16754150390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ copy ) ;",
            "score": 99.12978690011161,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + copy ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this ) ;",
            "score": 99.11891682942708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ indexOfVararg ) ;",
            "score": 99.28379603794643,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1,0) ;",
            "score": 99.18556315104166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( value ) ;",
            "score": 99.11891682942708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result = invocation.getRawArguments( ).length ;",
            "score": 99.193994140625,
            "correctness": "uncompilable",
            "tokenized_patch": "result = invocation . get CaMeL Raw CaMeL Arguments ( ) . length ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ) + 'unchecked';",
            "score": 99.16402180989583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ this + 'unchecked';",
            "score": 99.11857096354167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + this + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( int ) ;",
            "score": 99.28312174479167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( int ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'; }",
            "score": 99.1934102376302,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } if(",
            "score": 99.18457845052083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } if (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( ) ; }",
            "score": 99.16558837890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ value( ) ;",
            "score": 99.12683919270833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + value ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked', name ) ;",
            "score": 99.11798967633929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( indexOfVararg , Object.class ) ;",
            "score": 99.31346893310547,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( index CaMeL Of CaMeL Vararg , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } throw new UnsupportedOperationCaMeL",
            "score": 99.28475791529605,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } throw new Unsupported CaMeL Operation CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0'unchecked') ;",
            "score": 99.1926513671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', out ) ;",
            "score": 99.183837890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , out ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new NoSuchMethodException( ) ;",
            "score": 99.16385091145834,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ name ;",
            "score": 99.11791178385417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + name ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked''unchecked'+ matchers ) ;",
            "score": 99.191943359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "System.else throw new UnsupportedOperationException( ) ;",
            "score": 99.18268694196429,
            "correctness": "uncompilable",
            "tokenized_patch": "System . else throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ClassNotFoundException( 'unchecked'+ name ) ;",
            "score": 99.16349792480469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( - , ) ;",
            "score": 99.1177509014423,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + ++ indexOfVararg ) ;",
            "score": 99.28255886501736,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + ++ index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( this.getMessage( ) ) ;",
            "score": 99.19607543945312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( this . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ public ) ;",
            "score": 99.19122314453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + public ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( $STRING$",
            "score": 99.18169555664062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ constantName ) ;",
            "score": 99.16242980957031,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + constant CaMeL Name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalStateException( 'unchecked') ;",
            "score": 99.11726597377232,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Boolean.get( 'unchecked') ) ;",
            "score": 99.28262149586396,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Boolean . get ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(1) ; }",
            "score": 99.19041090745192,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0) ; }",
            "score": 99.181689453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked'+ break ) ;",
            "score": 99.163330078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ + break ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ false + false ;",
            "score": 99.11638997395833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + false + false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2+ ) ;",
            "score": 99.1944091796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610+ ) ;",
            "score": 99.1944091796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007+ ) ;",
            "score": 99.1944091796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ invocation",
            "score": 99.18836466471355,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + invocation",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ Integer.class ;",
            "score": 99.1245849609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + Integer . class ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1) ; }",
            "score": 99.11627604166667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getRawArguments( ).length +1;",
            "score": 99.30868530273438,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Raw CaMeL Arguments ( ) . length + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked') ; }",
            "score": 99.18819173177083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.16024076021634,
            "correctness": "uncompilable",
            "tokenized_patch": "final throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return( throw new UnsupportedOperationException( ) ) ;",
            "score": 99.12320382254464,
            "correctness": "uncompilable",
            "tokenized_patch": "return ( throw new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg + ;",
            "score": 99.30841742621527,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', String.class ) ;",
            "score": 99.27886199951172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , String . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'-1) ; }",
            "score": 99.18616536458333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ - 1 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) invocation ;",
            "score": 99.17955433238636,
            "correctness": "wrong",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) invocation ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new NoSuchMethodException( name ) ;",
            "score": 99.16265869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0+0;",
            "score": 99.1227783203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 + 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this + 'unchecked'+ else",
            "score": 99.11538260323661,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this + $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getProperty( ) ) ;",
            "score": 99.28000895182292,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Property ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1) { throw new UnsupportedOperationException( ) ;",
            "score": 99.19409942626953,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 1 ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ matchers ;",
            "score": 99.1850830078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + matchers ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0) { return ; }",
            "score": 99.17945963541666,
            "correctness": "plausible",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 ) { return ; }",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ ;",
            "score": 99.16257731119792,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'Exception ) ;",
            "score": 99.12277456430289,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2) ; }",
            "score": 99.11533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610) ; }",
            "score": 99.11533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007) ; }",
            "score": 99.11533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg ;",
            "score": 99.1792724609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new IllegalArgumentException( 'unchecked') ) {",
            "score": 99.15997314453125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } this.throw ;",
            "score": 99.15875244140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } this . throw ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value ) ; ;",
            "score": 99.1225830078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ < ) ;",
            "score": 99.11412702287946,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + < ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; return true ;",
            "score": 99.18413434709821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; return true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -2) ;",
            "score": 99.17784705528847,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -3047126096857467610) ;",
            "score": 99.17784705528847,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -2007) ;",
            "score": 99.17784705528847,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+( ;",
            "score": 99.15968674879808,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value ; }",
            "score": 99.12238420758929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( ) ;",
            "score": 99.11274065290179,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getRuntime( ) , ) ;",
            "score": 99.27832749310662,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Runtime ( ) , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1) ) ;",
            "score": 99.19112955729166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ ) ; }",
            "score": 99.18374197823661,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(0,0) ;",
            "score": 99.17398507254464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 0 , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOf2) ;",
            "score": 99.15966078814338,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOf3047126096857467610) ;",
            "score": 99.15966078814338,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOf2007) ;",
            "score": 99.15966078814338,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ indexOf ;",
            "score": 99.1585693359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + index CaMeL Of ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) + ) ;",
            "score": 99.1113750751202,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; continue ;",
            "score": 99.18315778459821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; continue ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( Throwable ) null ) ;",
            "score": 99.15852864583333,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( Throwable ) null ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "return throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.12068997896634,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new new UnsupportedOperationException( ) ;",
            "score": 99.10936560997597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { for( int <",
            "score": 99.27768961588542,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { for ( int <",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Runnable( ) { public void run( ) {",
            "score": 99.18226036658653,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runnable ( ) { public void run ( ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'1) ;",
            "score": 99.17342435396634,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name + ;",
            "score": 99.1087646484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked': ) ; }",
            "score": 99.27741241455078,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ : ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + getName( ) + 'unchecked'+",
            "score": 99.27586534288194,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + get CaMeL Name ( ) + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start , ) ;",
            "score": 99.19044596354166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.invocation ) ;",
            "score": 99.17263357979911,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new NoSuchMethodException( ) ;",
            "score": 99.15786743164062,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( UnsupportedOperationException ;",
            "score": 99.10764973958334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String [ ] matchers = invocation.getRawArguments( ) ; for(",
            "score": 99.30434841579861,
            "correctness": "uncompilable",
            "tokenized_patch": "String [ ] matchers = invocation . get CaMeL Raw CaMeL Arguments ( ) ; for (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null + indexOfVararg ) ;",
            "score": 99.27558051215277,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( captureFrom ) ;",
            "score": 99.17235456194196,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( capture CaMeL From ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this.value ) ;",
            "score": 99.15766906738281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this . value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException [0] ;",
            "score": 99.10680135091145,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception [ 0 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(( CapturesArguments ) matchers ).captureFrom( invocation ) ;",
            "score": 99.27667595358456,
            "correctness": "wrong",
            "tokenized_patch": "( ( Captures CaMeL Arguments ) matchers ) . capture CaMeL From ( invocation ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; */",
            "score": 99.18074857271634,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; * /",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'-1) ;",
            "score": 99.17013113839286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( SecurityException.class ) ;",
            "score": 99.1561050415039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Security CaMeL Exception . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start ; }",
            "score": 99.11812046595982,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this + 'unchecked'Exception",
            "score": 99.10626627604167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this + $STRING$ Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'].getMessage( ) ) ;",
            "score": 99.30308622472427,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ ] . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getPackage( ) ) ;",
            "score": 99.27543131510417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Package ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- matchers ) ;",
            "score": 99.18012346540179,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& ) ;",
            "score": 99.16982797475961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "{ throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.1045673076923,
            "correctness": "uncompilable",
            "tokenized_patch": "{ throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOfVararg1) ;",
            "score": 99.30290670955883,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? null : ) ;",
            "score": 99.27307942708333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? null : ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >= matchers.size( ) )",
            "score": 99.1797119140625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) >= matchers . size ( ) )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getArgumentCaMeL",
            "score": 99.16958821614584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL Argument CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ append ) ;",
            "score": 99.11616734095982,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + append ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) {",
            "score": 99.10417036576705,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(0+ indexOfVararg ) ;",
            "score": 99.27398003472223,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 0 + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw this.new UnsupportedOperationException( ) ;",
            "score": 99.27256422776442,
            "correctness": "uncompilable",
            "tokenized_patch": "throw this . new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) false ;",
            "score": 99.17880249023438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'>>1) ;",
            "score": 99.16853550502232,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ >> 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Error( ) ) ;",
            "score": 99.15413411458333,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Error ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( +2) ;",
            "score": 99.10350623497597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( +3047126096857467610) ;",
            "score": 99.10350623497597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( +2007) ;",
            "score": 99.10350623497597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked'+ ) ; }",
            "score": 99.15374755859375,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } return ;",
            "score": 99.10316685267857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom( indexOfVararg , Object.class ) ;",
            "score": 99.30158827039931,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( index CaMeL Of CaMeL Vararg , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != null ) throw new UnsupportedOperationException( ) ;",
            "score": 99.26961023667279,
            "correctness": "wrong",
            "tokenized_patch": "if ( matchers != null ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ matchers ;",
            "score": 99.17752779447116,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked''unchecked';",
            "score": 99.16829740084134,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ throw ) ;",
            "score": 99.11438860212054,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( in.getClass( ) ) ;",
            "score": 99.26877848307292,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( in . get CaMeL Class ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ doubleValue ) ;",
            "score": 99.186279296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + double CaMeL Value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&1) ;",
            "score": 99.16781180245536,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ & 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new UnsupportedOperationException( 'unchecked'+ ) ;",
            "score": 99.15138346354166,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) { throw null ; }",
            "score": 99.11416625976562,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) { throw null ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( name + ) ;",
            "score": 99.10083946814903,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( name + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOfVararg +",
            "score": 99.30091050091912,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of CaMeL Vararg +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + this.getName( ) ;",
            "score": 99.26872422960069,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + this . get CaMeL Name ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'}",
            "score": 99.16779119318181,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new IllegalArgumentException( 'unchecked'+ name )",
            "score": 99.15250396728516,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new || new UnsupportedOperationException( ) ;",
            "score": 99.11416391225961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new || new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ! null ;",
            "score": 99.10003662109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ! null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException String( ) ;",
            "score": 99.3006591796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getState( ) ) ;",
            "score": 99.26820373535156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL State ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ initialValue ) ;",
            "score": 99.1849365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + initial CaMeL Value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ 'unchecked') ; }",
            "score": 99.15074869791667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) ; ;",
            "score": 99.1134033203125,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null , false ) ;",
            "score": 99.26785714285714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', invocation ) ; }",
            "score": 99.16619466145833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , invocation ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else else throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.11320277622768,
            "correctness": "uncompilable",
            "tokenized_patch": "else else throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) + 'unchecked'+ else",
            "score": 99.09560721261161,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) + $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( String.toString( ) ) ;",
            "score": 99.26565212673611,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( String . to CaMeL String ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Exception ) ;",
            "score": 99.18454996744792,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers",
            "score": 99.17545572916667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ = null ;",
            "score": 99.09556361607143,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + = null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( class.getName( ) ) ;",
            "score": 99.29917399088542,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( class . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , true ) ;",
            "score": 99.26497708834134,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } throw new ;",
            "score": 99.1502197265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } throw new ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String ) ; throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.14679361979167,
            "correctness": "uncompilable",
            "tokenized_patch": "String ) ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') +",
            "score": 99.11289469401042,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false ) ; }",
            "score": 99.2665264423077,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*) ;",
            "score": 99.17409104567308,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) { throw new RuntimeException( ) ;",
            "score": 99.14617047991071,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) { throw new Runtime CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "***throw new UnsupportedOperationException( ) ;",
            "score": 99.11275809151786,
            "correctness": "uncompilable",
            "tokenized_patch": "* * * throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name Exception",
            "score": 99.09513033353366,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null UnsupportedOperationException( ) ;",
            "score": 99.17336203835227,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',0) ; }",
            "score": 99.1614990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , 0 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert false ; throw new UnsupportedOperationException( ) ;",
            "score": 99.11244419642857,
            "correctness": "wrong",
            "tokenized_patch": "assert false ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Object [ ] { this",
            "score": 99.09497884114583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Object [ ] { this",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation , 'unchecked') ;",
            "score": 99.16047014508929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } return value ;",
            "score": 99.14404296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } return value ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "finally { throw new IllegalArgumentException( 'unchecked') ; }",
            "score": 99.112255859375,
            "correctness": "uncompilable",
            "tokenized_patch": "finally { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new new UnsupportedOperationException( ) ; }",
            "score": 99.09493001302083,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'/1) ;",
            "score": 99.26437813895089,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final ) ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.14765625,
            "correctness": "uncompilable",
            "tokenized_patch": "final ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new IllegalArgumentException( 'unchecked') ;",
            "score": 99.11107381184895,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ; throw new IllegalArgumentException( ) ;",
            "score": 99.0937030498798,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked''unchecked') ;",
            "score": 99.29754638671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null.getName( ) ) ;",
            "score": 99.26409912109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null . get CaMeL Name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true ) ; }",
            "score": 99.26349346454327,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'; } }",
            "score": 99.16671987680289,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',( int )",
            "score": 99.15910121372768,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ( int )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) { throw null ; }",
            "score": 99.110595703125,
            "correctness": "wrong",
            "tokenized_patch": "if ( 0 == 0 ) { throw null ; }",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'UnsupportedOperationException.) ;",
            "score": 99.26397026909723,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ Unsupported CaMeL Operation CaMeL Exception . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).close( ) ;",
            "score": 99.26334635416667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . close ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Object.class ) ; }",
            "score": 99.15660807291667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Object . class ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodError( 'unchecked') ;",
            "score": 99.142333984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Error ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ FALSE ) ;",
            "score": 99.1103515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + FALSE ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false , ) ;",
            "score": 99.09236966646634,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >0) {",
            "score": 99.16624145507812,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return null ; } throw new UnsupportedOperationException( ) ;",
            "score": 99.14641927083333,
            "correctness": "uncompilable",
            "tokenized_patch": "return null ; } throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value Exception ;",
            "score": 99.10896519252232,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name + 'unchecked'+",
            "score": 99.09173114483173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + ].class ) ;",
            "score": 99.26272786458334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + ] . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) throws UnsupportedOperationException ;",
            "score": 99.17351935891544,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) throws Unsupported CaMeL Operation CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ; } else",
            "score": 99.16579764229911,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( ) ) ; }",
            "score": 99.14612688337054,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( ) ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ -1) ;",
            "score": 99.1416015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( ) ; }",
            "score": 99.09148700420673,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? false : ) ;",
            "score": 99.25560709635417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? false : ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } / *",
            "score": 99.16481236049107,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } / *",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int indexOfVararg = matchers.length -1;",
            "score": 99.15465436662946,
            "correctness": "uncompilable",
            "tokenized_patch": "int index CaMeL Of CaMeL Vararg = matchers . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( ) ;",
            "score": 99.09075055803571,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } else",
            "score": 99.16453200120192,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked', 'unchecked') ;",
            "score": 99.15458170572917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value1) ;",
            "score": 99.14003092447916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ) ;",
            "score": 99.08865356445312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( String.getMessage( ) ) ;",
            "score": 99.29491509331598,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( String . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.length( ) ) ;",
            "score": 99.2530746459961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . length ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; return ; }",
            "score": 99.153662109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; return ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new UnsupportedOperationException( ) ; }",
            "score": 99.14497593470982,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( new UnsupportedOperationException( 'unchecked') ) ;",
            "score": 99.13939557756696,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException2( 'unchecked') ;",
            "score": 99.10598520132211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception $NUMBER$ ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException3047126096857467610( 'unchecked') ;",
            "score": 99.10598520132211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception $NUMBER$ ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException2007( 'unchecked') ;",
            "score": 99.10598520132211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception $NUMBER$ ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ; throw new UnsupportedOperationException( ) ; }",
            "score": 99.08714076450893,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0.1) ;",
            "score": 99.2600326538086,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 . 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null , true ) ;",
            "score": 99.25266810825893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String )0) ;",
            "score": 99.17054036458333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ substring ) ;",
            "score": 99.14457484654018,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + substring ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ *; throw new UnsupportedOperationException( ) ;",
            "score": 99.10561697823661,
            "correctness": "uncompilable",
            "tokenized_patch": "/ * ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , ) ;",
            "score": 99.0861104329427,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { invocation.captureFrom( ) ; }",
            "score": 99.29297593060662,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { invocation . capture CaMeL From ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + null ) ;",
            "score": 99.25974684495192,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2+ ) ;",
            "score": 99.16964518229166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+3047126096857467610+ ) ;",
            "score": 99.16964518229166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+2007+ ) ;",
            "score": 99.16964518229166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $NUMBER$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; break ; }",
            "score": 99.161376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; break ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Boolean value = new Boolean( value.booleanValue( ) ) ;",
            "score": 99.13858032226562,
            "correctness": "uncompilable",
            "tokenized_patch": "Boolean value = new Boolean ( value . boolean CaMeL Value ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.10483961838942,
            "correctness": "uncompilable",
            "tokenized_patch": "assert throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ null ) ;",
            "score": 99.08558959960938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? true : ) ;",
            "score": 99.2514892578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? true : ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'-1) ;",
            "score": 99.1450907389323,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException throw new IllegalArgumentException( ) ;",
            "score": 99.13848114013672,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( name ) ;",
            "score": 99.08424886067708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.) { throw new UnsupportedOperationException( ) ;",
            "score": 99.29176958869485,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( ) , 'unchecked') ;",
            "score": 99.14266764322916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( ) , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.getCaMeL",
            "score": 99.15900127704327,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation . get CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name1) ;",
            "score": 99.14126790364584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.1044413248698,
            "correctness": "uncompilable",
            "tokenized_patch": "assert new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") ; throw new UnsupportedOperationException( ) ;",
            "score": 99.08299842247597,
            "correctness": "uncompilable",
            "tokenized_patch": ") ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-",
            "score": 99.1428555575284,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ -",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'name ) ;",
            "score": 99.104248046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalStateException( ) ;",
            "score": 99.0824725811298,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL State CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { matchers = matchers.length -1;",
            "score": 99.28985595703125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { matchers = matchers . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; } catch(",
            "score": 99.25439453125,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } catch (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'|| ) ;",
            "score": 99.25048828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Exception.class , 'unchecked') ;",
            "score": 99.16448974609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Exception . class , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null : new UnsupportedOperationException( ) ; }",
            "score": 99.15712193080357,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null : new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( ) + 'unchecked';",
            "score": 99.10406024639423,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ this Exception",
            "score": 99.08203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + this Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } else { invocation.",
            "score": 99.25394933363971,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } else { invocation .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? ) : null ;",
            "score": 99.2499755859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? ) : null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( Integer )1) ;",
            "score": 99.16358235677083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( Integer ) 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) > -1) {",
            "score": 99.15691669170673,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > - 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ; } throw new IllegalArgumentException( ) ;",
            "score": 99.14045061383929,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; } throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked') ; ;",
            "score": 99.13441569010416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( this + ) ;",
            "score": 99.08114858774039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( String.get( ) ) ;",
            "score": 99.25304412841797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( String . get ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -0) ;",
            "score": 99.13817420372597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new new UnsupportedOperationException( ) ;",
            "score": 99.07979910714286,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , null ) ;",
            "score": 99.2515399639423,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( 'unchecked') ) ;",
            "score": 99.1396728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new 'unchecked'.UnsupportedOperationException( ) ;",
            "score": 99.136474609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new $STRING$ . Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+ ) ; }",
            "score": 99.13313293457031,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "} throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.1024639423077,
            "correctness": "uncompilable",
            "tokenized_patch": "} throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new IllegalArgumentException( ) ;",
            "score": 99.07649739583333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].class , 'unchecked') ;",
            "score": 99.25120544433594,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . class , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ doubleValue ) ;",
            "score": 99.161376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + double CaMeL Value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; true ;",
            "score": 99.1556865985577,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessException( 'unchecked'+ name ) ;",
            "score": 99.13868059430804,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start ;",
            "score": 99.10211651141827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ 'unchecked';",
            "score": 99.07456618088942,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start , ) ;",
            "score": 99.16111653645834,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg >=0) {",
            "score": 99.15370686848958,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg >= 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( )( 'unchecked'+ ) ;",
            "score": 99.1328125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked';",
            "score": 99.09976900540866,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', double.class ) ;",
            "score": 99.25074768066406,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , double . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1, null ) ;",
            "score": 99.24732259114583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do { throw new IllegalArgumentException( 'unchecked') ; }",
            "score": 99.13826497395833,
            "correctness": "uncompilable",
            "tokenized_patch": "do { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).getMessage( )",
            "score": 99.13213348388672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . get CaMeL Message ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( false ) ;",
            "score": 99.073974609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'].class , 'unchecked') ;",
            "score": 99.25000718060662,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] . class , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new UnsupportedOperationException( )",
            "score": 99.24722110523896,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Unsupported CaMeL Operation CaMeL Exception ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', ) ; }",
            "score": 99.13241141183036,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) + 'unchecked'+ ) ;",
            "score": 99.13207194010417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( new UnsupportedOperationException( ) ) ;",
            "score": 99.07327974759616,
            "correctness": "wrong",
            "tokenized_patch": "throw ( new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( + name -1) ;",
            "score": 99.2486328125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + name - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ Method.class ) ;",
            "score": 99.2467269897461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + Method . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessException( 'unchecked'+1) ;",
            "score": 99.16064453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new( IllegalArgumentException( 'unchecked') ) ;",
            "score": 99.14848981584821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new ( Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; ; throw new UnsupportedOperationException( ) ;",
            "score": 99.13684895833333,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.13197544642857,
            "correctness": "uncompilable",
            "tokenized_patch": "int ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; / *",
            "score": 99.1309814453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; / *",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result = new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.0965576171875,
            "correctness": "uncompilable",
            "tokenized_patch": "result = new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ name ;",
            "score": 99.07318584735577,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + name ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2.0) ;",
            "score": 99.24807303292411,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610.0) ;",
            "score": 99.24807303292411,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007.0) ;",
            "score": 99.24807303292411,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else { throw new IllegalArgumentException( ) ; }",
            "score": 99.15939767020089,
            "correctness": "uncompilable",
            "tokenized_patch": "else { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers ; }",
            "score": 99.14766148158482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( ) { throw new UnsupportedOperationException( ) ;",
            "score": 99.13633626302084,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexOf ) ;",
            "score": 99.13117327008929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL Of ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked',(",
            "score": 99.13031005859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ true ;",
            "score": 99.0727069561298,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "dim.throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.13052804129464,
            "correctness": "uncompilable",
            "tokenized_patch": "dim . throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg >=0) { return ;",
            "score": 99.13024030412946,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg >= 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.0704345703125,
            "correctness": "uncompilable",
            "tokenized_patch": "new throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else ;",
            "score": 99.1590576171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } assert false ;",
            "score": 99.1345947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } assert false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.12945087139423,
            "correctness": "uncompilable",
            "tokenized_patch": "int throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else throw new IllegalArgumentException( ) ;",
            "score": 99.09292602539062,
            "correctness": "uncompilable",
            "tokenized_patch": "else throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ;",
            "score": 99.06911214192708,
            "correctness": "plausible",
            "tokenized_patch": "return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "(( CapturesArguments ) invocation ).captureFrom( ) ;",
            "score": 99.24634552001953,
            "correctness": "uncompilable",
            "tokenized_patch": "( ( Captures CaMeL Arguments ) invocation ) . capture CaMeL From ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( new RuntimeException( ) ) ;",
            "score": 99.15813802083333,
            "correctness": "wrong",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( new Runtime CaMeL Exception ( ) ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw null UnsupportedOperationException( 'unchecked') ;",
            "score": 99.1469014485677,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } try { ;",
            "score": 99.13391927083333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } try { ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+( indexCaMeL",
            "score": 99.12865339006696,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ( index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ name + 'unchecked';",
            "score": 99.0682842548077,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + name + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1, true ) ;",
            "score": 99.24453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ } else",
            "score": 99.14487868088942,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.; throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.1309326171875,
            "correctness": "uncompilable",
            "tokenized_patch": "this . ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( command + 'unchecked') ;",
            "score": 99.12901088169643,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( command + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length ;",
            "score": 99.12799541766827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return( String ) new UnsupportedOperationException( ) ;",
            "score": 99.09081159319196,
            "correctness": "uncompilable",
            "tokenized_patch": "return ( String ) new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + true ;",
            "score": 99.06664100060097,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) true ;",
            "score": 99.14485677083333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "super.; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.13082682291666,
            "correctness": "uncompilable",
            "tokenized_patch": "super . ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'true ) ; }",
            "score": 99.12769426618304,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ true ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked') ; ;",
            "score": 99.08834134615384,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ null Exception",
            "score": 99.0662841796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + null Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , 'unchecked''unchecked') ;",
            "score": 99.27364095052083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1.1, 'unchecked') ;",
            "score": 99.24358053768383,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 . 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getClass( ).) ;",
            "score": 99.24301326976104,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Class ( ) . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; return ; }",
            "score": 99.14410400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; return ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do { throw new UnsupportedOperationException( ) ; } ;",
            "score": 99.13050130208333,
            "correctness": "uncompilable",
            "tokenized_patch": "do { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+0;",
            "score": 99.0883319561298,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ false ;",
            "score": 99.06560809795673,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'indexOfVararg ) ;",
            "score": 99.2427978515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'||( indexCaMeL",
            "score": 99.1263427734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ || ( index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException( 'unchecked'+ value ) ;",
            "score": 99.12571498325893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ start Exception ;",
            "score": 99.08663504464286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + start Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; Exception",
            "score": 99.06471604567308,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'this , 'unchecked') ;",
            "score": 99.27353515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ this , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(0.0, 'unchecked') ;",
            "score": 99.24285888671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 0 . 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( invocation.getMethod( ) ) ;",
            "score": 99.24168178013393,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( invocation . get CaMeL Method ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( InterruptedException.class ) ;",
            "score": 99.15605926513672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Interrupted CaMeL Exception . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') }",
            "score": 99.1261698404948,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ continue ) ;",
            "score": 99.12560163225446,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + continue ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'Exception",
            "score": 99.06470836292614,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new 'unchecked') ;",
            "score": 99.24185384114584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final int indexOfVararg = matchers.length ;",
            "score": 99.1419208233173,
            "correctness": "uncompilable",
            "tokenized_patch": "final int index CaMeL Of CaMeL Vararg = matchers . length ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new IllegalArgumentException( ) ;",
            "score": 99.1283710186298,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+",
            "score": 99.12615966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ this + 'unchecked';",
            "score": 99.06439678485577,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + this + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1, false ) ;",
            "score": 99.24097493489583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException throw new RuntimeException( 'unchecked') ;",
            "score": 99.12482096354167,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw UnsupportedOperationException( ) ;",
            "score": 99.08371988932292,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( getCause( ) ) ;",
            "score": 99.24093627929688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( get CaMeL Cause ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Boolean.get( ) ) ;",
            "score": 99.23992156982422,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Boolean . get ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( UnsupportedOperationException.) ;",
            "score": 99.154541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <1) { return ;",
            "score": 99.12247140066964,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 1 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'Exception ) ;",
            "score": 99.08330829326923,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ null ) ;",
            "score": 99.06419677734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ } }",
            "score": 99.13707557091347,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchFieldException( 'unchecked') ;",
            "score": 99.12254987444196,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Field CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Object.) ;",
            "score": 99.12222994290866,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Object . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') {",
            "score": 99.08299763997395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ true ) ;",
            "score": 99.06348673502605,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'byte [ ].class ) ;",
            "score": 99.26922966452206,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ byte [ ] . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( int )1) ;",
            "score": 99.15401204427083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( int ) 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ *; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.12674967447917,
            "correctness": "uncompilable",
            "tokenized_patch": "/ * ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ *throw new UnsupportedOperationException( ) ; */",
            "score": 99.12173665364584,
            "correctness": "uncompilable",
            "tokenized_patch": "/ * throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; * /",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', }",
            "score": 99.12120564778645,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "finally { throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.08265904017857,
            "correctness": "uncompilable",
            "tokenized_patch": "finally { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) invocation.getId( ) ;",
            "score": 99.2679443359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) invocation . get CaMeL Id ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( Exception.class , 'unchecked') ;",
            "score": 99.15221405029297,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( Exception . class , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'false ) ; }",
            "score": 99.12039620535714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ false ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+ value ;",
            "score": 99.08260672433036,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ true ;",
            "score": 99.06287560096153,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked') ;",
            "score": 99.15201822916667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this ) ; }",
            "score": 99.13253079927884,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( invocation , Object.class ) ;",
            "score": 99.1201680501302,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( invocation , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked';",
            "score": 99.06235914963942,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1.1.0) ;",
            "score": 99.2378288717831,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 . 1 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new SecurityException( 'unchecked') ;",
            "score": 99.12567138671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Security CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2) ; }",
            "score": 99.11778041294643,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'3047126096857467610) ; }",
            "score": 99.11778041294643,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2007) ; }",
            "score": 99.11778041294643,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1.0, 'unchecked') ;",
            "score": 99.23609834558823,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 . 0 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ charValue ) ;",
            "score": 99.15159606933594,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + char CaMeL Value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "} else { throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.119775390625,
            "correctness": "uncompilable",
            "tokenized_patch": "} else { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked', null ) ;",
            "score": 99.1136474609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else else throw new UnsupportedOperationException( ) ;",
            "score": 99.08050067608173,
            "correctness": "uncompilable",
            "tokenized_patch": "else else throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1,1) ;",
            "score": 99.23639322916667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "void throw new UnsupportedOperationException( ) ;",
            "score": 99.23563639322917,
            "correctness": "uncompilable",
            "tokenized_patch": "void throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) ==1) {",
            "score": 99.12935384114583,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) == 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ) ; ;",
            "score": 99.11963762555804,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new InterruptedException( ) ;",
            "score": 99.11285400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Interrupted CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).toArray( ) ;",
            "score": 99.23548081341912,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . to CaMeL Array ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', Integer.class ) ;",
            "score": 99.23531341552734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , Integer . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'int ) ;",
            "score": 99.12746957632211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ int ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new IllegalStateException( 'unchecked') ;",
            "score": 99.1192626953125,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(",
            "score": 99.10696750217014,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result.add( new UnsupportedOperationException( ) ;",
            "score": 99.07991245814732,
            "correctness": "uncompilable",
            "tokenized_patch": "result . add ( new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).this ;",
            "score": 99.05764535757211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new UnsupportedOperationException( ) ; }",
            "score": 99.12236328125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "lock( ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.11768391927083,
            "correctness": "uncompilable",
            "tokenized_patch": "lock ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom( invocation ) ;",
            "score": 99.105908203125,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ super ;",
            "score": 99.07964618389423,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + super ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } return",
            "score": 99.05724158653847,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } return",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else break ;",
            "score": 99.23456217447917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else break ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new throw new IllegalArgumentException( ) ;",
            "score": 99.1215069110577,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name , ) ;",
            "score": 99.05530724158653,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked': 'unchecked';",
            "score": 99.25882975260417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ : $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { }",
            "score": 99.2338134765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-0'unchecked') ;",
            "score": 99.23133951822916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 0 $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) *1;",
            "score": 99.12253042367789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) * 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new ;",
            "score": 99.1212158203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+",
            "score": 99.07460530598958,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'Exception",
            "score": 99.05398324819711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked''unchecked'+ indexOfVararg ) ;",
            "score": 99.25881060431985,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ $STRING$ + index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.size( ) ) ;",
            "score": 99.23330688476562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ invocation.",
            "score": 99.121337890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + invocation .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do { throw new IllegalArgumentException( ) ; }",
            "score": 99.12095424107143,
            "correctness": "uncompilable",
            "tokenized_patch": "do { throw new Illegal CaMeL Argument CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( 'unchecked'+ name ) ;",
            "score": 99.07358961838942,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ this ;",
            "score": 99.05372032752403,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; length < size ; length ++ )",
            "score": 99.23317057291666,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; length < size ; length ++ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2, ) ;",
            "score": 99.14830729166667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610, ) ;",
            "score": 99.14830729166667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007, ) ;",
            "score": 99.14830729166667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ;",
            "score": 99.1205322265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.) ;",
            "score": 99.12044583834134,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ else ;",
            "score": 99.07273512620192,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + else ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked', ) ;",
            "score": 99.05364520733173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers >0) throw new UnsupportedOperationException( ) ;",
            "score": 99.22927676930146,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers > 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Runnable( ) { ;",
            "score": 99.1478271484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Runnable ( ) { ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "; throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.12029559795673,
            "correctness": "uncompilable",
            "tokenized_patch": "; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].class ;",
            "score": 99.05350435697116,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . class ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null , null ) ;",
            "score": 99.23219517299107,
            "correctness": "wrong",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null , null ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException( + length -1) ;",
            "score": 99.22909342447916,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + length - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } this ) ;",
            "score": 99.1202880859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ ;",
            "score": 99.10924682617187,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new InterruptedException( 'unchecked') ;",
            "score": 99.10277709960937,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Interrupted CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ start ;",
            "score": 99.07089468149039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + start ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.05330716646634,
            "correctness": "uncompilable",
            "tokenized_patch": "throw throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( this ) ;",
            "score": 99.14706856863839,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( this ) throw new UnsupportedOperationException( ) ;",
            "score": 99.119873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( this ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + invocation ) ;",
            "score": 99.11800443209134,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name + 'unchecked'+ ) ;",
            "score": 99.10789388020834,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.throw new UnsupportedOperationException( ) ;",
            "score": 99.10106482872597,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.07051225142045,
            "correctness": "uncompilable",
            "tokenized_patch": "new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length >0) throw new UnsupportedOperationException( ) ;",
            "score": 99.22775448069854,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length > 0 ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+0, ) ;",
            "score": 99.14700520833334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 0 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1,",
            "score": 99.10061410757211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( ) + ) ;",
            "score": 99.06731708233173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( ) + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { throw new UnsupportedOperationException( 'unchecked') ; }",
            "score": 99.11886393229166,
            "correctness": "uncompilable",
            "tokenized_patch": ") { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'; break ;",
            "score": 99.11620154747597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ; break ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null , ) ;",
            "score": 99.1002666766827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this ;",
            "score": 99.05126953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ].class ) ;",
            "score": 99.22723388671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ] . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [ ) ;",
            "score": 99.14370291573661,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int ) { throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.11814778645834,
            "correctness": "uncompilable",
            "tokenized_patch": "int ) { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( public ) ;",
            "score": 99.11456298828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( public ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked', this ) ;",
            "score": 99.09947713216145,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) { return ; } else {",
            "score": 99.0649883563702,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) { return ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( ) ; }",
            "score": 99.05067795973558,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [1] ;",
            "score": 99.14327799479166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ 1 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( RuntimeException ) new RuntimeException( 'unchecked') ;",
            "score": 99.11775716145833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Runtime CaMeL Exception ) new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( ) ) ;",
            "score": 99.06488037109375,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ l ;",
            "score": 99.05028357872597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + l ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.11650739397321,
            "correctness": "uncompilable",
            "tokenized_patch": "final ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'false ) ;",
            "score": 99.11150653545673,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( ) ; ;",
            "score": 99.10578264508929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; *",
            "score": 99.09871732271634,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; *",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( this + 'unchecked') ;",
            "score": 99.0494893391927,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name ) ; ;",
            "score": 99.1153076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(0, ) ;",
            "score": 99.09818209134616,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 0 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ l ;",
            "score": 99.04908165564903,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + l ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true -1) ;",
            "score": 99.22590855189732,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked'+1) ;",
            "score": 99.14181315104166,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw ; } throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.11515299479167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ; } throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( name + 'unchecked';",
            "score": 99.04782339242789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( name + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked'].class ) ;",
            "score": 99.24615478515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ ] . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new Exception( 'unchecked'+1)",
            "score": 99.1415786743164,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new Exception ( $STRING$ + 1 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Method ) ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.11495768229166,
            "correctness": "uncompilable",
            "tokenized_patch": "Method ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked') ; }",
            "score": 99.10841721754808,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length !=0) { throw null ; }",
            "score": 99.05776977539062,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 0 ) { throw null ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new RuntimeException( 'unchecked') ;",
            "score": 99.04762776692708,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ indexOf ;",
            "score": 99.11471354166666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + index CaMeL Of ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation ) ; }",
            "score": 99.10837026742789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; ;",
            "score": 99.05739339192708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ name1) ;",
            "score": 99.11460774739584,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + name 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; / *",
            "score": 99.10818246694711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; / *",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( throw new UnsupportedOperationException( 'unchecked') ) ;",
            "score": 99.10332845052083,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked',",
            "score": 99.09243539663461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( ) ; ;",
            "score": 99.05714925130208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ else ;",
            "score": 99.04727877103366,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + else ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1] ) ;",
            "score": 99.22491048177083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? ) : ) ;",
            "score": 99.22198079427083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? ) : ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String( ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.13922526041667,
            "correctness": "uncompilable",
            "tokenized_patch": "String ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'+ }",
            "score": 99.09122408353366,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ + }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new && new UnsupportedOperationException( ) ;",
            "score": 99.05368276742789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new && new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( +0'unchecked') ;",
            "score": 99.22351946149554,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + 0 $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + [0] ) ;",
            "score": 99.22181803385416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) > ) {",
            "score": 99.10797674005681,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(0) ; }",
            "score": 99.08958082932692,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 0 ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ element ;",
            "score": 99.05246206430289,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + element ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ iterator ;",
            "score": 99.04662146935097,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + iterator ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'.getMessage( ) ) ;",
            "score": 99.24269104003906,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ . get CaMeL Message ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked', 'unchecked') ;",
            "score": 99.22320149739583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") throw new UnsupportedOperationException( ) ;",
            "score": 99.10226440429688,
            "correctness": "uncompilable",
            "tokenized_patch": ") throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ { $STRING$",
            "score": 99.08943997896634,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + { $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw throw new UnsupportedOperationException( ) ;",
            "score": 99.0524151141827,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( name ;",
            "score": 99.04554332386364,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( name ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.class , 'unchecked') ;",
            "score": 99.2231674194336,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . class , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + indexOfVararg ;",
            "score": 99.22100067138672,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + index CaMeL Of CaMeL Vararg ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ exp1) ;",
            "score": 99.11395670572917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + exp 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) : null ;",
            "score": 99.10662372295673,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) : null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Boolean.TRUE ) ;",
            "score": 99.10186767578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Boolean . TRUE ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( }",
            "score": 99.08790893554688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else throw new IllegalStateException( 'unchecked') ;",
            "score": 99.05189866286058,
            "correctness": "uncompilable",
            "tokenized_patch": "else throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( 'unchecked'+1) ;",
            "score": 99.13741861979166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.).throw new UnsupportedOperationException( ) ;",
            "score": 99.11294759114584,
            "correctness": "uncompilable",
            "tokenized_patch": "this . ) . throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( 'unchecked'+2) ;",
            "score": 99.05126014122597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( 'unchecked'+3047126096857467610) ;",
            "score": 99.05126014122597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( 'unchecked'+2007) ;",
            "score": 99.05126014122597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ).new UnsupportedOperationException( ) ;",
            "score": 99.13724190848214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new ) . new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <=0) {",
            "score": 99.1031494140625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg <= 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new UnsupportedOperationException( ) ) ;",
            "score": 99.10030110677083,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( 'unchecked';",
            "score": 99.05020141601562,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , false ) ;",
            "score": 99.22250600961539,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) !=0) {",
            "score": 99.10209147135417,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) != 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&&",
            "score": 99.0862704190341,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ &&",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ 'unchecked') ;",
            "score": 99.04794311523438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this + 'unchecked'Exception",
            "score": 99.0423583984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this + $STRING$ Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + value ) ;",
            "score": 99.2224590594952,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).push( 'unchecked') ;",
            "score": 99.21743774414062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . push ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } throw ;",
            "score": 99.11138044084821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } throw ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers }",
            "score": 99.08493276742789,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ start",
            "score": 99.03883870442708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + start",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked', indexOfVararg ) ;",
            "score": 99.23774719238281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ , index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2, false ) ;",
            "score": 99.21700613839286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610, false ) ;",
            "score": 99.21700613839286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007, false ) ;",
            "score": 99.21700613839286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "super.; throw new UnsupportedOperationException( ) ;",
            "score": 99.11015101841518,
            "correctness": "uncompilable",
            "tokenized_patch": "super . ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >1)",
            "score": 99.101318359375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > 1 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).equals( 'unchecked') ;",
            "score": 99.21675109863281,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . equals ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg ==0) {",
            "score": 99.10035196940105,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg == 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "super.captureFrom( invocation ) ;",
            "score": 99.08204345703125,
            "correctness": "uncompilable",
            "tokenized_patch": "super . capture CaMeL From ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new UnsupportedOperationException( 'unchecked'+ value ) ;",
            "score": 99.04433030348558,
            "correctness": "uncompilable",
            "tokenized_patch": "new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ this ) ;",
            "score": 99.0376688639323,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', -2) ;",
            "score": 99.22003580729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', -3047126096857467610) ;",
            "score": 99.22003580729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', -2007) ;",
            "score": 99.22003580729167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( Exception ) ;",
            "score": 99.13587443033855,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( err ) ;",
            "score": 99.07818603515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( err ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) { return ; } else {",
            "score": 99.04280911959134,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 == 0 ) { return ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name.",
            "score": 99.03678072415866,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null , this ) ;",
            "score": 99.21653529575893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ++ ) ;",
            "score": 99.10813685825893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ++ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getArgumentAt( matchers ) ;",
            "score": 99.09959059495192,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Argument CaMeL At ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return this.new UnsupportedOperationException( ) ;",
            "score": 99.04141939603366,
            "correctness": "uncompilable",
            "tokenized_patch": "return this . new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1Exception",
            "score": 99.03560697115384,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ indexCaMeL",
            "score": 99.0712421123798,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( 'unchecked';",
            "score": 99.04083806818181,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; length < size ; size ++ )",
            "score": 99.214697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; length < size ; size ++ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new IllegalStateException( ) ;",
            "score": 99.10727364676339,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Illegal CaMeL State CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert matchers.size( ) >0-1;",
            "score": 99.09812418619792,
            "correctness": "plausible",
            "tokenized_patch": "assert matchers . size ( ) > 0 - 1 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if( ) throw new IllegalArgumentException( ) ;",
            "score": 99.09774344308036,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ) throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'/",
            "score": 99.06779341264205,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ /",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( this + 'unchecked'+",
            "score": 99.03476186899039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( this + $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ; }",
            "score": 99.10720590444711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException(1) ;",
            "score": 99.0966084798177,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked', true ) ;",
            "score": 99.06719970703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( new ) ;",
            "score": 99.03396606445312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( new ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2) ) ;",
            "score": 99.13291829427084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+3047126096857467610) ) ;",
            "score": 99.13291829427084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+2007) ) ;",
            "score": 99.13291829427084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + $NUMBER$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else { ;",
            "score": 99.10587565104167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else { ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException1( ) ;",
            "score": 99.0316162109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception 1 ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( | 'unchecked') ;",
            "score": 99.21799879807692,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( | $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0) { return ; } else",
            "score": 99.2123031616211,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 ) { return ; } else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) : ) ;",
            "score": 99.09636981670673,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) : ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ ) + 'unchecked';",
            "score": 99.095556640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked', false ) ;",
            "score": 99.06251017252605,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new IllegalArgumentException( ) ;",
            "score": 99.02953084309895,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1.1) ;",
            "score": 99.216748046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 . 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( 'unchecked') ) ;",
            "score": 99.1024169921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) > length ) {",
            "score": 99.09633382161458,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > length ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') + 'unchecked';",
            "score": 99.09489222935268,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( new UnsupportedOperationException( ) ;",
            "score": 99.03033447265625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( this , ) ;",
            "score": 99.10231119791666,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( this , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', {",
            "score": 99.05659993489583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked') ;",
            "score": 99.02999877929688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException [2] ;",
            "score": 99.02836100260417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception [ $NUMBER$ ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException [3047126096857467610] ;",
            "score": 99.02836100260417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception [ $NUMBER$ ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException [2007] ;",
            "score": 99.02836100260417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception [ $NUMBER$ ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new RuntimeException( 'unchecked') ;",
            "score": 99.0943603515625,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ **",
            "score": 99.02841421274039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + * *",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked';",
            "score": 99.02822536892361,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( captureArgumentsFrom( invocation ) ) {",
            "score": 99.09554349459134,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( capture CaMeL Arguments CaMeL From ( invocation ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ;.",
            "score": 99.02734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ; .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*-1) ;",
            "score": 99.2159423828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException( 'unchecked'+1) ;",
            "score": 99.12919398716518,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'; }",
            "score": 99.09401292067308,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ new Integer( ;",
            "score": 99.09318033854167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + new Integer ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( invocation instanceof CapturesArguments ) ;",
            "score": 99.04960123697917,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( invocation instanceof Captures CaMeL Arguments ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { new UnsupportedOperationException( ) ;",
            "score": 99.02454630533855,
            "correctness": "uncompilable",
            "tokenized_patch": "try { new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , this ) ;",
            "score": 99.21520057091347,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) { }",
            "score": 99.12857055664062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) { }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ this.;",
            "score": 99.09934779575893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + this . ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked',",
            "score": 99.04850260416667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new IllegalArgumentException( ) ;",
            "score": 99.02274946732955,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [ ;",
            "score": 99.12855881911058,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( this , 'unchecked') ;",
            "score": 99.0990498860677,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( this , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg != -1) {",
            "score": 99.0918719951923,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg != - 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ {",
            "score": 99.04615275065105,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+0) ;",
            "score": 99.02091064453126,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ?1:0) ;",
            "score": 99.2078857421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ? 1 : 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + 'unchecked'+ ;",
            "score": 99.09233747209821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'true ) ;",
            "score": 99.09122408353366,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException [ false ] ;",
            "score": 99.02040608723958,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception [ false ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new IllegalStateException( 'unchecked') ;",
            "score": 99.02025349934895,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , 'unchecked', 'unchecked') ;",
            "score": 99.2127197265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw this.new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.20736258370536,
            "correctness": "uncompilable",
            "tokenized_patch": "throw this . new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( new LinkedList( ) ) ;",
            "score": 99.1270751953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( new Linked CaMeL List ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'||",
            "score": 99.04128196022727,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ||",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( false ) ;",
            "score": 99.01809692382812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else throw new UnsupportedOperationException( 'unchecked'+1) ;",
            "score": 99.12586263020833,
            "correctness": "uncompilable",
            "tokenized_patch": "else throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( 'unchecked';",
            "score": 99.09835111177884,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( Integer ) ) ;",
            "score": 99.09097726004464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( Integer ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( this ) ;",
            "score": 99.01800537109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ <0) ;",
            "score": 99.20437825520834,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + < 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) ==0)",
            "score": 99.0897216796875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) == 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureArgumentsFrom( invocation ) ;",
            "score": 99.0387939453125,
            "correctness": "wrong",
            "tokenized_patch": "capture CaMeL Arguments CaMeL From ( invocation ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "return ; new UnsupportedOperationException( ) ;",
            "score": 99.01271565755208,
            "correctness": "uncompilable",
            "tokenized_patch": "return ; new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked'-0) ;",
            "score": 99.22509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2, true ) ;",
            "score": 99.20392252604167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'3047126096857467610, true ) ;",
            "score": 99.20392252604167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2007, true ) ;",
            "score": 99.20392252604167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+1) ; ;",
            "score": 99.12367350260416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getRawArguments( ).length -2;",
            "score": 99.22479248046875,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Raw CaMeL Arguments ( ) . length - $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getRawArguments( ).length -3047126096857467610;",
            "score": 99.22479248046875,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Raw CaMeL Arguments ( ) . length - $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getRawArguments( ).length -2007;",
            "score": 99.22479248046875,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Raw CaMeL Arguments ( ) . length - $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'/ *'unchecked') ;",
            "score": 99.2108154296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / * $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new 'unchecked') ;",
            "score": 99.08897986778847,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int throw new UnsupportedOperationException( ) ;",
            "score": 99.03678385416667,
            "correctness": "uncompilable",
            "tokenized_patch": "int throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'Exception ;",
            "score": 99.00876871744792,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false -1) ;",
            "score": 99.21034458705357,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1) ; ;",
            "score": 99.12228190104166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } ;",
            "score": 99.09482046274039,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ break ) ;",
            "score": 99.08983503069196,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + break ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new IllegalArgumentException( 'unchecked'+ matchers ) ;",
            "score": 99.08889535757211,
            "correctness": "uncompilable",
            "tokenized_patch": "new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+1) ;",
            "score": 99.0079833984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( System.size( ) ) ;",
            "score": 99.2240982055664,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( System . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', 'unchecked''unchecked') ;",
            "score": 99.2102783203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2, true ) ;",
            "score": 99.20319475446429,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610, true ) ;",
            "score": 99.20319475446429,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007, true ) ;",
            "score": 99.20319475446429,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Throwable.class , ) ;",
            "score": 99.12180989583334,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Throwable . class , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int ) { throw new UnsupportedOperationException( ) ; }",
            "score": 99.094775390625,
            "correctness": "uncompilable",
            "tokenized_patch": "int ) { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( ) ; ;",
            "score": 99.00874837239583,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+2) ;",
            "score": 99.00576171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+3047126096857467610) ;",
            "score": 99.00576171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+2007) ;",
            "score": 99.00576171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.20903669084821,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new IllegalArgumentException( 'unchecked'+ ) ;",
            "score": 99.12171223958333,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ list ) ;",
            "score": 99.09446498325893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + list ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( throw ) ;",
            "score": 99.0845947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( 'unchecked'+",
            "score": 99.00834517045455,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Operation throw new UnsupportedOperationException( ) ;",
            "score": 99.00509643554688,
            "correctness": "uncompilable",
            "tokenized_patch": "Operation throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + -0) ;",
            "score": 99.20874895368304,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new new UnsupportedOperationException( ) ;",
            "score": 99.0081278483073,
            "correctness": "uncompilable",
            "tokenized_patch": "return new new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers ==0) { throw new UnsupportedOperationException(",
            "score": 99.22267150878906,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + -2) ;",
            "score": 99.20860072544643,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + -3047126096857467610) ;",
            "score": 99.20860072544643,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + -2007) ;",
            "score": 99.20860072544643,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'/ -1) ;",
            "score": 99.20205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String [ ] ; throw new UnsupportedOperationException( ) ;",
            "score": 99.1208251953125,
            "correctness": "uncompilable",
            "tokenized_patch": "String [ ] ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } String ) ;",
            "score": 99.09326171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } String ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.08803147536058,
            "correctness": "uncompilable",
            "tokenized_patch": "final throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ indexCaMeL",
            "score": 99.01868785511364,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( 'unchecked';",
            "score": 99.00669352213542,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new {",
            "score": 99.00401722301136,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ matchers.size ) ;",
            "score": 99.22205352783203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + matchers . size ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*1.0) ;",
            "score": 99.20801544189453,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * 1 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1, this ) ;",
            "score": 99.2013916015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ 'unchecked') ; }",
            "score": 99.09296061197917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException( 'unchecked'+ name ) ;",
            "score": 99.08727155412946,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size > matchers.size( ) ) {",
            "score": 99.07833862304688,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size > matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) null ;",
            "score": 99.00187544389205,
            "correctness": "wrong",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) null ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new Error( 'unchecked'+ false ) ;",
            "score": 99.0000244140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getArguments( ).size( ) -1;",
            "score": 99.22196197509766,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Arguments ( ) . size ( ) - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2.0) ;",
            "score": 99.20699310302734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-3047126096857467610.0) ;",
            "score": 99.20699310302734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-2007.0) ;",
            "score": 99.20699310302734,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - $NUMBER$ . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else { throw new IllegalArgumentException( 'unchecked') ; }",
            "score": 99.12025553385416,
            "correctness": "uncompilable",
            "tokenized_patch": "else { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'Exception ;",
            "score": 98.9977518717448,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { throw new UnsupportedOperationException(",
            "score": 99.22073364257812,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { throw new Unsupported CaMeL Operation CaMeL Exception (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( +1, 'unchecked') ;",
            "score": 99.20679524739583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + 1 , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2, false ) ;",
            "score": 99.19972330729166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'3047126096857467610, false ) ;",
            "score": 99.19972330729166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2007, false ) ;",
            "score": 99.19972330729166,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ [0] ;",
            "score": 99.11774088541667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + [ 0 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+ exp ) ;",
            "score": 99.09136962890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + exp ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( ) ) ;",
            "score": 98.99753824869792,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException.'unchecked';",
            "score": 98.99619750976562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception . $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new InternalError( ) ;",
            "score": 99.08811442057292,
            "correctness": "wrong",
            "tokenized_patch": "throw new Internal CaMeL Error ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ invocation ) ;",
            "score": 99.07532755533855,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; Exception",
            "score": 98.99608357747395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked''unchecked') ;",
            "score": 98.99537242542614,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'] ) ;",
            "score": 99.22037179129464,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- -2) ;",
            "score": 99.20555826822917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- -3047126096857467610) ;",
            "score": 99.20555826822917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- -2007) ;",
            "score": 99.20555826822917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - - $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( this ) ;",
            "score": 99.11564127604167,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } this.;",
            "score": 99.08772786458333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } this . ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert matchers.size( ) >0;",
            "score": 99.07380981445313,
            "correctness": "plausible",
            "tokenized_patch": "assert matchers . size ( ) > 0 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "return new UnsupportedOperationException(1) ;",
            "score": 98.9947509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom(0) ;",
            "score": 98.986865234375,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( / *'unchecked') ;",
            "score": 99.20511300223214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( / * $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new UnsupportedOperationException( this ) ;",
            "score": 99.11512169471153,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Unsupported CaMeL Operation CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } Method ) ;",
            "score": 99.08750813802084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } Method ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0< matchers.size( ) ) {",
            "score": 99.07366943359375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 < matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException [1] ;",
            "score": 98.98855590820312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception [ 1 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation ;",
            "score": 98.98077947443181,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers !=0) { throw new UnsupportedOperationException(",
            "score": 99.21983337402344,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != 0 ) { throw new Unsupported CaMeL Operation CaMeL Exception (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( +",
            "score": 99.20406494140624,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) /1;",
            "score": 99.1973407451923,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) / 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ *throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.08738490513393,
            "correctness": "uncompilable",
            "tokenized_patch": "/ * throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ }",
            "score": 99.07342529296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ].;",
            "score": 98.98855590820312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ] . ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String [ ] ) throw new UnsupportedOperationException( ) ;",
            "score": 99.11471354166666,
            "correctness": "uncompilable",
            "tokenized_patch": "String [ ] ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length > matchers.size( ) ) {",
            "score": 99.07107543945312,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length > matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( this + ) ;",
            "score": 98.9884366122159,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) }",
            "score": 98.97086958451705,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*'unchecked') ;",
            "score": 99.08268519810268,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException(2) ;",
            "score": 98.98411051432292,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException(3047126096857467610) ;",
            "score": 98.98411051432292,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException(2007) ;",
            "score": 98.98411051432292,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) true ;",
            "score": 98.97048117897727,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true ,0) ;",
            "score": 99.20281110491071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( name.length( ) >0) { return ; }",
            "score": 99.11437174479167,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( name . length ( ) > 0 ) { return ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } ; ;",
            "score": 99.08659144810268,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg >0)",
            "score": 99.06720525568181,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg > 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) { throw null ;",
            "score": 98.9863614169034,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 == 0 ) { throw null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <0)",
            "score": 98.96623091264205,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + [ ].class ) ;",
            "score": 99.20219421386719,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + [ ] . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else throw new UnsupportedOperationException( ) ; }",
            "score": 99.11358173076923,
            "correctness": "uncompilable",
            "tokenized_patch": "else throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "String ) ; throw new IllegalArgumentException( ) ;",
            "score": 99.08069719587054,
            "correctness": "uncompilable",
            "tokenized_patch": "String ) ; throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( matchers ) ;",
            "score": 99.06707763671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new UnsupportedOperationException( 'unchecked'+",
            "score": 98.9851786295573,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) false ;",
            "score": 98.9661532315341,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException String( 'unchecked''unchecked') ;",
            "score": 99.21639578683036,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception String ( $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new RuntimeException( 'unchecked') ;",
            "score": 98.98076837713069,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( ) ;",
            "score": 98.98018101283482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked', 'unchecked') ;",
            "score": 98.96427001953126,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + Object.class ) ;",
            "score": 99.2014892578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final String ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.11346028645833,
            "correctness": "uncompilable",
            "tokenized_patch": "final String ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked''unchecked';",
            "score": 99.06498209635417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'$STRING$",
            "score": 98.95765269886364,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + name + ) ;",
            "score": 99.2012939453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + name + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false , true ) ;",
            "score": 99.1927490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( ;",
            "score": 99.08502197265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >=0) {",
            "score": 99.06321207682292,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) >= 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+2) ;",
            "score": 98.97450561523438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+3047126096857467610) ;",
            "score": 98.97450561523438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+2007) ;",
            "score": 98.97450561523438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'- -0) ;",
            "score": 99.20126953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*1) ;",
            "score": 99.07829938616071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <1) {",
            "score": 99.06211344401042,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int indexOfVararg =0;",
            "score": 98.94555053710937,
            "correctness": "uncompilable",
            "tokenized_patch": "int index CaMeL Of CaMeL Vararg = 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ value [ ) ;",
            "score": 99.11212565104167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + value [ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ substring ) ;",
            "score": 99.08354840959821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + substring ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new UnsupportedOperationException( ) )",
            "score": 99.07819475446429,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw final UnsupportedOperationException( ) ;",
            "score": 99.0617342862216,
            "correctness": "uncompilable",
            "tokenized_patch": "throw final Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ l ) ;",
            "score": 98.97182210286458,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + l ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) +",
            "score": 98.96427778764205,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked') ; }",
            "score": 98.93927556818181,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom(0, indexOfVararg ) ;",
            "score": 99.21078491210938,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( 0 , index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( int.size( ) ) ;",
            "score": 99.19129943847656,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( int . size ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( out ) ;",
            "score": 98.9712422688802,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( out ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException = ) ;",
            "score": 98.96410023082386,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception = ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationCaMeL",
            "score": 98.9390869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >1) {",
            "score": 99.05659790039063,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <0) { return ; } else {",
            "score": 98.97092692057292,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) { return ; } else {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ null ;",
            "score": 98.96397816051136,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'1) ;",
            "score": 98.9346923828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } else return ;",
            "score": 99.11180826822917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } else return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException( ) ; }",
            "score": 99.05464680989583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "position =0; throw new UnsupportedOperationException( ) ;",
            "score": 99.2088134765625,
            "correctness": "uncompilable",
            "tokenized_patch": "position = 0 ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , 'unchecked''unchecked') ;",
            "score": 99.19976806640625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessException( 'unchecked'+ ) ;",
            "score": 99.08148662860577,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) <=0) {",
            "score": 99.05420939127605,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) <= 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ; ) ;",
            "score": 98.970703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ; ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ false ) ;",
            "score": 98.9564208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked', 'unchecked') ;",
            "score": 98.9297607421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this , this ) ;",
            "score": 99.11145891462054,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new RuntimeException( 'unchecked') ;",
            "score": 99.08118614783653,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Object ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.07355608258929,
            "correctness": "uncompilable",
            "tokenized_patch": "Object ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this Exception",
            "score": 98.94917436079545,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( invocation ) ;",
            "score": 98.92361450195312,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'false , null ) ;",
            "score": 99.18972981770834,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ false , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw ; } throw new UnsupportedOperationException( ) ;",
            "score": 99.08082798549107,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ; } throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new public UnsupportedOperationException( ) {",
            "score": 99.05260213216145,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new public Unsupported CaMeL Operation CaMeL Exception ( ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) Exception",
            "score": 98.94818670099431,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom( ) ;",
            "score": 98.91779242621527,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+0.0) ;",
            "score": 99.19691467285156,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 0 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Method ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.08082798549107,
            "correctness": "uncompilable",
            "tokenized_patch": "Method ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return captureArgumentsFrom( invocation ) ;",
            "score": 99.0511807528409,
            "correctness": "uncompilable",
            "tokenized_patch": "return capture CaMeL Arguments CaMeL From ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ value ) ;",
            "score": 98.96663818359374,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+1) ;",
            "score": 98.94647216796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false , null ) ;",
            "score": 99.18782261439732,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'? 'unchecked': ) ;",
            "score": 99.10774739583333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ? $STRING$ : ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ ) ; ;",
            "score": 99.07352120535714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; else",
            "score": 99.0506591796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException ) ;",
            "score": 98.93757934570313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked',0) ;",
            "score": 98.90482177734376,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ,0) ;",
            "score": 99.19631723257211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked') ; } ;",
            "score": 99.08039202008929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new Integer( ;",
            "score": 99.0734375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new Integer ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new IllegalStateException( ) ;",
            "score": 98.9559659090909,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Illegal CaMeL State CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw throw new RuntimeException( 'unchecked') ;",
            "score": 98.93601296164773,
            "correctness": "uncompilable",
            "tokenized_patch": "throw throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return.toString( ) ;",
            "score": 98.90430365668402,
            "correctness": "uncompilable",
            "tokenized_patch": "return . to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom ; throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.19613647460938,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ; throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final ; throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.08016531808036,
            "correctness": "uncompilable",
            "tokenized_patch": "final ; throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ continue ) ;",
            "score": 99.07244873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + continue ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw UnsupportedOperationException( ) ;",
            "score": 98.95018421519886,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked', this ) ;",
            "score": 98.89810791015626,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new IllegalAccessException( ) ;",
            "score": 99.07894461495536,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Illegal CaMeL Access CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new new UnsupportedOperationException( ) ;",
            "score": 98.94480202414773,
            "correctness": "uncompilable",
            "tokenized_patch": "new new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom( null ) ;",
            "score": 98.89651489257812,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ).run( ) ;",
            "score": 99.20367838541667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) . run ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'| true ) ;",
            "score": 99.18525041852679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ | true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*2) ;",
            "score": 99.07179478236607,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*3047126096857467610) ;",
            "score": 99.07179478236607,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*2007) ;",
            "score": 99.07179478236607,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+0) ;",
            "score": 98.93865966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Exception ;",
            "score": 98.93253950639205,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) {",
            "score": 98.89523315429688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom( indexOfVararg ) ;",
            "score": 99.20367431640625,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'0'unchecked') ;",
            "score": 99.19366455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 0 $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) +0;",
            "score": 99.18506798377403,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) <1) {",
            "score": 99.0401611328125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) < 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+0) ;",
            "score": 98.929248046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom( false ) ;",
            "score": 98.88494873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+1+1;",
            "score": 99.1064208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + 1 + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>= matchers.size( ) ) {",
            "score": 99.03943888346355,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 >= matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException != null ;",
            "score": 98.9362060546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception != null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ this + ) ;",
            "score": 98.91220925071023,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked', null ) ;",
            "score": 98.88389892578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureArgumentsFrom( indexOfVararg ) ;",
            "score": 99.20220075334821,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL Arguments CaMeL From ( index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( 'unchecked'+",
            "score": 98.93341674804688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ).",
            "score": 98.90870250355114,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw invocation.getException( ) ;",
            "score": 98.88215942382813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw invocation . get CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1;",
            "score": 99.19179124098558,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2+ 'unchecked') ;",
            "score": 99.07101876395089,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610+ 'unchecked') ;",
            "score": 99.07101876395089,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007+ 'unchecked') ;",
            "score": 99.07101876395089,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null UnsupportedOperationException( ) ; }",
            "score": 99.02960205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0!=0) { throw null ;",
            "score": 98.91180974786931,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 != 0 ) { throw null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked', false ) ;",
            "score": 98.8780029296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2'unchecked') ;",
            "score": 99.20084926060268,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'3047126096857467610'unchecked') ;",
            "score": 99.20084926060268,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2007'unchecked') ;",
            "score": 99.20084926060268,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true , true ) ;",
            "score": 99.19146728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else { throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.10482352120536,
            "correctness": "uncompilable",
            "tokenized_patch": "else { throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ value ;",
            "score": 98.91163219105114,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + value ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( name ;",
            "score": 98.90376420454545,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( name ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom( 'unchecked') ;",
            "score": 98.87642822265624,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0> matchers.size( ) ) {",
            "score": 99.02632649739583,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 > matchers . size ( ) ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "add new UnsupportedOperationException( ) ;",
            "score": 98.9086026278409,
            "correctness": "uncompilable",
            "tokenized_patch": "add new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false ;",
            "score": 98.90285422585227,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'-1) ;",
            "score": 98.87244262695313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'name + 'unchecked') ;",
            "score": 99.20039876302083,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ name + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; throw null ;",
            "score": 99.1025390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; throw null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( intValue ) ;",
            "score": 99.06967599051339,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( int CaMeL Value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( this + 'unchecked';",
            "score": 98.89781605113636,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( this + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException ;",
            "score": 98.89778900146484,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked', true ) ;",
            "score": 98.8689697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null ,1) ;",
            "score": 99.18132672991071,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked')",
            "score": 98.89715021306819,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom( true ) ;",
            "score": 98.86572265625,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1+ ) ;",
            "score": 99.18933919270833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Boolean.FALSE ) ;",
            "score": 99.06888253348214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Boolean . FALSE ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new IllegalArgumentException( 'unchecked') ;",
            "score": 99.02311567826705,
            "correctness": "uncompilable",
            "tokenized_patch": "new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+",
            "score": 98.89169650607639,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "switch( indexOfVararg ) {",
            "score": 98.85804443359375,
            "correctness": "uncompilable",
            "tokenized_patch": "switch ( index CaMeL Of CaMeL Vararg ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.new ) ;",
            "score": 99.17862374441964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . new ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ err ) ;",
            "score": 99.09759521484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + err ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'( ) ) ;",
            "score": 99.0723876953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw throw UnsupportedOperationException( ) ;",
            "score": 98.89173473011364,
            "correctness": "uncompilable",
            "tokenized_patch": "throw throw Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new RuntimeException( ) ;",
            "score": 98.8876065340909,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Runtime CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked', null ) ;",
            "score": 98.85244750976562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <",
            "score": 98.84383138020833,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg <",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null ,0) ;",
            "score": 99.18799700055804,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >",
            "score": 98.99915907118056,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) >",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) { throw null ;",
            "score": 98.8878173828125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) { throw null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new UnsupportedOperationException( false ) ;",
            "score": 98.88303444602273,
            "correctness": "uncompilable",
            "tokenized_patch": "new Unsupported CaMeL Operation CaMeL Exception ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new InstantiationException( 'unchecked') ;",
            "score": 98.8366455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Instantiation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchFieldException( ) ;",
            "score": 99.06780536358173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Field CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.",
            "score": 98.99578302556819,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException = ) ;",
            "score": 98.88172496448864,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception = ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1'unchecked') ;",
            "score": 99.19454520089286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ insert ) ;",
            "score": 99.0673828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + insert ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', ;",
            "score": 99.06324259440105,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return captureArgumentsFrom( matchers ) ;",
            "score": 98.9900790127841,
            "correctness": "uncompilable",
            "tokenized_patch": "return capture CaMeL Arguments CaMeL From ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ name ) ;",
            "score": 98.88085327148437,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ this ;",
            "score": 98.88019353693181,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( L [0] ) ;",
            "score": 99.18719889322917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( L [ 0 ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( ) ; }",
            "score": 98.98678588867188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<0) { throw null ;",
            "score": 98.87925026633523,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 < 0 ) { throw null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ this + ) ;",
            "score": 98.87897283380681,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'-0) ;",
            "score": 98.83035278320312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2,1) ;",
            "score": 99.17421177455357,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610,1) ;",
            "score": 99.17421177455357,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007,1) ;",
            "score": 99.17421177455357,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ClassNotFoundException( 'unchecked'+ ;",
            "score": 99.06441824776786,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Class CaMeL Not CaMeL Found CaMeL Exception ( $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(1;",
            "score": 98.9792813387784,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) { throw false ;",
            "score": 98.87908380681819,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 == 0 ) { throw false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw value.getMessage( ) ;",
            "score": 98.87852172851562,
            "correctness": "uncompilable",
            "tokenized_patch": "throw value . get CaMeL Message ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( false ) ;",
            "score": 98.82882080078124,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? ) ;",
            "score": 99.17408165564903,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new throw new IllegalStateException( 'unchecked') ;",
            "score": 99.05927385602679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'{",
            "score": 98.97877086292614,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) { return ;",
            "score": 98.87824096679688,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 == 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException((",
            "score": 98.82805786132812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Object ) throw new UnsupportedOperationException( ) ;",
            "score": 99.06093186598558,
            "correctness": "uncompilable",
            "tokenized_patch": "Object ) throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( throw new UnsupportedOperationException( ) )",
            "score": 99.05924166165866,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( throw new Unsupported CaMeL Operation CaMeL Exception ( ) )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg >=0)",
            "score": 98.97824928977273,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg >= 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ name + ) ;",
            "score": 98.87816273082386,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + name + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked', true ) ;",
            "score": 98.82391357421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ , true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', *0) ;",
            "score": 99.186083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , * 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ] ;",
            "score": 98.87811834161931,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked', false ) ;",
            "score": 98.82299194335937,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( +0.1) ;",
            "score": 99.185205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + 0 . 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Method.class ) ;",
            "score": 99.17239815848214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Method . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ -1) ;",
            "score": 99.0597393329327,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) == ) {",
            "score": 98.97565252130681,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) == ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( true ) ;",
            "score": 98.87794189453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) { throw ) ;",
            "score": 98.87319113991477,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 == 0 ) { throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked', this ) ;",
            "score": 98.82057495117188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'this + 'unchecked') ;",
            "score": 99.1885498046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length2) ;",
            "score": 99.18412272135417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length3047126096857467610) ;",
            "score": 99.18412272135417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ length2007) ;",
            "score": 99.18412272135417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + length $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( this + 'unchecked') ;",
            "score": 98.87738037109375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) ) ;",
            "score": 98.8695068359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return.captureFrom( invocation ) ;",
            "score": 98.8176513671875,
            "correctness": "uncompilable",
            "tokenized_patch": "return . capture CaMeL From ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-1true ) ;",
            "score": 99.18377278645833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException( 'unchecked';",
            "score": 98.96767356178977,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException = this ;",
            "score": 98.87482244318181,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception = this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return matchers.size( ) -1;",
            "score": 98.81751098632813,
            "correctness": "uncompilable",
            "tokenized_patch": "return matchers . size ( ) - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'-11) ;",
            "score": 99.18231608072917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ - 1 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; length < length ; length ++ )",
            "score": 99.17068684895834,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; length < length ; length ++ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ClassCastException( 'unchecked') ;",
            "score": 99.05924479166667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Class CaMeL Cast CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new int [0] ;",
            "score": 98.96745300292969,
            "correctness": "uncompilable",
            "tokenized_patch": "return new int [ 0 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked', 'unchecked') ;",
            "score": 98.81380004882813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true 'unchecked') ;",
            "score": 99.18186598557692,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'.class ) ;",
            "score": 99.17043631417411,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( this ) ;",
            "score": 98.87280883789063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+ value ) ;",
            "score": 98.86535034179687,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'] ) ;",
            "score": 99.1862041766827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ] ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") throw new UnsupportedOperationException( 'unchecked') ;",
            "score": 99.05820875901442,
            "correctness": "uncompilable",
            "tokenized_patch": ") throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'( ;",
            "score": 99.05421956380208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( value ;",
            "score": 98.8721590909091,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( value ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else new UnsupportedOperationException( ) ;",
            "score": 98.86333673650569,
            "correctness": "uncompilable",
            "tokenized_patch": "else new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null , 'unchecked''unchecked') ;",
            "score": 99.17025553385416,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null , $STRING$ $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ ; }",
            "score": 99.05772986778847,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length ==0) {",
            "score": 98.9561279296875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length == 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( this ;",
            "score": 98.8711270419034,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ start ) ;",
            "score": 98.86265258789062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException.true ;",
            "score": 98.80425415039062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception . true ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( invocation.",
            "score": 98.95472301136364,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( invocation .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'throw",
            "score": 98.8697842684659,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ throw",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom( this ) ;",
            "score": 98.80303344726562,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked': 'unchecked') ;",
            "score": 99.16927664620536,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert indexOfVararg >0;",
            "score": 98.94713134765625,
            "correctness": "plausible",
            "tokenized_patch": "assert index CaMeL Of CaMeL Vararg > 0 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw UnsupportedOperationException ) ;",
            "score": 98.84485541449652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return.captureFrom(0) ;",
            "score": 98.79990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "return . capture CaMeL From ( 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( 'unchecked') ; ;",
            "score": 99.08628743489584,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "cfw.captureFrom( matchers ) ;",
            "score": 98.9466796875,
            "correctness": "uncompilable",
            "tokenized_patch": "cfw . capture CaMeL From ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ start.",
            "score": 98.86628861860795,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + start .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( 'unchecked';",
            "score": 98.84445190429688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException ++ ;",
            "score": 98.79511108398438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ++ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2, null ) ;",
            "score": 99.16846575055804,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610, null ) ;",
            "score": 99.16846575055804,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007, null ) ;",
            "score": 99.16846575055804,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( 'unchecked'+ ) ;",
            "score": 99.05479847301136,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >0)",
            "score": 98.94552951388889,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ true ) ;",
            "score": 98.86450805664063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( ) ;",
            "score": 98.84444754464286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'-1) ;",
            "score": 98.78999633789063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1+ 'unchecked') ;",
            "score": 99.1793701171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked': 'unchecked';",
            "score": 99.16792805989583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ : $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) ==1)",
            "score": 98.94190562855114,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) == 1 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+ null ) ;",
            "score": 98.86069946289062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( $STRING$",
            "score": 98.78997192382812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "dispose( ) ; throw new UnsupportedOperationException( ) ;",
            "score": 99.18055826822916,
            "correctness": "uncompilable",
            "tokenized_patch": "dispose ( ) ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + value + 'unchecked') ;",
            "score": 99.17845865885417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + value + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2, ) ;",
            "score": 99.1652080829327,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610, ) ;",
            "score": 99.1652080829327,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007, ) ;",
            "score": 99.1652080829327,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( )",
            "score": 99.04044799804687,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null UnsupportedOperationException( 'unchecked';",
            "score": 98.94133966619319,
            "correctness": "uncompilable",
            "tokenized_patch": "throw null Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ name + ) ;",
            "score": 98.85997425426136,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + name + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <0) { throw null ;",
            "score": 98.84188842773438,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) { throw null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException.false ;",
            "score": 98.78851318359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception . false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( - -1) ;",
            "score": 99.1783447265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( exp ) ;",
            "score": 99.0480448404948,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( exp ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( String ) ;",
            "score": 99.0382080078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( String ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert matchers.size( ) >1;",
            "score": 98.939208984375,
            "correctness": "plausible",
            "tokenized_patch": "assert matchers . size ( ) > 1 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "new UnsupportedOperationException( ) {",
            "score": 98.85927734375,
            "correctness": "uncompilable",
            "tokenized_patch": "new Unsupported CaMeL Operation CaMeL Exception ( ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ) ;",
            "score": 98.83304443359376,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.captureFrom( invocation ) ;",
            "score": 98.78572387695313,
            "correctness": "uncompilable",
            "tokenized_patch": "this . capture CaMeL From ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? ) : 'unchecked';",
            "score": 99.1802490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? ) : $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2, this ) ;",
            "score": 99.1645751953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'3047126096857467610, this ) ;",
            "score": 99.1645751953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'2007, this ) ;",
            "score": 99.1645751953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $NUMBER$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new CloneNotSupportedException( ) ;",
            "score": 99.04601111778847,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Clone CaMeL Not CaMeL Supported CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new UnsupportedOperationException( )",
            "score": 99.03522198016827,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Unsupported CaMeL Operation CaMeL Exception ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new IllegalArgumentException( ) ;",
            "score": 98.93366088867188,
            "correctness": "plausible",
            "tokenized_patch": "new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new IllegalArgumentException( ;.",
            "score": 98.85658957741477,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ; .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) return ;",
            "score": 98.83068169487848,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 == 0 ) return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if( matchers != null ) {",
            "score": 98.78112030029297,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != null ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ name , ;",
            "score": 99.08222307477679,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + name , ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NumberFormatException( 'unchecked') ;",
            "score": 99.04510498046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Number CaMeL Format CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( name ) ;",
            "score": 98.85432739257813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) { return ;",
            "score": 98.774072265625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "for( int length =0; length < length ; size ++ )",
            "score": 99.163623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "for ( int length = 0 ; length < length ; size ++ )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( Exception ) ;",
            "score": 99.08198765345982,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( capacity ) ;",
            "score": 99.044189453125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( capacity ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new Object [0] ;",
            "score": 98.93089294433594,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Object [ 0 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'Exception",
            "score": 98.8525390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return UnsupportedOperationException ;",
            "score": 98.8290786743164,
            "correctness": "uncompilable",
            "tokenized_patch": "return Unsupported CaMeL Operation CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new InterruptedException( ) ; }",
            "score": 98.774072265625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Interrupted CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true , null ) ;",
            "score": 99.17660958426339,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'| false ) ;",
            "score": 99.16312953404018,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ | false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessException( ) ; }",
            "score": 99.03232828776042,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new SecurityException( ) ;",
            "score": 98.82609049479167,
            "correctness": "wrong",
            "tokenized_patch": "throw new Security CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "return new UnsupportedOperationException( true ) ;",
            "score": 99.08053588867188,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "} throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.0427997295673,
            "correctness": "uncompilable",
            "tokenized_patch": "} throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ exp ;",
            "score": 99.03226412259616,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + exp ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers instanceof CapturesArguments ) {",
            "score": 98.92430419921875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers instanceof Captures CaMeL Arguments ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( false ) ;",
            "score": 98.85020751953125,
            "correctness": "wrong",
            "tokenized_patch": "throw new Assertion CaMeL Error ( false ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw UnsupportedOperationException == this ;",
            "score": 98.80997924804687,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception == this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked',0) ;",
            "score": 98.77084350585938,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1, ) ;",
            "score": 99.17603410993304,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } else }",
            "score": 99.16114153180804,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } else }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new throw new RuntimeException( 'unchecked') ;",
            "score": 99.0289815266927,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new throw new Runtime CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new RuntimeException( ) ;",
            "score": 98.84729614257813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Runtime CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+ name ) ;",
            "score": 98.80762329101563,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( this ) ;",
            "score": 99.0786465731534,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new CapturesArguments( matchers ) ;",
            "score": 98.90885620117187,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Captures CaMeL Arguments ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+1) ;",
            "score": 98.80630493164062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw getException( ) ;",
            "score": 98.75493621826172,
            "correctness": "uncompilable",
            "tokenized_patch": "throw get CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException( 'unchecked'+ ;",
            "score": 99.03759765625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw invocation.getMethod( ) ;",
            "score": 98.89822998046876,
            "correctness": "uncompilable",
            "tokenized_patch": "throw invocation . get CaMeL Method ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ true ) ;",
            "score": 98.8338623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) return ;",
            "score": 98.80545383029514,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg >=",
            "score": 98.73723008897569,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg >=",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( System.this ) ;",
            "score": 99.16023472377232,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( System . this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( 'unchecked'+ ) ;",
            "score": 99.03644268329327,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do { throw new IllegalArgumentException( ) ;",
            "score": 99.02240459735577,
            "correctness": "uncompilable",
            "tokenized_patch": "do { throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) > )",
            "score": 98.89047241210938,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) > )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg",
            "score": 98.71321105957031,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked''unchecked'this ) ;",
            "score": 99.17096819196429,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ $STRING$ this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "context.captureFrom( matchers ) ;",
            "score": 98.8882568359375,
            "correctness": "uncompilable",
            "tokenized_patch": "context . capture CaMeL From ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked', null ) ;",
            "score": 98.83211059570313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new Exception( 'unchecked') ;",
            "score": 98.79019927978516,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException ;",
            "score": 98.71099853515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <1) { return ; }",
            "score": 99.159716796875,
            "correctness": "plausible",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg < 1 ) { return ; }",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ this ) ;",
            "score": 98.83160400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) ;",
            "score": 98.78941650390625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(( CapturesArguments ) {",
            "score": 98.69114685058594,
            "correctness": "uncompilable",
            "tokenized_patch": "( ( Captures CaMeL Arguments ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null +0) ;",
            "score": 99.17192731584821,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ?1:0;",
            "score": 99.15911458333333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ? 1 : 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ matchers ) ;",
            "score": 98.8771484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( this , 'unchecked') ;",
            "score": 98.830517578125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( this , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+2) ;",
            "score": 98.78915405273438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+3047126096857467610) ;",
            "score": 98.78915405273438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+2007) ;",
            "score": 98.78915405273438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + $NUMBER$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( *0.0) ;",
            "score": 99.17178548177084,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( * 0 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom(0, Object.class ) ;",
            "score": 99.16932024274554,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( 0 , Object . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked',1) ;",
            "score": 99.0732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Disposer.throw new UnsupportedOperationException( ) ;",
            "score": 99.03292142427884,
            "correctness": "uncompilable",
            "tokenized_patch": "Disposer . throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new UnsupportedOperationException( 'unchecked'+",
            "score": 98.78748779296875,
            "correctness": "uncompilable",
            "tokenized_patch": "new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ +",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw getException( 'unchecked') ;",
            "score": 98.68359375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw get CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ) getMessage( ) ;",
            "score": 99.16878255208333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ) get CaMeL Message ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ name , ) ;",
            "score": 99.0725848858173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + name , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ new ;",
            "score": 99.032470703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + new ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new LinkedList( ) ;",
            "score": 98.87162272135417,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Linked CaMeL List ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( Exception ) ;",
            "score": 98.82899169921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ 'unchecked') ;",
            "score": 98.77888793945313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg <=",
            "score": 98.67949761284723,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg <=",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'L ) ;",
            "score": 99.16778094951923,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ L ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( + 'unchecked') ;",
            "score": 99.03188852163461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length >1) {",
            "score": 98.87068939208984,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length > 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException ) ;",
            "score": 98.81783447265624,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ ) ;",
            "score": 98.77786593967014,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked') ; }",
            "score": 98.67796495225694,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + +1;",
            "score": 99.15505545479911,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked') ; ;",
            "score": 99.03105024857955,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ ) ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException.class ) ;",
            "score": 99.01556396484375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( true ) ;",
            "score": 98.81235961914062,
            "correctness": "wrong",
            "tokenized_patch": "throw new Assertion CaMeL Error ( true ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if(0!=0) { return ;",
            "score": 98.77568969726562,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 != 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom(0) ;",
            "score": 98.6719741821289,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') +1;",
            "score": 99.15503801618304,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg ) {",
            "score": 98.8683837890625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<0) { return ;",
            "score": 98.77529296875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 < 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+ indexCaMeL",
            "score": 98.66916910807292,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( +0.0) ;",
            "score": 99.16912434895833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + 0 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ err ) ;",
            "score": 99.07026890345982,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + err ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") throw new IllegalArgumentException( 'unchecked') ;",
            "score": 99.02279897836539,
            "correctness": "uncompilable",
            "tokenized_patch": ") throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "; throw new IllegalArgumentException( ) ;",
            "score": 99.01473999023438,
            "correctness": "plausible",
            "tokenized_patch": "; throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "25/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'; }",
            "score": 98.858837890625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) { return ;",
            "score": 98.7744140625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureArgumentsFrom( ) ;",
            "score": 98.66347927517361,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL Arguments CaMeL From ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers == null ) {",
            "score": 98.85872650146484,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers == null ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( ) ;",
            "score": 98.80075509207589,
            "correctness": "wrong",
            "tokenized_patch": "throw new Error ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new InstantiationException( ) ;",
            "score": 98.77419704861111,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Instantiation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "position = matchers.size( ) ;",
            "score": 98.65979682074652,
            "correctness": "uncompilable",
            "tokenized_patch": "position = matchers . size ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', log ) ;",
            "score": 99.16731480189732,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , log ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length >0) {",
            "score": 98.85869598388672,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ ) ;",
            "score": 98.79866536458333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( >=0) { throw null ;",
            "score": 98.76593627929688,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( >= 0 ) { throw null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return.size( ) -1;",
            "score": 98.65704345703125,
            "correctness": "uncompilable",
            "tokenized_patch": "return . size ( ) - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false 'unchecked') ;",
            "score": 99.1669452373798,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getArguments( ).length +1;",
            "score": 99.16339983258929,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Arguments ( ) . length + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert indexOfVararg <0;",
            "score": 98.85485229492187,
            "correctness": "plausible",
            "tokenized_patch": "assert index CaMeL Of CaMeL Vararg < 0 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new Error( 'unchecked'+ value ) ;",
            "score": 98.79553833007813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new UnsupportedOperationException( ).",
            "score": 98.76533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "new Unsupported CaMeL Operation CaMeL Exception ( ) .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "CapturesArguments.clear( ) ;",
            "score": 98.65241156684027,
            "correctness": "uncompilable",
            "tokenized_patch": "Captures CaMeL Arguments . clear ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false , this ) ;",
            "score": 99.15305873325893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked', new ;",
            "score": 99.0095684344952,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ , new ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new LinkedList( matchers ) ;",
            "score": 98.8528076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Linked CaMeL List ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ this ) ;",
            "score": 98.79173583984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException.) ;",
            "score": 98.76378784179687,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( invocation , ) ;",
            "score": 98.64743381076389,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( invocation , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -0.0) ;",
            "score": 99.16412760416667,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 0 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( Exception( 'unchecked') ) ;",
            "score": 99.06841571514423,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "state.captureFrom( matchers ) ;",
            "score": 98.846875,
            "correctness": "uncompilable",
            "tokenized_patch": "state . capture CaMeL From ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( this + 'unchecked') ;",
            "score": 98.79102783203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( this + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException == null ;",
            "score": 98.76171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception == null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked', ) ;",
            "score": 98.64661322699652,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + length( ) ) ;",
            "score": 99.16375325520833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + length ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new CapturesArguments( indexOfVararg ) ;",
            "score": 99.16014753069196,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Captures CaMeL Arguments ( index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( || true ) ;",
            "score": 99.15233435997597,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( || true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+0, ) ;",
            "score": 99.06788048377403,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 0 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new UnsupportedOperationException( 'unchecked';",
            "score": 99.00836651141827,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Runnable( ) { return ;",
            "score": 98.78893364800348,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runnable ( ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new SecurityException( 'unchecked';",
            "score": 98.64284939236111,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Security CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( int.class ) ;",
            "score": 99.15992954799107,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( int . class ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') = false ;",
            "score": 99.06596156529018,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) = false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Method ; throw new UnsupportedOperationException( ) ;",
            "score": 99.00775615985577,
            "correctness": "uncompilable",
            "tokenized_patch": "Method ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked', false ) ;",
            "score": 98.78567504882812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked',",
            "score": 98.64110649956598,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + name( ) ) ;",
            "score": 99.1626953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + name ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'1, ) ;",
            "score": 99.15202113560268,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( UnsupportedOperationException ) ;",
            "score": 99.06534249441964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( Unsupported CaMeL Operation CaMeL Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ ; ;",
            "score": 99.01121168870192,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + ; ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert matchers.size( ) ==0;",
            "score": 98.844140625,
            "correctness": "plausible",
            "tokenized_patch": "assert matchers . size ( ) == 0 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+ start ) ;",
            "score": 98.74950561523437,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + start ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) >=",
            "score": 98.63774956597223,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) >=",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw value.getException( ) ;",
            "score": 98.78328247070313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw value . get CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0!=0) return ;",
            "score": 98.74553087022569,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 != 0 ) return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new UnsupportedOperationException(2,0) ;",
            "score": 99.15059116908482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610,0) ;",
            "score": 99.15059116908482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007,0) ;",
            "score": 99.15059116908482,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( 'unchecked'+ [ ;",
            "score": 99.06168306790866,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( $STRING$ + [ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int ; throw new UnsupportedOperationException( ) ;",
            "score": 99.0069110576923,
            "correctness": "uncompilable",
            "tokenized_patch": "int ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return captureFrom( invocation ) ;",
            "score": 98.83829752604167,
            "correctness": "uncompilable",
            "tokenized_patch": "return capture CaMeL From ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( new ) ;",
            "score": 98.78275146484376,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( new ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return + indexOfVararg ;",
            "score": 98.62868923611111,
            "correctness": "uncompilable",
            "tokenized_patch": "return + index CaMeL Of CaMeL Vararg ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true +0) ;",
            "score": 99.16095842633929,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + -1;",
            "score": 99.14906529017857,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert matchers.length >0-1;",
            "score": 98.83621215820312,
            "correctness": "uncompilable",
            "tokenized_patch": "assert matchers . length > 0 - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<0) return ;",
            "score": 98.73828125,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 < 0 ) return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw( UnsupportedOperationException )",
            "score": 98.62839762369792,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( ) ; } ;",
            "score": 99.00313626802884,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( ) ; } ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "dim.captureFrom( matchers ) ;",
            "score": 98.83350830078125,
            "correctness": "uncompilable",
            "tokenized_patch": "dim . capture CaMeL From ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ else",
            "score": 98.776953125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + else",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw null ;",
            "score": 98.72715759277344,
            "correctness": "wrong",
            "tokenized_patch": "throw null ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "indexOfVararg =0;",
            "score": 98.62320285373264,
            "correctness": "plausible",
            "tokenized_patch": "index CaMeL Of CaMeL Vararg = 0 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "return new UnsupportedOperationException( false ) ;",
            "score": 99.05724080403645,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException( ) ;",
            "score": 98.77454291449652,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new Double(0.0) ;",
            "score": 98.7251708984375,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Double ( 0 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return.captureFrom( ) ;",
            "score": 98.62196858723958,
            "correctness": "uncompilable",
            "tokenized_patch": "return . capture CaMeL From ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'+ int ) ;",
            "score": 99.14683314732143,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + int ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new getException( 'unchecked') ;",
            "score": 98.72347412109374,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new get CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+ ) ;",
            "score": 98.61480034722223,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'/ *) ;",
            "score": 99.15867396763393,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ / * ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(1, false ) ;",
            "score": 99.14522879464286,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 1 , false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+( ) ) ;",
            "score": 98.99957744891827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ]",
            "score": 98.77234497070313,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ]",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length !=0) return ;",
            "score": 98.72270372178819,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 0 ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked') ; }",
            "score": 98.61119249131944,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked'+ ) ;",
            "score": 99.15091378348214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2) ; }",
            "score": 99.1450946514423,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(3047126096857467610) ; }",
            "score": 99.1450946514423,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(2007) ; }",
            "score": 99.1450946514423,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $NUMBER$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "arg ; throw new UnsupportedOperationException( ) ;",
            "score": 98.99967134915866,
            "correctness": "uncompilable",
            "tokenized_patch": "arg ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "sm.captureFrom( matchers ) ;",
            "score": 98.82645263671876,
            "correctness": "uncompilable",
            "tokenized_patch": "sm . capture CaMeL From ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ! instanceof Integer ) { return ;",
            "score": 98.77059326171874,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ! instanceof Integer ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ throw ) ;",
            "score": 98.72164306640624,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( false ) ;",
            "score": 98.5665512084961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1'unchecked') ;",
            "score": 99.15795026506696,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "field.throw new UnsupportedOperationException( ) ;",
            "score": 98.99799053485577,
            "correctness": "uncompilable",
            "tokenized_patch": "field . throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "state.captureFrom( invocation ) ;",
            "score": 98.82642211914063,
            "correctness": "uncompilable",
            "tokenized_patch": "state . capture CaMeL From ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ l ) ;",
            "score": 98.76405029296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + l ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new Exception( 'unchecked'+0) ;",
            "score": 98.721533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Exception ( $STRING$ + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( ) ; } else ;",
            "score": 99.05104282924107,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( ) ; } else ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Debug.log( 'unchecked'+ matchers ) ;",
            "score": 98.82127685546875,
            "correctness": "uncompilable",
            "tokenized_patch": "Debug . log ( $STRING$ + matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'+ false ) ;",
            "score": 98.76216430664063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ + false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <0) { return ;",
            "score": 98.71898057725694,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return.clear( ) ;",
            "score": 98.55523681640625,
            "correctness": "uncompilable",
            "tokenized_patch": "return . clear ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( , -1) ;",
            "score": 99.15665980747768,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , - 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked'1) ;",
            "score": 99.14998081752232,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'|0) ;",
            "score": 99.14329310825893,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ | 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) { return ;",
            "score": 99.04956993689903,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "Object ; throw new UnsupportedOperationException( ) ;",
            "score": 98.99656325120192,
            "correctness": "uncompilable",
            "tokenized_patch": "Object ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked') ) ;",
            "score": 98.9963848407452,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length >1)",
            "score": 98.8201904296875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > 1 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw value.toString( ) ;",
            "score": 98.759423828125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw value . to CaMeL String ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length !=0) { return ;",
            "score": 98.71873779296875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int matchers = matchers -1;",
            "score": 98.5522689819336,
            "correctness": "uncompilable",
            "tokenized_patch": "int matchers = matchers - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked', this ) ;",
            "score": 98.75938720703125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ , this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>=0) { return ;",
            "score": 98.71842651367187,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 >= 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "CapturesArguments( ) ;",
            "score": 98.55215018136161,
            "correctness": "uncompilable",
            "tokenized_patch": "Captures CaMeL Arguments ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( / *) ;",
            "score": 99.1561279296875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( / * ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null ) ; }",
            "score": 99.14085036057692,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new IllegalStateException( ) ;",
            "score": 98.99506084735577,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Illegal CaMeL State CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this ; throw new UnsupportedOperationException( ) ;",
            "score": 98.99298565204327,
            "correctness": "uncompilable",
            "tokenized_patch": "this ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new Object [ length -1] ;",
            "score": 98.81841430664062,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Object [ length - 1 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw throw new RuntimeException( ) ;",
            "score": 98.7584228515625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw throw new Runtime CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') : 'unchecked';",
            "score": 99.1434326171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) : $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) +2;",
            "score": 99.14043719951923,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) +3047126096857467610;",
            "score": 99.14043719951923,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) +2007;",
            "score": 99.14043719951923,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + $NUMBER$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ *throw new IllegalArgumentException( ) ;",
            "score": 98.99270395132211,
            "correctness": "uncompilable",
            "tokenized_patch": "/ * throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw IllegalArgumentException( ) ;",
            "score": 98.81751708984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return UnsupportedOperationException.) ;",
            "score": 98.71376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "return Unsupported CaMeL Operation CaMeL Exception . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked';",
            "score": 98.543701171875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( Invocation.) ;",
            "score": 99.14000525841347,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( Invocation . ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( indexOfVararg ) ;",
            "score": 99.13973999023438,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( index CaMeL Of CaMeL Vararg ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new InternalError( 'unchecked'+ ) ;",
            "score": 98.9901123046875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Internal CaMeL Error ( $STRING$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "; throw new UnsupportedOperationException( ) ; }",
            "score": 98.98988694411058,
            "correctness": "uncompilable",
            "tokenized_patch": "; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( invocation instanceof CapturesArguments ) {",
            "score": 98.8142333984375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( invocation instanceof Captures CaMeL Arguments ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new Exception( 'unchecked') ;",
            "score": 98.75271606445312,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new UnsupportedOperationException( ;",
            "score": 98.71142578125,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Unsupported CaMeL Operation CaMeL Exception ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( true ) ;",
            "score": 98.54264068603516,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException(",
            "score": 98.81282552083333,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ l ) ;",
            "score": 98.7437255859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + l ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int indexOfVararg =",
            "score": 98.5422134399414,
            "correctness": "uncompilable",
            "tokenized_patch": "int index CaMeL Of CaMeL Vararg =",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ).UnsupportedOperationException( ) ;",
            "score": 99.0442364032452,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new ) . Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( 'unchecked'+( ;",
            "score": 98.98981182391827,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( $STRING$ + ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return captureFrom( matchers ) ;",
            "score": 98.81279839409723,
            "correctness": "uncompilable",
            "tokenized_patch": "return capture CaMeL From ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( false ) ;",
            "score": 98.74136352539062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0==0) throw null ;",
            "score": 98.7086181640625,
            "correctness": "wrong",
            "tokenized_patch": "if ( 0 == 0 ) throw null ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new Throwable(0) ;",
            "score": 98.53998565673828,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false ,1) ;",
            "score": 99.13870675223214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( 'unchecked'+ value ) ;",
            "score": 98.98758951822917,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( $STRING$ + value ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "new ; throw new UnsupportedOperationException( ) ;",
            "score": 98.9867694561298,
            "correctness": "uncompilable",
            "tokenized_patch": "new ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <0) { throw false ;",
            "score": 98.70817260742187,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) { throw false ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new byte [0] ;",
            "score": 98.5305404663086,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new byte [ 0 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + length ) ;",
            "score": 99.15424053485577,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + length ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'>0) ;",
            "score": 99.13745989118304,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ > 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getArgumentAt(",
            "score": 98.81181030273437,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Argument CaMeL At (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ! !=0) { return ;",
            "score": 98.73953857421876,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ! != 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "logger.append( 'unchecked') ; return ;",
            "score": 98.70810546875,
            "correctness": "uncompilable",
            "tokenized_patch": "logger . append ( $STRING$ ) ; return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException.",
            "score": 98.52688598632812,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception .",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( || false ) ;",
            "score": 99.13320688100961,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( || false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation.getArguments( ) ;",
            "score": 98.81152954101563,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation . get CaMeL Arguments ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new Error( 'unchecked') ;",
            "score": 98.73746337890626,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Error ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Double(0.0) ;",
            "score": 98.70327758789062,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Double ( 0 . 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ?1:0;",
            "score": 98.52083042689732,
            "correctness": "uncompilable",
            "tokenized_patch": "return ? 1 : 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( public UnsupportedOperationException",
            "score": 99.15203450520833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( public Unsupported CaMeL Operation CaMeL Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? this ;",
            "score": 99.13262469951923,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? this ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ break ) ;",
            "score": 98.97997029622395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + break ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert matchers.size( ) > ) ;",
            "score": 98.81118774414062,
            "correctness": "uncompilable",
            "tokenized_patch": "assert matchers . size ( ) > ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( ) ) ;",
            "score": 98.73384399414063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( <0) { return ; }",
            "score": 98.6993896484375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( < 0 ) { return ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return matchers.length -1;",
            "score": 98.51516723632812,
            "correctness": "uncompilable",
            "tokenized_patch": "return matchers . length - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false ,0) ;",
            "score": 99.15140206473214,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+1+ ) ;",
            "score": 99.03641451322116,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + 1 + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert ; throw new UnsupportedOperationException( ) ;",
            "score": 98.98331392728366,
            "correctness": "uncompilable",
            "tokenized_patch": "assert ; throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( 'unchecked', null ) ;",
            "score": 98.97705078125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( $STRING$ , null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert indexOfVararg >=0;",
            "score": 98.80817260742188,
            "correctness": "plausible",
            "tokenized_patch": "assert index CaMeL Of CaMeL Vararg >= 0 ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if(0>0) { return ;",
            "score": 98.697607421875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 > 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return.add( invocation ) ;",
            "score": 98.51211547851562,
            "correctness": "uncompilable",
            "tokenized_patch": "return . add ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw UnsupportedOperationException( 'unchecked') ;",
            "score": 99.03542856069711,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; )",
            "score": 98.98211669921875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length ==1) {",
            "score": 98.80584106445312,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length == 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw new Exception( 'unchecked') ;",
            "score": 98.69491238064236,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw new Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( matchers ) ;",
            "score": 98.50980377197266,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ,1) ;",
            "score": 99.12298114483173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ element ) ;",
            "score": 98.9709981282552,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + element ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) ==",
            "score": 98.80287679036458,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) ==",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "CapturesArguments( invocation ) ;",
            "score": 98.50785827636719,
            "correctness": "uncompilable",
            "tokenized_patch": "Captures CaMeL Arguments ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw UnsupportedOperationException( this ) ;",
            "score": 99.03409517728366,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw Unsupported CaMeL Operation CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( this ) ;",
            "score": 98.96904907226562,
            "correctness": "wrong",
            "tokenized_patch": "throw new Assertion CaMeL Error ( this ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "return new CapturesArguments( ) ;",
            "score": 98.80170355902777,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Captures CaMeL Arguments ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'Exception ) ;",
            "score": 98.69074164496527,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( false ) ;",
            "score": 98.50460815429688,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw UnsupportedOperationException( 'unchecked'+1) ;",
            "score": 99.03330641526442,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception ( $STRING$ + 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "synchronized( throw new UnsupportedOperationException( )",
            "score": 98.97547403971355,
            "correctness": "uncompilable",
            "tokenized_patch": "synchronized ( throw new Unsupported CaMeL Operation CaMeL Exception ( )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ start",
            "score": 98.7136474609375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + start",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( throw != null ) return ;",
            "score": 98.68107774522569,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( throw != null ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw invocation ;",
            "score": 98.50304412841797,
            "correctness": "uncompilable",
            "tokenized_patch": "throw invocation ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( 'unchecked'+ name ) ;",
            "score": 98.95631917317708,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( 'unchecked') ;",
            "score": 98.49298095703125,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size >0) {",
            "score": 98.77056121826172,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size > 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw value.getCause( ) ;",
            "score": 98.707666015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw value . get CaMeL Cause ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>=0) return ;",
            "score": 98.67257351345486,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 >= 0 ) return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw UnsupportedOperationException }",
            "score": 98.49101257324219,
            "correctness": "uncompilable",
            "tokenized_patch": "throw Unsupported CaMeL Operation CaMeL Exception }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked') ; } /",
            "score": 99.14236886160714,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ; } /",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers != -1) {",
            "score": 98.7615966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers != - 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0>0) return ;",
            "score": 98.65659586588542,
            "correctness": "plausible",
            "tokenized_patch": "if ( 0 > 0 ) return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "return ?0:0;",
            "score": 98.48954554966518,
            "correctness": "uncompilable",
            "tokenized_patch": "return ? 0 : 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; *?",
            "score": 99.11602313701923,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; * ?",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ; throw new RuntimeException( ) ;",
            "score": 98.96947224934895,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ; throw new Runtime CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final throw new IllegalArgumentException( ) ;",
            "score": 98.94272867838542,
            "correctness": "uncompilable",
            "tokenized_patch": "final throw new Illegal CaMeL Argument CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==0) {",
            "score": 98.75804138183594,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "logger.print( 'unchecked') ; return ;",
            "score": 98.70533447265625,
            "correctness": "uncompilable",
            "tokenized_patch": "logger . print ( $STRING$ ) ; return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return throw UnsupportedOperationException ;",
            "score": 98.64785427517361,
            "correctness": "uncompilable",
            "tokenized_patch": "return throw Unsupported CaMeL Operation CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked';",
            "score": 98.48567417689732,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked',0) ;",
            "score": 99.14073689778645,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ , 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( && true ) ;",
            "score": 99.11370380108173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( && true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2+ ) ;",
            "score": 99.02386005108173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+3047126096857467610+ ) ;",
            "score": 99.02386005108173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+2007+ ) ;",
            "score": 99.02386005108173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + $NUMBER$ + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( ) ;",
            "score": 98.96910603841145,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new void [0] ;",
            "score": 98.75431823730469,
            "correctness": "uncompilable",
            "tokenized_patch": "return new void [ 0 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ null ;",
            "score": 98.70473904079861,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(2==0) return ;",
            "score": 98.64201524522569,
            "correctness": "plausible",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if(3047126096857467610==0) return ;",
            "score": 98.64201524522569,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(2007==0) return ;",
            "score": 98.64201524522569,
            "correctness": "plausible",
            "tokenized_patch": "if ( $NUMBER$ == 0 ) return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new Integer(0) ;",
            "score": 98.48399353027344,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Integer ( 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( L ) ;",
            "score": 99.11220296223958,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( L ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NoSuchMethodException( $STRING$",
            "score": 98.94207763671875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new No CaMeL Such CaMeL Method CaMeL Exception ( $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "final int matchers = matchers -1;",
            "score": 98.749267578125,
            "correctness": "uncompilable",
            "tokenized_patch": "final int matchers = matchers - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException ; return ;",
            "score": 98.70467800564236,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception ; return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value !=0) return ;",
            "score": 98.63604058159723,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value != 0 ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int indexOfVararg ;",
            "score": 98.48137664794922,
            "correctness": "uncompilable",
            "tokenized_patch": "int index CaMeL Of CaMeL Vararg ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new InternalError( 'unchecked'+ name ) ;",
            "score": 98.96673583984375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Internal CaMeL Error ( $STRING$ + name ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( )1;",
            "score": 98.94198608398438,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result = new String( matchers ) ;",
            "score": 98.74350314670139,
            "correctness": "uncompilable",
            "tokenized_patch": "result = new String ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new AssertionError( 'unchecked';",
            "score": 98.70216878255208,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Assertion CaMeL Error ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else throw new Exception( 'unchecked') ;",
            "score": 98.63465711805556,
            "correctness": "uncompilable",
            "tokenized_patch": "else throw new Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( true ) ;",
            "score": 98.4753646850586,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'? 'unchecked';",
            "score": 99.109619140625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ? $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessException( 'unchecked'+ ;",
            "score": 98.96480305989583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ + ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do new UnsupportedOperationException( 'unchecked') ;",
            "score": 98.94173177083333,
            "correctness": "uncompilable",
            "tokenized_patch": "do new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new Method( invocation ) ;",
            "score": 98.74337768554688,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Method ( invocation ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ! instanceof Boolean ) { return ;",
            "score": 98.7002685546875,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ! instanceof Boolean ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new Exception( ) ;",
            "score": 98.63429478236607,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw getCause( ) ;",
            "score": 98.47000122070312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw get CaMeL Cause ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new RuntimeException( ) ;",
            "score": 98.96283513849431,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Runtime CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+( ;",
            "score": 98.93809925426136,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length ==1) {",
            "score": 98.7419204711914,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length == 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked'Exception ) ;",
            "score": 98.63379584418402,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ Exception ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( null 'unchecked') ;",
            "score": 99.13638070913461,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( null $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( indexOfVararg >",
            "score": 98.7398681640625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( index CaMeL Of CaMeL Vararg >",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value == null ) return ;",
            "score": 98.63032362196181,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value == null ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentCaMeL",
            "score": 98.45793805803571,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + name + 'unchecked';",
            "score": 99.13565499441964,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + name + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return { throw new UnsupportedOperationException( ) ;",
            "score": 99.10537484975961,
            "correctness": "uncompilable",
            "tokenized_patch": "return { throw new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this ) ) ;",
            "score": 99.01353102463942,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this ) ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new InternalError( 'unchecked') ; }",
            "score": 98.95965021306819,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Internal CaMeL Error ( $STRING$ ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new boolean [0] ;",
            "score": 98.73916625976562,
            "correctness": "uncompilable",
            "tokenized_patch": "return new boolean [ 0 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ null ;",
            "score": 98.69864908854167,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1==0) return ;",
            "score": 98.62474907769098,
            "correctness": "plausible",
            "tokenized_patch": "if ( 1 == 0 ) return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "captureFrom( null ) ;",
            "score": 98.4538803100586,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( null ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "else { throw UnsupportedOperationException( ) ; }",
            "score": 99.01182204026442,
            "correctness": "uncompilable",
            "tokenized_patch": "else { throw Unsupported CaMeL Operation CaMeL Exception ( ) ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length !=1) {",
            "score": 98.73321533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ) ;",
            "score": 98.69610595703125,
            "correctness": "uncompilable",
            "tokenized_patch": "return ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "logger.out != null ; return ;",
            "score": 98.62006971571181,
            "correctness": "uncompilable",
            "tokenized_patch": "logger . out != null ; return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException",
            "score": 98.44648742675781,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ; } } }",
            "score": 99.10219900948661,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ; } } }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw UnsupportedOperationException( ) ;",
            "score": 99.00651041666667,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(( ;",
            "score": 98.95377974076705,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length ==0)",
            "score": 98.73276095920139,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length == 0 )",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( this + ) ;",
            "score": 98.69292534722223,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( this + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( >=0) { return ;",
            "score": 98.6197509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( >= 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new intern( 'unchecked') ;",
            "score": 98.44474792480469,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new intern ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( this , 'unchecked') ;",
            "score": 99.0062255859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( this , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new NullPointerException(1) ;",
            "score": 98.93065388997395,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Null CaMeL Pointer CaMeL Exception ( 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked'+ 'unchecked') ;",
            "score": 98.69214477539063,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new Throwable( 'unchecked') ;",
            "score": 98.61399841308594,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Throwable ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( ) ;",
            "score": 98.44376918247768,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( *0) ;",
            "score": 99.12972318209134,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( * 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'| ) ;",
            "score": 99.1011493389423,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ | ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessError( ) ;",
            "score": 98.9504727450284,
            "correctness": "wrong",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Error ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if( length !=0) {",
            "score": 98.70746612548828,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length != 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( IllegalArgumentException ;",
            "score": 98.69203016493056,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Illegal CaMeL Argument CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom( new",
            "score": 98.43828582763672,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( new",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalArgumentException( +0) ;",
            "score": 99.08547738882211,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Argument CaMeL Exception ( + 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( new ;",
            "score": 98.94826438210227,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( new ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new 'unchecked';",
            "score": 98.42779541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true true ) ;",
            "score": 99.12623009314903,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "try { throw new UnsupportedOperationException( ) {",
            "score": 99.00441331129808,
            "correctness": "uncompilable",
            "tokenized_patch": "try { throw new Unsupported CaMeL Operation CaMeL Exception ( ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return invocation instanceof CapturesArguments ) ;",
            "score": 98.70454915364583,
            "correctness": "uncompilable",
            "tokenized_patch": "return invocation instanceof Captures CaMeL Arguments ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ! <0) { return ;",
            "score": 98.6892333984375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ! < 0 ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(2<0) return ;",
            "score": 98.60432264539931,
            "correctness": "plausible",
            "tokenized_patch": "if ( $NUMBER$ < 0 ) return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "if(3047126096857467610<0) return ;",
            "score": 98.60432264539931,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( $NUMBER$ < 0 ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(2007<0) return ;",
            "score": 98.60432264539931,
            "correctness": "plausible",
            "tokenized_patch": "if ( $NUMBER$ < 0 ) return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "throw new Long(0) ;",
            "score": 98.42215728759766,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Long ( 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "assert matchers.length >0;",
            "score": 98.7025375366211,
            "correctness": "uncompilable",
            "tokenized_patch": "assert matchers . length > 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( value ==0) return ;",
            "score": 98.59225802951389,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( value == 0 ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers <0) {",
            "score": 98.41685485839844,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers < 0 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( *'unchecked') ;",
            "score": 99.1247089092548,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( * $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( log ) ;",
            "score": 99.00115966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( log ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException( ;",
            "score": 98.944482421875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result = new List( matchers ) ;",
            "score": 98.69072808159723,
            "correctness": "uncompilable",
            "tokenized_patch": "result = new List ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( ! != null ) { return ;",
            "score": 98.68858032226562,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( ! != null ) { return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "CapturesArguments( matchers ) ;",
            "score": 98.41596984863281,
            "correctness": "uncompilable",
            "tokenized_patch": "Captures CaMeL Arguments ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( <<1) ;",
            "score": 99.12425818810097,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( << 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'+ exp ) ;",
            "score": 98.94437662760417,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ + exp ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalStateException(1) ;",
            "score": 98.9237772623698,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL State CaMeL Exception ( 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException2( ) ;",
            "score": 98.68455810546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception $NUMBER$ ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException3047126096857467610( ) ;",
            "score": 98.68455810546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception $NUMBER$ ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException2007( ) ;",
            "score": 98.68455810546875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception $NUMBER$ ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+0;",
            "score": 98.5908203125,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + 0 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( $STRING$",
            "score": 98.412841796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new ClassCastException( ) ;",
            "score": 98.93614612926136,
            "correctness": "wrong",
            "tokenized_patch": "throw new Class CaMeL Cast CaMeL Exception ( ) ;",
            "failed_triggering": "26/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "return new Object [0] ; }",
            "score": 98.68291558159723,
            "correctness": "uncompilable",
            "tokenized_patch": "return new Object [ 0 ] ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "System.print( 'unchecked') ; return ;",
            "score": 98.6795166015625,
            "correctness": "uncompilable",
            "tokenized_patch": "System . print ( $STRING$ ) ; return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Exception( 'unchecked'+ value ;",
            "score": 98.58603922526042,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Exception ( $STRING$ + value ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "CapturesArguments(0) ;",
            "score": 98.41168975830078,
            "correctness": "uncompilable",
            "tokenized_patch": "Captures CaMeL Arguments ( 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true + ) ;",
            "score": 99.11455829326923,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true + ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessError( 'unchecked') ;",
            "score": 98.9359130859375,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Error ( $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size >1) {",
            "score": 98.68002319335938,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size > 1 ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new new RuntimeException( 'unchecked';",
            "score": 98.67697143554688,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new new Runtime CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new long [0] ;",
            "score": 98.58338165283203,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new long [ 0 ] ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "invocation.captureFrom((",
            "score": 98.40901184082031,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From ( (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( true , ) ;",
            "score": 99.11422025240384,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( true , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ; }",
            "score": 98.93427068536931,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new List( matchers ) ;",
            "score": 98.67671203613281,
            "correctness": "uncompilable",
            "tokenized_patch": "return new List ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "result = new Integer(0) ;",
            "score": 98.58226182725694,
            "correctness": "uncompilable",
            "tokenized_patch": "result = new Integer ( 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Throwable( 'unchecked',",
            "score": 98.39399065290179,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Throwable ( $STRING$ ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( -1;",
            "score": 99.11306762695312,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( - 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) ?",
            "score": 99.0932950106534,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) ?",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "this.throw new UnsupportedOperationException( ;",
            "score": 98.92256673177083,
            "correctness": "uncompilable",
            "tokenized_patch": "this . throw new Unsupported CaMeL Operation CaMeL Exception ( ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked') ; ) ;",
            "score": 98.67346801757813,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ ) ; ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( size ==0) return ;",
            "score": 98.58144802517361,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( size == 0 ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return ?1:1;",
            "score": 98.36549595424107,
            "correctness": "uncompilable",
            "tokenized_patch": "return ? 1 : 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessException( 'unchecked';",
            "score": 98.91841264204545,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Exception ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "do new UnsupportedOperationException( ) ;",
            "score": 98.91425115411931,
            "correctness": "uncompilable",
            "tokenized_patch": "do new Unsupported CaMeL Operation CaMeL Exception ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.length > ) {",
            "score": 98.67388237847223,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . length > ) {",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw getRuntime( ).;",
            "score": 98.65972222222223,
            "correctness": "uncompilable",
            "tokenized_patch": "throw get CaMeL Runtime ( ) . ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(1<0) return ;",
            "score": 98.57830810546875,
            "correctness": "plausible",
            "tokenized_patch": "if ( 1 < 0 ) return ;",
            "failed_triggering": "0/26",
            "failed_non_triggering": "0"
        },
        {
            "patch": "invocation.captureFrom(",
            "score": 98.35224260602679,
            "correctness": "uncompilable",
            "tokenized_patch": "invocation . capture CaMeL From (",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException(1, ) ;",
            "score": 99.08628493088942,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( 1 , ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( ) + 'unchecked') ;",
            "score": 98.98384602864583,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( ) + $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( ) + 'unchecked';",
            "score": 98.91412908380681,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( ) + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new int [0] ; }",
            "score": 98.67082383897569,
            "correctness": "uncompilable",
            "tokenized_patch": "return new int [ 0 ] ; }",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw( UnsupportedOperationException ;",
            "score": 98.65513102213542,
            "correctness": "uncompilable",
            "tokenized_patch": "throw ( Unsupported CaMeL Operation CaMeL Exception ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return.pop( ) ;",
            "score": 98.348388671875,
            "correctness": "uncompilable",
            "tokenized_patch": "return . pop ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( false true ) ;",
            "score": 99.10574106069711,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( false true ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( && false ) ;",
            "score": 99.08597506009616,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( && false ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'&& indexCaMeL",
            "score": 99.06768329326923,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ && index CaMeL",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( this.;",
            "score": 98.91463216145833,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( this . ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return new String( matchers ) ;",
            "score": 98.6704330444336,
            "correctness": "uncompilable",
            "tokenized_patch": "return new String ( matchers ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "UnsupportedOperationException throw ) ;",
            "score": 98.57400173611111,
            "correctness": "uncompilable",
            "tokenized_patch": "Unsupported CaMeL Operation CaMeL Exception throw ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return +1;",
            "score": 98.34718627929688,
            "correctness": "uncompilable",
            "tokenized_patch": "return + 1 ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( + 'unchecked';",
            "score": 99.10512288411458,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( + $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked'-0) ;",
            "score": 99.06591796875,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ - 0 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new IllegalAccessException( this ) ;",
            "score": 98.97750854492188,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Illegal CaMeL Access CaMeL Exception ( this ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new Error( 'unchecked';",
            "score": 98.64488002232143,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Error ( $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( length <0) return ;",
            "score": 98.57268608940973,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( length < 0 ) return ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "captureFrom( invocation ,",
            "score": 98.34422084263393,
            "correctness": "uncompilable",
            "tokenized_patch": "capture CaMeL From ( invocation ,",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( 'unchecked'*/",
            "score": 99.10472615559895,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( $STRING$ * /",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new UnsupportedOperationException( ) + null ;",
            "score": 99.08538348858173,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Unsupported CaMeL Operation CaMeL Exception ( ) + null ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new RuntimeException( 'unchecked',1) ;",
            "score": 98.97569783528645,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Runtime CaMeL Exception ( $STRING$ , 1 ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new InternalError( this , 'unchecked') ;",
            "score": 98.9116719563802,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new Internal CaMeL Error ( this , $STRING$ ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( matchers.size( ) <",
            "score": 98.66550021701389,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( matchers . size ( ) <",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "throw new 'unchecked'? 'unchecked': 'unchecked';",
            "score": 98.57123480902777,
            "correctness": "uncompilable",
            "tokenized_patch": "throw new $STRING$ ? $STRING$ : $STRING$ ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        },
        {
            "patch": "return.close( ) ;",
            "score": 98.33900669642857,
            "correctness": "uncompilable",
            "tokenized_patch": "return . close ( ) ;",
            "failed_triggering": "None/26",
            "failed_non_triggering": "None"
        }
    ]
}