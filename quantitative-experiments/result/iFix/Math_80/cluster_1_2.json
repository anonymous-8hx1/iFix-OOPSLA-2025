{
    "cluster_1": [
        {
            "code": "int j =4- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n / n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*( n -1) +( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n -1) +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -3*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n -6*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -5*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n -1) +3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*( n -1) -( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n + n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1+ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*( n -1) + n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -3*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n -6*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -5*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -4*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -3*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -6*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -5*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4*n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -3*n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n -6*n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -5*n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -10*n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n / n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -3+ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*( n -1) +0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4+ n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n -1) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -1*4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -4*n -1) +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -3*n -1) +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -6*n -1) +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -5*n -1) +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -10*n -1) +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*( n -10) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*3/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*5/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*( n -1) -( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n -1) *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -4*( n -1) ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -3*( n -1) ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -6*( n -1) ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -5*( n -1) ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -10*( n -1) ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -4*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -3*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -6*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -5*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -10*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+ n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n - n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n / n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n / n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n / n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n / n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n / n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-6) *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-10) *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*( n -1) + pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-( n -1) ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n +3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *3/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*( n -1) *( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -1+3+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+ n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n +4- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -1+ n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n - n -1+4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*( n -10) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10; while( j < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+ n -1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n / n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n / n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -10*10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -3- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n *n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n *n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n *n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n *n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n *n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1+4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1+3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1+5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -3*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =(0*n -1) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -1*n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -1*n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n -1*n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -1*n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n *( n -10) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n / n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -( n -1) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n - n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6; while( j < n -1)",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10; while( j < n -1)",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-4*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-3*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6-6*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5-5*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10-10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*( n -1) - pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -1*4*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -1*3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n -1*6*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -1*5*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -1*10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n *n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n *n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n *n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n *n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n *n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*4*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*3*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*6*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*5*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4+ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3+ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6+ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5+ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10+ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -4*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -3*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -6*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -5*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-3/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n / n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong *( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4/ n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -5-5-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n >>( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n >>( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n >>( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n >>( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*( n -10) +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n - n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10+ n -1+ n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6-1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5-1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*3- n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -4*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -3*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -6*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -5*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n *n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n *n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n *n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n *n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n *n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n +3- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -4*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -3*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -6*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -5*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -10*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4*n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -3*n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6*n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5*n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10*n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10+ n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4+4- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+3- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5+5- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -1*n *4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -1*n *3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n -1*n *6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -1*n *5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -1*n *10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*5-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -11;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*( n -1) *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1*1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n /4- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n /3- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n /6- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n /5- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n /10- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n ; while( j < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n ; while( j < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n ; while( j < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n ; while( j < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n ; while( j < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-4- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-3- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6-6- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5-5- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10-10- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n - pingPong +3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1+ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n % n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n % n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n % n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n % n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n % n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*( n -1) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1-1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n *n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n *n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n *n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n *n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n *n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n - n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n - n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n - n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n - n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -1/ n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -4) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -6) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -10) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n / n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n / n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n / n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n / n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*0*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*0*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*0*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*0*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*0*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n ) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*( n -1) -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n +3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*( n -1) - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1-3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -1-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -1-( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4+ n -4*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+ n -3*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6+ n -6*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5+ n -5*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10+ n -10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4/4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3/3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6/6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5/5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10/10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n - n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n +1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*( n +1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =(3*n -1) / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *n -10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4+1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1+3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*pingPong *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*pingPong *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*pingPong *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*pingPong *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*pingPong *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -4*n ) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -3*n ) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -6*n ) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -5*n ) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -10*n ) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*0- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*0- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*0- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*0- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*0- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) -4*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) -3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) -6*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) -5*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) -10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n >> n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n >> n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n >> n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n >> n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1; j ++ ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1; j ++ ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1; j ++ ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1; j ++ ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+3/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -1*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *n -10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong - pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *n / n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *n / n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-1) -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-1) -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-1) -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-1) -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( int )4*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1-1-3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1-1-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1-1-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1-1-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*( n -1) ; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n *1/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -1-1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -1-1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -1-1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -1-1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n -1-1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*3- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n *pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n *pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n *pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n *pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n *pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n / n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n -4) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n -3) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n -6) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n -5) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n -10) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n / n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n / n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n / n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n / n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n / n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n +3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n - n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n - n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n - n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n - n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n + n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0; while( n < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n + n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n + n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n + n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n + n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n + n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n + n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n *n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n +4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n +3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n +6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n +5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -5-1-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6-( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5-( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1; j ++ ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -3- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1+3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4>>( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3>>( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6>>( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5>>( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10>>( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = Math.min(0, n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n *4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n *3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n *6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n *5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n *10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -3*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n -6*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -5*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -10*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4; while( n < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3; while( n < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6; while( n < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5; while( n < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10; while( n < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-( n -1) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-( n -1) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6-( n -1) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5-( n -1) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*( n -1) - pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+ n + n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*( n -1) / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n - n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -1-5-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong + pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( step -4*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( step -3*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( step -6*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( step -5*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( step -10*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*( n -1) + pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1- n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n *n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n *n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n *n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n *n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -( n -1) +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n / n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n / n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n / n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n / n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n / n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n +1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5/ n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10/ n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-3) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-6) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-5) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-10) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong *( n -1) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*( n -1) -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*( n -1) -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*( n -1) -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =(0*n -1) +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4*n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -3*n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n -6*n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -5*n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -10*n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -1+1-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -4+ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -6+ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -10+ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n - n *4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n - n *3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n - n *6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n - n *5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n - n *10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -3- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -4-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -3-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -6-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -5-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -10-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4+1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6+1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5+1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n - n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n *n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n *n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n *n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n *n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n *n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -4*n -4) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -3*n -3) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -6*n -6) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -5*n -5) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -10*n -10) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -( n +1) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0; while(10< n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10; while(10< n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n + n +10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -4*n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -3*n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -6*n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -5*n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -10*n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1*n -1+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -4*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -3*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -6*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -5*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*1/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*1/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*1/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*1/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*1/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -4-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -6-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -10-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4; if( n > n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3; if( n > n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6; if( n > n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5; if( n > n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10; if( n > n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10; if(10< n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( pingPong - pingPong ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*( n -10) - pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) + step -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) + step -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1-( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =(0-1) -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step *pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -4*4*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -3*3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n -6*6*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -5*5*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -10*10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*( n - n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*( n - n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*( n - n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*( n - n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*( n - n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -11;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -11;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -11;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -11;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -11;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3% n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10% n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*4*n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*3*n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*6*n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*5*n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1*10*n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = Math.round( n -5) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = Math.round( n -10) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*1- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*1- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*1- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*1- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =(0-1*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n *1-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n & n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n & n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n / n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n / n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n / n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n / n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-4- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-3- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6-6- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5-5- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10-10- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -11*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -11*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n -11*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -11*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -11*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*3- n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1-3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1*n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) *4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*( n -1) - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10; while( j <= n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4; if( n < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3; if( n < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6; if( n < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5; if( n < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10; if( n < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+3- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *n -5*5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *n -10*10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n - n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*(4- n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*(3- n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*(6- n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*(5- n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+ n *3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n *4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n *3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n *6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n *5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n *10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -1*5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n -1*10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n - n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6-1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5-1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10-1*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*pingPong -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*pingPong -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*pingPong -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*pingPong -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*pingPong -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -110;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -4*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -6*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -5*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3-3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n +1*3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n - n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n - n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*( n -1) -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*( n -1) -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*( n -1) -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*( n -1) -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*( n -1) -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*4/ n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*3/ n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*6/ n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*5/ n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -4*n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -3*n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -6*n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -5*n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -10*n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -( n +1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4+ n -4*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+ n -3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6+ n -6*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5+ n -5*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10+ n -10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4+ n -11;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+ n -11;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6+ n -11;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n +1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n +1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n +1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n +1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n ; while( j < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = - pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n & pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n & pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n & pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n & pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n & pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*pingPong -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -1+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -1+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -1+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -1+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -4-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -3-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -6-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -5-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n -10-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n - n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -4*n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -3*n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -6*n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -5*n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -10*n ) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1-1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n *n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n *n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n *n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n *n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n *n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n &1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n &1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n &1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n *-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n *-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n *-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n *-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n *-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -4- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -3- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -6- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -5- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -10- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4- n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -3- n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6- n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5- n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10- n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *4/ n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *3/ n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *6/ n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *5/ n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *10/ n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4*4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3*3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6*6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5*5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10*10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*( n -5) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*( n -10) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*4*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n - pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n - pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n - pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n - pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4*4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -3*3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6*6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5*5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10*10;",
            "test_case": "0/1/0"
        },
        {
            "code": "Integer j =4*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*4*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*3*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*6*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*5*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*10*n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n +3; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1*4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1*3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1*6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1*5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1*10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n *n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n *n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n *n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n *n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n *n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -3*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10; if( j < n )",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1- n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1- n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1- n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1- n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1- n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*( n - n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*( n - n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*( n - n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*( n - n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*( n - n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -1/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -1/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -1/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -1/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -1/1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n *0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n *0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n *0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n *0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n *0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =(0*n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4% n -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10+1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n - n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n - n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n - n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n - n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n - n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*1-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*1-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*1-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*1-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*1-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n -4*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n -3*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n -6*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n -5*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n -10*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -41;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n -31;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n -61;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n -51;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n -101;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4>> n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3>> n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6>> n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5>> n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10>> n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1- n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -1*n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1-3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -1-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n +1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n +1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n +1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n +1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n +1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4*n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -3*n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6*n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5*n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10*n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*3*1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -4-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -5-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -6+ n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -10+ n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -4*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -3*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -6*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -5*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -10*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*1- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n *10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -1-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -1-3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -1-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -1-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n -1-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n - -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1) / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n -0-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*4- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*3- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*6- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*5- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*10- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-4) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-6) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -1-10) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step - pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n +10+ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1*( n -1) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -4/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -3/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -6/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -5/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n - n -10/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -4*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -6*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -5*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n *n *4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n *n *3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n *n *6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n *n *5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10- n *n *10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*0-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*0-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*0-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*0-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*0-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n + n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-4*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6-6*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5-5*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10-10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1*n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n % n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *n *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -5) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( n -10) ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n +1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *1-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-3/3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0/ n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( int ) n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =( int ) n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step + pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *0-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*4/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *n *-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n / n -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n / n -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n / n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n / n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n / n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = - pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step *pingPong ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4+1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3+1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6+1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5+1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10-1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-4-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3-3-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6-6-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5-5-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10-10-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n - -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0+ n -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0+ n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "Integer j =4- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "Integer j =3- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "Integer j =6- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "Integer j =5- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "Integer j =10- n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n *4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n *3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n *6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n *5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n *10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -4-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -3-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -6-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -5-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -10-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3& n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10& n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n *4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n *3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n *6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n *5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n % n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*n % n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n % n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*n % n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n % n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -1*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*0*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*0*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*0*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*0*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*0*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*step ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*n &6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*n &10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -41;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -31;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -61;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -51;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -101;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n -11;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *0*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4-1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0-3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3; j -- ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- n ; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3- n ; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6- n ; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5- n ; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -4*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -3*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -6*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -5*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -10*n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = - n -1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*0- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*0- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*0- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*0- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*0- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1+ n -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1+ n -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*n - 'n';",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *4-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong *4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong *3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong *6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong *5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong *10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*1-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*1-3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*1-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*1-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*1-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n /3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n /10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1-3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0- n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n /4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n /3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n /6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n /5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n /10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n *n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/ n - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n /1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/ n ; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/ n ; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/ n ; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/ n ; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4/4-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3/3-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6/6-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5/5-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10/10-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = pingPong +0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1-4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1-3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1-6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1-5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1-10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*step -4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*step -3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*step -6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*step -5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*step -10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- n / n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*-1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -5+ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -10+ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = n *0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4>> n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3>> n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6>> n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5>> n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10>> n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -1; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4>>4;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3>>3;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6>>6;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5>>5;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10>>10;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*step ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4*- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =3*- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =6*- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5*- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =10*- n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0*n ; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = -0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4>>1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =5>>1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1*0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step *1;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step *0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = step +0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1/ n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =4- step ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0; ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =1- step ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j =0-0;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = - n ;",
            "test_case": "0/1/0"
        },
        {
            "code": "int j = - step ;",
            "test_case": "0/1/0"
        }
    ]
}