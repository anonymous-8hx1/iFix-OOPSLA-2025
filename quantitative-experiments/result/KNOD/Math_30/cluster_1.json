{
    "cluster_1": [
        {
            "code": "final double n1n2prod = n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final long n1n2prod = n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "double n1n2prod = n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = n1 * (double)n2;",
            "test_case": "0/0"
        },
        {
            "code": "final float n1n2prod = n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "long n1n2prod = n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = (int)n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = (int) (n1 * n2);",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = Math.abs(n1 * n2);",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = (double)n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = Math.abs(n1 * n2);",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = Math.round(n1 * n2);",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = Math.abs(n1) * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = (long)n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = n1 * (int)n2;",
            "test_case": "0/0"
        },
        {
            "code": "final long n1n2prod = (long)n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final long n1n2prod = (int) (n1 * n2);",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = (float)n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final long n1n2prod = Math.abs(n1 * n2);",
            "test_case": "0/0"
        },
        {
            "code": "final long n1n2prod = Math.abs(n1 * n2);",
            "test_case": "0/0"
        },
        {
            "code": "final long n1n2prod = Math.round(n1 * n2);",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = n1 * (long)n2;",
            "test_case": "0/0"
        },
        {
            "code": "final long n1n2prod = n1 * (long)n2;",
            "test_case": "0/0"
        },
        {
            "code": "final long n1n2prod = (int)n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final int n1n2prod = (short) (n1 * n2);",
            "test_case": "0/0"
        },
        {
            "code": "float n1n2prod = n1 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final int n1n2prod = 5 * n2;",
            "test_case": "0/0"
        },
        {
            "code": "final int n1n2prod = n1 * 4;",
            "test_case": "0/0"
        },
        {
            "code": "final double n1n2prod = n2 * n1;",
            "test_case": "0/0"
        }
    ]
}