int indexOfDot = namespace.lastIndexOf('.');
int indexOfDot = namespace.indexOf('\0');
int indexOfDot = namespace.indexOf("0");
int indexOfDot = namespace.indexOf("\0");
int indexOfDot = namespace.indexOf("\\0");
int indexOfDot = namespace.indexOf("\\000");
int indexOfDot = namespace.indexOf(">;");
int indexOfDot = namespace.indexOf("th");
int indexOfDot = namespace.indexOf("null");
int indexOfDot = namespace.indexOf(0);
int indexOfDot = namespace.indexOf(2);
int indexOfDot = namespace.indexOf(1);
int indexOfDot = namespace.indexOf('/');
int indexOfDot = namespace.indexOf(':');
int indexOfDot = namespace.lastIndexOf('.');
int indexOfDot = namespace.indexOf(3);
int indexOfDot = namespace.indexOf('\n');
int indexOfDot = namespace.indexOf("/");
int indexOfDot = namespace.indexOf('\\');
int indexOfDot = namespace.indexOf(10);
int indexOfDot = namespace.indexOf(100);
int indexOfDot = namespace.indexOf('\r');
int indexOfDot = namespace.indexOf(4);
int indexOfDot = namespace.indexOf(5);
int indexOfDot = namespace.indexOf('-');
int indexOfDot = namespace.indexOf(6);
int indexOfDot = namespace.indexOf(';');
int indexOfDot = namespace.indexOf(8);
int indexOfDot = namespace.indexOf('"');
int indexOfDot = namespace.indexOf('\'');
int indexOfDot = namespace.indexOf(9);
int indexOfDot = namespace.indexOf("<SPACE>");
int indexOfDot = namespace.indexOf("\n");
int indexOfDot = namespace.indexOf(']');
int indexOfDot = namespace.indexOf(12);
int indexOfDot = namespace.indexOf("true");
int indexOfDot = namespace.indexOf('0');
int indexOfDot = namespace.indexOf(50);
int indexOfDot = namespace.indexOf(31);
int indexOfDot = namespace.indexOf(";");
int indexOfDot = namespace.indexOf('>');
int indexOfDot = namespace.indexOf('Z');
int indexOfDot = namespace.indexOf("false");
int indexOfDot = namespace.indexOf(">");
int indexOfDot = namespace.indexOf(18);
int indexOfDot = namespace.indexOf('.','.');
int indexOfDot = namespace.lastIndexOf('\0');
int indexOfDot = namespace.lastIndexOf('/');
int indexOfDot = namespace.indexOf(0,'.');
int indexOfDot = namespace.lastIndexOf(0);
int indexOfDot = namespace.lastIndexOf(':');
int indexOfDot = namespace.lastIndexOf("0");
int indexOfDot = namespace.lastIndexOf("\0");
int indexOfDot = namespace.lastIndexOf("\\0");
int indexOfDot = namespace.lastIndexOf("\\000");
int indexOfDot = namespace.lastIndexOf(">;");
int indexOfDot = namespace.lastIndexOf("th");
int indexOfDot = namespace.lastIndexOf("null");
int indexOfDot = namespace.lastIndexOf('\n');
int indexOfDot = namespace.indexOf('.','.');
int indexOfDot = namespace.indexOf('\0','.');
int indexOfDot = namespace.lastIndexOf(1);
int indexOfDot = namespace.lastIndexOf("/");
int indexOfDot = namespace.indexOf("0",'.');
int indexOfDot = namespace.indexOf("\0",'.');
int indexOfDot = namespace.indexOf("\\0",'.');
int indexOfDot = namespace.indexOf("\\000",'.');
int indexOfDot = namespace.indexOf(">;",'.');
int indexOfDot = namespace.indexOf("th",'.');
int indexOfDot = namespace.indexOf("null",'.');
int indexOfDot = namespace.lastIndexOf('\\');
int indexOfDot = namespace.indexOf(1,'.');
int indexOfDot = namespace.indexOf(2,'.');
int indexOfDot = namespace.indexOf(Node.BOTH);
int indexOfDot = namespace.indexOf(Token.NAME);
int indexOfDot = namespace.indexOf(Token.STRING);
int indexOfDot = namespace.indexOf(Token.BLOCK);
int indexOfDot = namespace.indexOf(Token.FUNCTION);
int indexOfDot = namespace.indexOf(Token.VAR);
int indexOfDot = namespace.indexOf(Token.CALL);
int indexOfDot = namespace.indexOf(Token.GETPROP);
int indexOfDot = namespace.indexOf(Token.ASSIGN);
int indexOfDot = namespace.indexOf(Token.FALSE);
int indexOfDot = namespace.indexOf(Token.TRUE);
int indexOfDot = namespace.indexOf('\0'),moduleGraph;
int indexOfDot = namespace.indexOf('\0'),INVALID_ARGUMENT_ERROR;
int indexOfDot = namespace.indexOf('\0'),BASE_CLASS_ERROR;
int indexOfDot = namespace.indexOf('\0'),rewriteNewDateGoogNow;
int indexOfDot = namespace.indexOf(0,0);
int indexOfDot = (int)namespace.indexOf('\0');
int indexOfDot = namespace.indexOf(Node.BOTH,'.');
int indexOfDot = namespace.lastIndexOf(Node.BOTH);
int indexOfDot = namespace.indexOf(namespace.length());
int indexOfDot = PhaseOptimizer.getLoopsRun().indexOf('.');
int indexOfDot = namespace.indexOf(namespace.length());
int indexOfDot = namespace.indexOf(compiler.toString());
int indexOfDot = namespace.indexOf(compiler.toString());
int indexOfDot = namespace.indexOf(namespace.lastIndexOf('.'));
