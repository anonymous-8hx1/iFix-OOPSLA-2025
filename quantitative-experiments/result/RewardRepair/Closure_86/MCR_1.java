cluster_1: return false;
cluster_1: return false;
cluster_1: nativeSyntaxError: return false;
cluster_1: needsRegexp: return false;
cluster_1: necessaryParameters: return false;
cluster_1: necessaryStatement: return false;
cluster_1: AssertionError: return false;
cluster_1: necessarySyntax: return false;
cluster_1: necessaryFunctions: return false;
cluster_1: necessaryRegexp: return false;
cluster_1: necessaryError: return false;
cluster_1: result: return false;
cluster_1: necessaryDecl: return false;
cluster_1: NeighborDecl: return false;
cluster_1: n: return false;
cluster_1: illegalArgumentException: return false;
cluster_1: nativeSyntaxException: return false;
cluster_1: neitherStatement: return false;
cluster_1: nsSupports: return false;
cluster_1: nativeReference: return false;
cluster_1: neitherWrapper: return false;
cluster_1: nsStatement: return false;
cluster_1: nativeScope: return false;
cluster_1: necessary: return false;
cluster_1: REGEXP: return false;
cluster_1: blend: return false;
cluster_1: ne: return false;
cluster_1: Debug: return false;
cluster_1: reverse: return false;
cluster_1: nl: return false;
cluster_1: pun: return false;
cluster_1: parent: return false;
cluster_1: return isToStringMethodCall(value);
cluster_1: return locals.apply(value);
cluster_1: n: return isToStringMethodCall(value);
cluster_1: case Token.CONST: return false;
cluster_1: case Token.NULL: return false;
cluster_1: case Token.NOT: return false;
cluster_1: n: return locals.apply(value);
