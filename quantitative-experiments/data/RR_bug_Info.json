[
    {
        "BUG_ID": "Chart_1",
        "FILE_NAME": "AbstractCategoryItemRenderer.java",
        "BUGGY_LINE": "if (dataset != null) {",
        "LINE_NUMBER": 1797
    },
    {
        "BUG_ID": "Chart_8",
        "FILE_NAME": "Week.java",
        "BUGGY_LINE": "this(time, RegularTimePeriod.DEFAULT_TIME_ZONE, Locale.getDefault());",
        "LINE_NUMBER": 175
    },
    {
        "BUG_ID": "Chart_9",
        "FILE_NAME": "TimeSeries.java",
        "BUGGY_LINE": "if (endIndex < 0) {",
        "LINE_NUMBER": 944
    },
    {
        "BUG_ID": "Chart_11",
        "FILE_NAME": "ShapeUtilities.java",
        "BUGGY_LINE": "PathIterator iterator2 = p1.getPathIterator(null);",
        "LINE_NUMBER": 275
    },
    {
        "BUG_ID": "Chart_12",
        "FILE_NAME": "MultiplePiePlot.java",
        "BUGGY_LINE": "this.dataset = dataset;",
        "LINE_NUMBER": 145
    },
    {
        "BUG_ID": "Chart_13",
        "FILE_NAME": "BorderArrangement.java",
        "BUGGY_LINE": "new Range(0.0, constraint.getWidth() - w[2]),",
        "LINE_NUMBER": 455
    },
    {
        "BUG_ID": "Closure_1",
        "FILE_NAME": "RemoveUnusedVars.java",
        "BUGGY_LINE": "if (!removeGlobals) { return; }",
        "LINE_NUMBER": 379
    },
    {
        "BUG_ID": "Closure_10",
        "FILE_NAME": "NodeUtil.java",
        "BUGGY_LINE": "return allResultsMatch(n, MAY_BE_STRING_PREDICATE);",
        "LINE_NUMBER": 1417
    },
    {
        "BUG_ID": "Closure_11",
        "FILE_NAME": "NodeUtil.java",
        "BUGGY_LINE": "} else if (n.getJSType() != null && parent.isAssign()) { return;",
        "LINE_NUMBER": 1314
    },
    {
        "BUG_ID": "Closure_18",
        "FILE_NAME": "Compiler.java",
        "BUGGY_LINE": "if (options.dependencyOptions.needsManagement() && options.closurePass) {",
        "LINE_NUMBER": 1288
    },
    {
        "BUG_ID": "Closure_31",
        "FILE_NAME": "Compiler.java",
        "BUGGY_LINE": "!options.skipAllPasses &&",
        "LINE_NUMBER": 1285
    },
    {
        "BUG_ID": "Closure_38",
        "FILE_NAME": "CodeConsumer.java",
        "BUGGY_LINE": "if (x < 0 && prev == '-') {",
        "LINE_NUMBER": 245
    },
    {
        "BUG_ID": "Closure_62",
        "FILE_NAME": "LightweightMessageFormatter.java",
        "BUGGY_LINE": "&& 0 <= charno && charno < sourceExcerpt.length()) {",
        "LINE_NUMBER": 98
    },
    {
        "BUG_ID": "Closure_70",
        "FILE_NAME": "TypedScopeCreator.java",
        "BUGGY_LINE": "jsDocParameter.getJSType(), true);",
        "LINE_NUMBER": 1745
    },
    {
        "BUG_ID": "Closure_71",
        "FILE_NAME": "CheckAccessControls.java",
        "BUGGY_LINE": "boolean isOverride = t.inGlobalScope() &&",
        "LINE_NUMBER": 416
    },
    {
        "BUG_ID": "Closure_73",
        "FILE_NAME": "CodeGenerator.java",
        "BUGGY_LINE": "if (c > 0x1f && c <= 0x7f) {",
        "LINE_NUMBER": 1045
    },
    {
        "BUG_ID": "Closure_86",
        "FILE_NAME": "NodeUtil.java",
        "BUGGY_LINE": "return true;",
        "LINE_NUMBER": 2465
    },
    {
        "BUG_ID": "Closure_92",
        "FILE_NAME": "ProcessClosurePrimitives.java",
        "BUGGY_LINE": "int indexOfDot = namespace.indexOf('.');",
        "LINE_NUMBER": 789
    },
    {
        "BUG_ID": "Closure_104",
        "FILE_NAME": "UnionType.java",
        "BUGGY_LINE": "if (result != null) {",
        "LINE_NUMBER": 291
    },
    {
        "BUG_ID": "Closure_125",
        "FILE_NAME": "TypeCheck.java",
        "BUGGY_LINE": "if (fnType != null) {",
        "LINE_NUMBER": 1661
    },
    {
        "BUG_ID": "Closure_126",
        "FILE_NAME": "TMinimizeExitPoints.java",
        "BUGGY_LINE": "if (NodeUtil.hasFinally(n)) { Node finallyBlock = n.getLastChild(); tryMinimizeExits(finallyBlock, exitType, labelName); }",
        "LINE_NUMBER": 141
    },
    {
        "BUG_ID": "Lang_6",
        "FILE_NAME": "CharSequenceTranslator.java",
        "BUGGY_LINE": "pos += Character.charCount(Character.codePointAt(input, pos));",
        "LINE_NUMBER": 95
    },
    {
        "BUG_ID": "Lang_21",
        "FILE_NAME": "DateUtils.java",
        "BUGGY_LINE": "cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) &&",
        "LINE_NUMBER": 265
    },
    {
        "BUG_ID": "Lang_33",
        "FILE_NAME": "ClassUtils.java",
        "BUGGY_LINE": "classes[i] = array[i].getClass();",
        "LINE_NUMBER": 910
    },
    {
        "BUG_ID": "Lang_45",
        "FILE_NAME": "WordUtils.java",
        "BUGGY_LINE": " if (lower > str.length()) { lower = str.length(); }",
        "LINE_NUMBER": 616
    },
    {
        "BUG_ID": "Lang_51",
        "FILE_NAME": "BooleanUtils.java",
        "BUGGY_LINE": "return false;",
        "LINE_NUMBER": 682
    },
    {
        "BUG_ID": "Lang_57",
        "FILE_NAME": "LocaleUtils.java",
        "BUGGY_LINE": "return cAvailableLocaleSet.contains(locale);",
        "LINE_NUMBER": 223
    },
    {
        "BUG_ID": "Lang_59",
        "FILE_NAME": "StrBuilder.java",
        "BUGGY_LINE": "str.getChars(0, strLen, buffer, size);",
        "LINE_NUMBER": 884
    },
    {
        "BUG_ID": "Lang_61",
        "FILE_NAME": "StrBuilder.java",
        "BUGGY_LINE": "int len = thisBuf.length - strLen;",
        "LINE_NUMBER": 1776
    },
    {
        "BUG_ID": "Math_2",
        "FILE_NAME": "HypergeometricDistribution.java",
        "BUGGY_LINE": "return (double) (getSampleSize() * getNumberOfSuccesses()) / (double) getPopulationSize();",
        "LINE_NUMBER": 268
    },
    {
        "BUG_ID": "Math_11",
        "FILE_NAME": "MultivariateNormalDistribution.java",
        "BUGGY_LINE": "return FastMath.pow(2 * FastMath.PI, -dim / 2) *",
        "LINE_NUMBER": 183
    },
    {
        "BUG_ID": "Math_30",
        "FILE_NAME": "MannWhitneyUTest.java",
        "BUGGY_LINE": "final int n1n2prod = n1 * n2;",
        "LINE_NUMBER": 173
    },
    {
        "BUG_ID": "Math_32",
        "FILE_NAME": "PolygonsSet.java",
        "BUGGY_LINE": "if ((Boolean) tree.getAttribute()) {",
        "LINE_NUMBER": 136
    },
    {
        "BUG_ID": "Math_33",
        "FILE_NAME": "SimplexTableau.java",
        "BUGGY_LINE": "if (Precision.compareTo(entry, 0d, maxUlps) > 0) {",
        "LINE_NUMBER": 338
    },
    {
        "BUG_ID": "Math_34",
        "FILE_NAME": "ListPopulation.java",
        "BUGGY_LINE": "return chromosomes.iterator();",
        "LINE_NUMBER": 209
    },
    {
        "BUG_ID": "Math_41",
        "FILE_NAME": "Variance.java",
        "BUGGY_LINE": "for (int i = 0; i < weights.length; i++) {",
        "LINE_NUMBER": 520
    },
    {
        "BUG_ID": "Math_50",
        "FILE_NAME": "BaseSecantSolver.java",
        "BUGGY_LINE": "if (x == x1) { x0 = 0.5 * (x0 + x1 - FastMath.max(rtol * FastMath.abs(x1), atol)); f0 = computeObjectiveValue(x0); }",
        "LINE_NUMBER": 187
    },
    {
        "BUG_ID": "Math_57",
        "FILE_NAME": "KMeansPlusPlusClusterer.java",
        "BUGGY_LINE": "int sum = 0;",
        "LINE_NUMBER": 175
    },
    {
        "BUG_ID": "Math_59",
        "FILE_NAME": "FastMath.java",
        "BUGGY_LINE": "return (a <= b) ? b : (Float.isNaN(a + b) ? Float.NaN : b);",
        "LINE_NUMBER": 3482
    },
    {
        "BUG_ID": "Math_63",
        "FILE_NAME": "MathUtils.java",
        "BUGGY_LINE": "return (Double.isNaN(x) && Double.isNaN(y)) || x == y;",
        "LINE_NUMBER": 417
    },
    {
        "BUG_ID": "Math_70",
        "FILE_NAME": "BisectionSolver.java",
        "BUGGY_LINE": "return solve(min, max);",
        "LINE_NUMBER": 72
    },
    {
        "BUG_ID": "Math_75",
        "FILE_NAME": "Frequency.java",
        "BUGGY_LINE": "return getCumPct((Comparable<?>) v);",
        "LINE_NUMBER": 303
    },
    {
        "BUG_ID": "Math_80",
        "FILE_NAME": "EigenDecompositionImpl.java",
        "BUGGY_LINE": "int j = 4 * n - 1;",
        "LINE_NUMBER": 1135
    },
    {
        "BUG_ID": "Math_82",
        "FILE_NAME": "SimplexSolver.java",
        "BUGGY_LINE": "if (MathUtils.compareTo(entry, 0, epsilon) >= 0) {",
        "LINE_NUMBER": 82
    },
    {
        "BUG_ID": "Math_85",
        "FILE_NAME": "UnivariateRealSolverUtils.java",
        "BUGGY_LINE": "if (fa * fb >= 0.0 ) {",
        "LINE_NUMBER": 198
    },
    {
        "BUG_ID": "Math_94",
        "FILE_NAME": "MathUtils.java",
        "BUGGY_LINE": "if (u * v == 0) {",
        "LINE_NUMBER": 412
    },
    {
        "BUG_ID": "Math_104",
        "FILE_NAME": "Gamma.java",
        "BUGGY_LINE": "private static final double DEFAULT_EPSILON = 10e-9;",
        "LINE_NUMBER": 37
    },
    {
        "BUG_ID": "Math_105",
        "FILE_NAME": "SimpleRegression.java",
        "BUGGY_LINE": "return sumYY - sumXY * sumXY / sumXX;",
        "LINE_NUMBER": 264
    },
    {
        "BUG_ID": "Mockito_26",
        "FILE_NAME": "Primitives.java",
        "BUGGY_LINE": "primitiveValues.put(double.class, 0);",
        "LINE_NUMBER": 66
    },
    {
        "BUG_ID": "Mockito_38",
        "FILE_NAME": "ArgumentMatchingTool.java",
        "BUGGY_LINE": "return StringDescription.toString(m).equals(arg.toString());",
        "LINE_NUMBER": 91
    },
    {
        "BUG_ID": "Time_4",
        "FILE_NAME": "Partial.java",
        "BUGGY_LINE": "Partial newPartial = new Partial(iChronology, newTypes, newValues);",
        "LINE_NUMBER": 464
    },
    {
        "BUG_ID": "Time_19",
        "FILE_NAME": "DateTimeZone.java",
        "BUGGY_LINE": "} else if (offsetLocal > 0) {",
        "LINE_NUMBER": 900
    }
]