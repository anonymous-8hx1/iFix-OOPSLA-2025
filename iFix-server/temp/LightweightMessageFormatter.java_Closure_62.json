{
    "src": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
    "patches": [
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.95571754092262,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.92804718017578,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno ) {",
            "score": 99.9146140769676,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.90723528180804,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.90723528180804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.90723528180804,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.90723528180804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.90723528180804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.86170654296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.82915938527961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno ) {",
            "score": 99.8726055438702,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.86913220635776,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.86683391702586,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.86683391702586,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.86683391702586,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.86683391702586,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.86683391702586,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) )",
            "score": 99.84902518136161,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.83462289663461,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.81902204241071,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.79208519345238,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.7741366299716,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno ) {",
            "score": 99.80862559442934,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.77999441964286,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.76813299005681,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.7528076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.81989397321429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno < sourceExcerpt.length( ) ) {",
            "score": 99.80920831088362,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.78243885869566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.85516357421875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.83004445043103,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno < sourceExcerpt.length( ) ) {",
            "score": 99.79637767650463,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.77177097486413,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && sourceExcerpt != null ) {",
            "score": 99.76967210036058,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno ) {",
            "score": 99.76024228050595,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.74219970703125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.81976996527777,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < charno ) {",
            "score": 99.7664325420673,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.73568870907738,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { ) {",
            "score": 99.72205120584239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.6903564453125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.84332906788794,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.81824993265086,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.81824993265086,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.81824993265086,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.81824993265086,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.81824993265086,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.788818359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.72628348214286,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.72169131324405,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.68783569335938,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno && charno < sourceExcerpt.length( ) )",
            "score": 99.80067661830357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.7839988425926,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < source.length( ) ) {",
            "score": 99.78154839409723,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) && charno < source.length( ) ) {",
            "score": 99.74637545072116,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -1) {",
            "score": 99.72388756793478,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.72023411800987,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length < sourceExcerpt.length( ) ) {",
            "score": 99.68453543526786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.76254159432871,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.756005859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= error.length( ) ) {",
            "score": 99.73812161959134,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==0) {",
            "score": 99.7200439453125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) ;",
            "score": 99.71742466517857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) {",
            "score": 99.67822265625,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.82770647321429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.762119140625,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.735810546875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.71682871942934,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno ) {",
            "score": 99.71345738002232,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.7075427827381,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno < charno ) {",
            "score": 99.82745150862068,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.76152692522321,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.7310039813702,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length )",
            "score": 99.70682101779514,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.67752075195312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < charno && charno < charno ) {",
            "score": 99.82227404364224,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.77506229795259,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.76134832974138,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) )",
            "score": 99.75450642903645,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( excerpt.equals( LINE ) &&0<= charno &&0<= charno ) ) {",
            "score": 99.72948201497395,
            "correctness": "plausible",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && 0 <= char@@ no ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.70005580357143,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.69773559570312,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.67549060639881,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno && charno ) {",
            "score": 99.82151636584052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && sourceExcerpt.length( ) )",
            "score": 99.76394127155173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno )",
            "score": 99.7513427734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) &&0<= charno ) {",
            "score": 99.72878793569711,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { ) ;",
            "score": 99.69990871263587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.lineNumber ) {",
            "score": 99.6879650297619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6731844815341,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno &&0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.76149986530173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < excerpt.length( ) ) {",
            "score": 99.75787143049568,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno )",
            "score": 99.74044921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.72705078125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { )",
            "score": 99.69755415482955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.683837890625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < sourceExcerpt ) {",
            "score": 99.80787816540948,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { int charno = charno ;",
            "score": 99.76118687220982,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { int char@@ no = char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && ! charno < sourceExcerpt.length( ) ) {",
            "score": 99.75458441840277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= sourceExcerpt.length( ) )",
            "score": 99.73845305266204,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.72540752704327,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno < sourceExcerpt.length( ) ) {",
            "score": 99.69826253255208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.68798828125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6818359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <= sourceExcerpt.length( ) ) {",
            "score": 99.65587848165761,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ; charno ++ ) {",
            "score": 99.8050390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.75985281808036,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.75985281808036,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.75985281808036,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.75985281808036,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.75985281808036,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.75457974137932,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) -1) {",
            "score": 99.68099312160327,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && true ) {",
            "score": 99.65280018682066,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && true ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( '\\n') ; b.append( '\\n') ;",
            "score": 99.75705482219827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( '| ') ; b.append( '| ') ;",
            "score": 99.75705482219827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( ' ') ; b.append( ' ') ;",
            "score": 99.75705482219827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( '  ') ; b.append( '  ') ;",
            "score": 99.75705482219827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( 'bar') ; b.append( 'bar') ;",
            "score": 99.75705482219827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.75396728515625,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.73221390335648,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.79283728966347,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.75693696120689,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { int charno = error.getCharno( ) ; if( excerpt.equals( LINE ) ) {",
            "score": 99.75197928292411,
            "correctness": "uncompilable",
            "tokenized_patch": ") { int char@@ no = error . get CaMeL Char@@ no ( ) ; if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.72756723257211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < source.length( ) ) {",
            "score": 99.71991436298077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.68941243489583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.67168898809524,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.63787286931819,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno ; charno ++ ) {",
            "score": 99.79221017020089,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.75676163383152,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.75676163383152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.75676163383152,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.75676163383152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.75676163383152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.75188337053571,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) || charno < source.length( ) ) {",
            "score": 99.71299391526442,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) || char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length ) {",
            "score": 99.66985120271382,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length ) {",
            "score": 99.66392758018092,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) {",
            "score": 99.63657836914062,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { b.append( '\\n') ;",
            "score": 99.78923688616071,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { b.append( '| ') ;",
            "score": 99.78923688616071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { b.append( ' ') ;",
            "score": 99.78923688616071,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { b.append( '  ') ;",
            "score": 99.78923688616071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { b.append( 'bar') ;",
            "score": 99.78923688616071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.72392216435185,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( LINE ) ) {",
            "score": 99.712236328125,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0>= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.68055943080357,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.63583772078805,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.7529296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.74667463631465,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) )",
            "score": 99.70723470052083,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno( sourceExcerpt ) ) {",
            "score": 99.70541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) { b.append( '\\n') ;",
            "score": 99.75290352957589,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) { b.append( '| ') ;",
            "score": 99.75290352957589,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) { b.append( ' ') ;",
            "score": 99.75290352957589,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) { b.append( '  ') ;",
            "score": 99.75290352957589,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) { b.append( 'bar') ;",
            "score": 99.75290352957589,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno &&0<= charno ) {",
            "score": 99.74547467912946,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) )",
            "score": 99.70621337890626,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) {",
            "score": 99.70465850830078,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& !0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6776123046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } else { b.append( '\\n') ; } }",
            "score": 99.66693670099431,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } else { b.append( '| ') ; } }",
            "score": 99.66693670099431,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else { b.append( ' ') ; } }",
            "score": 99.66693670099431,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } else { b.append( '  ') ; } }",
            "score": 99.66693670099431,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else { b.append( 'bar') ; } }",
            "score": 99.66693670099431,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= ) {",
            "score": 99.66399825246711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.6325046705163,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno ) { {",
            "score": 99.78562709263393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno > sourceExcerpt.length( ) ) {",
            "score": 99.74547077047414,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) )",
            "score": 99.7052589699074,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > -1) {",
            "score": 99.70228928786058,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ; ) {",
            "score": 99.67655806107955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { {",
            "score": 99.66298217773438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=0) {",
            "score": 99.65802001953125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&( charno < charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.75014311691811,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.74501616379311,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ||0<= sourceExcerpt.length( ) )",
            "score": 99.70299840856481,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < charno ) {",
            "score": 99.70204671223958,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.67502170138889,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.getLength( ) ) {",
            "score": 99.666015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . get CaMeL Length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { { {",
            "score": 99.65499745244566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.7498779296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.74329485212054,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( LINE ) )",
            "score": 99.70262654622395,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&(0<= charno &&0<= charno ) ) {",
            "score": 99.701767578125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && ( 0 <= char@@ no && 0 <= char@@ no ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ; ) {",
            "score": 99.67388305664062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) !=0) {",
            "score": 99.65259399414063,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && true && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6266559103261,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && true && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno && charno ;",
            "score": 99.78004673549107,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno && charno < sourceExcerpt.length( ) )",
            "score": 99.74570649245689,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno && charno < charno ) {",
            "score": 99.74319773706897,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) {",
            "score": 99.70039198133681,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno < sourceExcerpt.length( ) )",
            "score": 99.68824146412037,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) )",
            "score": 99.66339111328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >=0) {",
            "score": 99.650927734375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < charno && charno < charno ) {",
            "score": 99.77936422413794,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '\\n') ; b.append( '\\n') ;",
            "score": 99.7454034213362,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '| ') ; b.append( '| ') ;",
            "score": 99.7454034213362,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( ' ') ; b.append( ' ') ;",
            "score": 99.7454034213362,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '  ') ; b.append( '  ') ;",
            "score": 99.7454034213362,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( 'bar') ; b.append( 'bar') ;",
            "score": 99.7454034213362,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.74279364224138,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.661767578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.64126441592262,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < charno ) {",
            "score": 99.61893503289474,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno && charno ;",
            "score": 99.77838766163794,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.74539620535714,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.74539620535714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.74539620535714,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.74539620535714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.74539620535714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.73996497844827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) {",
            "score": 99.69730318509616,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) >0)",
            "score": 99.679873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.6610797384511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ) {",
            "score": 99.64466768152573,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno && charno < charno && charno < charno && charno < charno ) ) {",
            "score": 99.77658607219827,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&(0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.74457839439656,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < error.length( ) ) {",
            "score": 99.73889612268519,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) >0) {",
            "score": 99.696533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) <=0)",
            "score": 99.6797265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) <= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) > sourceExcerpt.length( ) ) {",
            "score": 99.66011379076087,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= charno ) {",
            "score": 99.64208984375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >1) {",
            "score": 99.63108520507812,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno( ) ) {",
            "score": 99.77349643049568,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.73972865513393,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.73972865513393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.73972865513393,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.73972865513393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.73972865513393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.65981038411458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.lineNumber ) {",
            "score": 99.6547619047619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno || charno < sourceExcerpt.length( ) ) {",
            "score": 99.61559477306548,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.77076037176724,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.73850855334052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.73593575613839,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.691376953125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < error.length( ) && charno < sourceExcerpt.length( ) )",
            "score": 99.67784627278645,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < error . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > ) {",
            "score": 99.63925652754934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==1) {",
            "score": 99.62908935546875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && excerpt.length( ) ) {",
            "score": 99.77065934806035,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } b.append( error.description ) ; b.append( '\\n') ; }",
            "score": 99.73558698381696,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } b.append( error.description ) ; b.append( '| ') ; }",
            "score": 99.73558698381696,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } b.append( error.description ) ; b.append( ' ') ; }",
            "score": 99.73558698381696,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } b.append( error.description ) ; b.append( '  ') ; }",
            "score": 99.73558698381696,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } b.append( error.description ) ; b.append( 'bar') ; }",
            "score": 99.73558698381696,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { b.append( '\\n') ;",
            "score": 99.691259765625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { b.append( '| ') ;",
            "score": 99.691259765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { b.append( ' ') ;",
            "score": 99.691259765625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { b.append( '  ') ;",
            "score": 99.691259765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { b.append( 'bar') ;",
            "score": 99.691259765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) continue ;",
            "score": 99.67777958622685,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != sourceExcerpt.length( ) ) {",
            "score": 99.65696207682292,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) -1) {",
            "score": 99.65065599524456,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.62865048363095,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < source.length( ) ) {",
            "score": 99.60964037024456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ; charno ++ ) {",
            "score": 99.76882934570312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '\\n') ; int charno = error.getCharno( ) ;",
            "score": 99.73503766741071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '| ') ; int charno = error.getCharno( ) ;",
            "score": 99.73503766741071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( ' ') ; int charno = error.getCharno( ) ;",
            "score": 99.73503766741071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '  ') ; int charno = error.getCharno( ) ;",
            "score": 99.73503766741071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( 'bar') ; int charno = error.getCharno( ) ;",
            "score": 99.73503766741071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0< charno ) {",
            "score": 99.68714971127717,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno < charno && charno < charno )",
            "score": 99.6775390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.65678074048913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length ) {",
            "score": 99.62745425575658,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return true ;",
            "score": 99.60525645380434,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return true ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.76667131696429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.73442925347223,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno &&0<= charno &&0<= charno ) {",
            "score": 99.68620499320652,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.67752640335648,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) -1) {",
            "score": 99.64600670855978,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )1) {",
            "score": 99.63483220880681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length ) {",
            "score": 99.62427435980902,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.60365513392857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <11&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.60365513392857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <10&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.60365513392857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <9&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.60365513392857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <2007&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.60365513392857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno &&0) {",
            "score": 99.76369713092673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && !0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.73415798611111,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { int charno = error.getCharno( ) ;",
            "score": 99.7323797817888,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >0) { {",
            "score": 99.68558443509616,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.67623197115384,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( sourceExcerpt.length( ) ) ) {",
            "score": 99.64487092391305,
            "correctness": "plausible",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.634033203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.73406982421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.73225350215517,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.equals( LINE ) ) {",
            "score": 99.6853739420573,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno <0)",
            "score": 99.6757421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.64628770616319,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.60197310014205,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { { b.append( '\\n') ;",
            "score": 99.75970669450432,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { { b.append( '| ') ;",
            "score": 99.75970669450432,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { { b.append( ' ') ;",
            "score": 99.75970669450432,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { { b.append( '  ') ;",
            "score": 99.75970669450432,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { { b.append( 'bar') ;",
            "score": 99.75970669450432,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( LINE ) ;",
            "score": 99.72942243303571,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( LINE ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.6432772549716,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.63154682360198,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length ) {",
            "score": 99.62060546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < charno < sourceExcerpt.length( ) ) {",
            "score": 99.72908809267241,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0<= charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.72874232700893,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0< charno &&0<= charno ) {",
            "score": 99.68308423913044,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 < char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno ;",
            "score": 99.66568697415866,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) < charno ) {",
            "score": 99.6307040127841,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return '\\n';",
            "score": 99.5999172044837,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return '| ';",
            "score": 99.5999172044837,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return ' ';",
            "score": 99.5999172044837,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return '  ';",
            "score": 99.5999172044837,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return 'bar';",
            "score": 99.5999172044837,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < charno && charno < charno ; charno ++ ) {",
            "score": 99.75714111328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.length( ) >0)",
            "score": 99.66567201967592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.lineNumber ) {",
            "score": 99.64165969122024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0< charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.63611370584239,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && false < sourceExcerpt.length( ) ) {",
            "score": 99.62839965820312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.61789772727273,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno ) {",
            "score": 99.59816080729166,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < charno && charno < charno ;",
            "score": 99.75633021763393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno &&0< charno && charno < sourceExcerpt.length( ) )",
            "score": 99.72787039620536,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < charno && charno < charno )",
            "score": 99.66492716471355,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -1) {",
            "score": 99.63642035590277,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( ) ) {",
            "score": 99.61692979600694,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.75617086476294,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < error.length( ) ) {",
            "score": 99.72522393588362,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && '\\n'.length( ) ) {",
            "score": 99.67636108398438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && '| '.length( ) ) {",
            "score": 99.67636108398438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && ' '.length( ) ) {",
            "score": 99.67636108398438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && '  '.length( ) ) {",
            "score": 99.67636108398438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && 'bar'.length( ) ) {",
            "score": 99.67636108398438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno < charno && charno < charno ) {",
            "score": 99.66153658353366,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.63557264539931,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! charno < sourceExcerpt.length( ) ) {",
            "score": 99.61601118607955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >2) {",
            "score": 99.59599609375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >11) {",
            "score": 99.59599609375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >10) {",
            "score": 99.59599609375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >9) {",
            "score": 99.59599609375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >2007) {",
            "score": 99.59599609375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { b.append( '\\n') ; }",
            "score": 99.75540476831897,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { b.append( '| ') ; }",
            "score": 99.75540476831897,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { b.append( ' ') ; }",
            "score": 99.75540476831897,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { b.append( '  ') ; }",
            "score": 99.75540476831897,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { b.append( 'bar') ; }",
            "score": 99.75540476831897,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno && charno < charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.72719389816811,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } b.append( '\\n') ; if( sourceExcerpt != null ) {",
            "score": 99.72316136853448,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; if ( source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; } b.append( '| ') ; if( sourceExcerpt != null ) {",
            "score": 99.72316136853448,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; if ( source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } b.append( ' ') ; if( sourceExcerpt != null ) {",
            "score": 99.72316136853448,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; if ( source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; } b.append( '  ') ; if( sourceExcerpt != null ) {",
            "score": 99.72316136853448,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; if ( source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } b.append( 'bar') ; if( sourceExcerpt != null ) {",
            "score": 99.72316136853448,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; if ( source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < charno && charno < charno ) {",
            "score": 99.66134765625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.6333240327381,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt.length( )( ) ) ) {",
            "score": 99.6312109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { ) {",
            "score": 99.62340727306548,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt.length ) ) {",
            "score": 99.61535063244048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) {",
            "score": 99.75420851934524,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && sourceExcerpt.equals( LINE ) ) {",
            "score": 99.72060210129311,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( LINE ) ) {",
            "score": 99.674921875,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0== charno && charno < sourceExcerpt.length( ) )",
            "score": 99.6610107421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6305078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && sourceExcerpt.length( ) ) {",
            "score": 99.6231105638587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.5927734375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length( ) ) { }",
            "score": 99.75324959590517,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.7253838900862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.7253838900862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.7253838900862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.7253838900862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.7253838900862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno && ) {",
            "score": 99.67464192708333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.65782335069444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )( ) )",
            "score": 99.63037109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.59211077008929,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno < charno && charno < charno && charno < charno ) {",
            "score": 99.75291285021552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno < sourceExcerpt.length( ) )",
            "score": 99.72508893694196,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno && error.length( ) ) {",
            "score": 99.71985284213362,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ||0<= charno ) {",
            "score": 99.67412860576923,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0>= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.6575927734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == sourceExcerpt.length( ) ) {",
            "score": 99.62705485026042,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length ) {",
            "score": 99.61271837022569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) {",
            "score": 99.59164574032738,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < charno ; charno ++ ) {",
            "score": 99.74905056423611,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( charno < charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.72478376116071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < charno && charno < source.length( ) ) {",
            "score": 99.71983119419643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno ) )",
            "score": 99.67246942934783,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < error.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.657080078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < error . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.62397693452381,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && ! sourceExcerpt.length( ) ) {",
            "score": 99.71974339978448,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) && charno > source.length( ) ) {",
            "score": 99.67222243088942,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) && char@@ no > source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( ) )",
            "score": 99.6569091796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.lineNumber ) {",
            "score": 99.62261672247024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) < charno ) {",
            "score": 99.62058423913044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.60877749794408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.588134765625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno && charno ) {",
            "score": 99.74858036747685,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno && charno < sourceExcerpt.length( ) )",
            "score": 99.7236328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )",
            "score": 99.67184287623355,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= sourceExcerpt.length( ) )",
            "score": 99.65639860733695,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ;",
            "score": 99.62214965820313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length -1) {",
            "score": 99.62029157366071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != null ) {",
            "score": 99.60710906982422,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno <0) {",
            "score": 99.58740234375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { b.append( '\\n') ;",
            "score": 99.74679904513889,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { b.append( '| ') ;",
            "score": 99.74679904513889,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { b.append( ' ') ;",
            "score": 99.74679904513889,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { b.append( '  ') ;",
            "score": 99.74679904513889,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { b.append( 'bar') ;",
            "score": 99.74679904513889,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < sourceExcerpt.length( ) )",
            "score": 99.72071154364224,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && !0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.718994140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) && excerpt.equals( LINE ) ) {",
            "score": 99.67142427884616,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.length( ) <=0)",
            "score": 99.65606011284723,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno & charno < sourceExcerpt.length( ) ) {",
            "score": 99.6199239095052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no & char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && && charno < sourceExcerpt.length( ) ) {",
            "score": 99.61960671164773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } else { b.append( '\\n') ; }",
            "score": 99.61903599330357,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } else { b.append( '| ') ; }",
            "score": 99.61903599330357,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else { b.append( ' ') ; }",
            "score": 99.61903599330357,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } else { b.append( '  ') ; }",
            "score": 99.61903599330357,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else { b.append( 'bar') ; }",
            "score": 99.61903599330357,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6053133877841,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.74493408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.72059849330357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno == sourceExcerpt.length( ) ) {",
            "score": 99.71898572198276,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < LINE2) {",
            "score": 99.66962139423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < LINE $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < LINE11) {",
            "score": 99.66962139423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < LINE $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < LINE10) {",
            "score": 99.66962139423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < LINE $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < LINE9) {",
            "score": 99.66962139423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < LINE $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < LINE2007) {",
            "score": 99.66962139423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < LINE $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.65475802951389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( )( ) ) {",
            "score": 99.61862049932066,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) *2) {",
            "score": 99.61685844089673,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) *11) {",
            "score": 99.61685844089673,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) *10) {",
            "score": 99.61685844089673,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) *9) {",
            "score": 99.61685844089673,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) *2007) {",
            "score": 99.61685844089673,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <= charno && charno < sourceExcerpt.length ) {",
            "score": 99.5830078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.71969168526786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno &&0<= charno &&0<= charno ) {",
            "score": 99.66951851222827,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno ) ;",
            "score": 99.61861746651786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6175204190341,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==2) {",
            "score": 99.60390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==11) {",
            "score": 99.60390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==10) {",
            "score": 99.60390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==9) {",
            "score": 99.60390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==2007) {",
            "score": 99.60390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) != sourceExcerpt.length( ) ) {",
            "score": 99.58225416100544,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.71918402777777,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.71918402777777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.71918402777777,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.71918402777777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.71918402777777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.7175713900862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >1) {",
            "score": 99.66828125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) <=0) {",
            "score": 99.65359262319711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= ) {",
            "score": 99.61826685855263,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length ) {",
            "score": 99.61549778988487,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) /2) {",
            "score": 99.61527683423913,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "1"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) /11) {",
            "score": 99.61527683423913,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) /10) {",
            "score": 99.61527683423913,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) /9) {",
            "score": 99.61527683423913,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) /2007) {",
            "score": 99.61527683423913,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0!= charno && charno < sourceExcerpt.length ) {",
            "score": 99.60109349300987,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) {",
            "score": 99.58221076516544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && && charno < sourceExcerpt.length( ) ) {",
            "score": 99.74074009486607,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source , charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.7189520474138,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source , char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( '\\n') ) {",
            "score": 99.666396484375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( '| ') ) {",
            "score": 99.666396484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( ' ') ) {",
            "score": 99.666396484375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( '  ') ) {",
            "score": 99.666396484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( 'bar') ) {",
            "score": 99.666396484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( )( ) )",
            "score": 99.65286820023148,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < ) {",
            "score": 99.61662212171052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '\\n') ; }",
            "score": 99.61469060724431,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '| ') ; }",
            "score": 99.61469060724431,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( ' ') ; }",
            "score": 99.61469060724431,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '  ') ; }",
            "score": 99.61469060724431,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( 'bar') ; }",
            "score": 99.61469060724431,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( sourceExcerpt ) ) {",
            "score": 99.61372707201087,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <0) {",
            "score": 99.60093336838942,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )( charno < charno ) ) {",
            "score": 99.74049595424107,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( char@@ no < char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( '\\n') ; b.append( '\\n') ;",
            "score": 99.71861530172414,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( '| ') ; b.append( '| ') ;",
            "score": 99.71861530172414,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( ' ') ; b.append( ' ') ;",
            "score": 99.71861530172414,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( '  ') ; b.append( '  ') ;",
            "score": 99.71861530172414,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( 'bar') ; b.append( 'bar') ;",
            "score": 99.71861530172414,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !(0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.71621598868535,
            "correctness": "wrong",
            "tokenized_patch": "&& ! ( 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { {",
            "score": 99.65210678998162,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { }",
            "score": 99.6164883700284,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.61434173583984,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && source.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.61239624023438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length ) {",
            "score": 99.58051500822368,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno( charno ) ) {",
            "score": 99.73896484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( '\\n') ;",
            "score": 99.71739366319444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( '| ') ;",
            "score": 99.71739366319444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( ' ') ;",
            "score": 99.71739366319444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( '  ') ;",
            "score": 99.71739366319444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( 'bar') ;",
            "score": 99.71739366319444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < charno && charno < error.length( ) ) {",
            "score": 99.71555001395089,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.6500713641827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.lineNumber( ) ) {",
            "score": 99.61372707201087,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && false ) {",
            "score": 99.58022673233695,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno < charno ) { {",
            "score": 99.73794991629464,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) { b.append( '\\n') ; }",
            "score": 99.7172430630388,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) { b.append( '| ') ; }",
            "score": 99.7172430630388,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) { b.append( ' ') ; }",
            "score": 99.7172430630388,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) { b.append( '  ') ; }",
            "score": 99.7172430630388,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) { b.append( 'bar') ; }",
            "score": 99.7172430630388,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) { }",
            "score": 99.64914279513889,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && this.charno < sourceExcerpt.length( ) ) {",
            "score": 99.61524498980978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && this . char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.get( ).length( ) ) {",
            "score": 99.60896484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . get ( ) . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59724934895833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno( ) ) {",
            "score": 99.73716517857143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( sourceExcerpt ) ;",
            "score": 99.71699580439815,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt != null ) {",
            "score": 99.66181873139881,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0< sourceExcerpt.length( ) )",
            "score": 99.64594184027777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.60891723632812,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&(0<= charno && sourceExcerpt.length( ) ) ) {",
            "score": 99.59409790039062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.57758123224431,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno && {",
            "score": 99.73690682870371,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.71607462565105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.71607462565105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.71607462565105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.71607462565105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.71607462565105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno > sourceExcerpt.equals( LINE ) ) {",
            "score": 99.71014614762932,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < LINE ) {",
            "score": 99.6602734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.64511899594908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != ) {",
            "score": 99.61441843133224,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) -1) {",
            "score": 99.6106487771739,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5927001953125,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) { }",
            "score": 99.73624965122768,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0< charno && sourceExcerpt.length( ) ) {",
            "score": 99.71530677532327,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } else if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.7093505859375,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; } else if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.7093505859375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.7093505859375,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; } else if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.7093505859375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.7093505859375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) ==0)",
            "score": 99.64494140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) == 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.61285109747024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.5913330078125,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno ) { {",
            "score": 99.73611111111111,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.70874895368304,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.65960223858173,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '\\n') && charno < sourceExcerpt.length( ) )",
            "score": 99.64427693684895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '| ') && charno < sourceExcerpt.length( ) )",
            "score": 99.64427693684895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( ' ') && charno < sourceExcerpt.length( ) )",
            "score": 99.64427693684895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '  ') && charno < sourceExcerpt.length( ) )",
            "score": 99.64427693684895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( 'bar') && charno < sourceExcerpt.length( ) )",
            "score": 99.64427693684895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) )",
            "score": 99.60990600585937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.60348510742188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length )",
            "score": 99.59064398871527,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno < charno ) {",
            "score": 99.73598451967592,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno < charno &&0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.71486900592673,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && ! charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.7081298828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.64399775752315,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && true < sourceExcerpt.length( ) ) {",
            "score": 99.61118774414062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && true < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( '\\n') ; } else { b.append( '\\n') ; }",
            "score": 99.608154296875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( '| ') ; } else { b.append( '| ') ; }",
            "score": 99.608154296875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( ' ') ; } else { b.append( ' ') ; }",
            "score": 99.608154296875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( '  ') ; } else { b.append( '  ') ; }",
            "score": 99.608154296875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( 'bar') ; } else { b.append( 'bar') ; }",
            "score": 99.608154296875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < || charno < sourceExcerpt.length( ) ) {",
            "score": 99.60306640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&(0< sourceExcerpt.length( ) ) ) {",
            "score": 99.58941095525569,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && ( 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && false && charno < sourceExcerpt.length( ) ) {",
            "score": 99.57137398097827,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.71423760775862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ] ) {",
            "score": 99.70777271412037,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ] ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '\\n') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.65822265625,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '| ') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.65822265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( ' ') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.65822265625,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '  ') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.65822265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( 'bar') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.65822265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.64369506835938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && || charno < sourceExcerpt.length( ) ) {",
            "score": 99.61057350852273,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <0) {",
            "score": 99.5886474609375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >= sourceExcerpt.length( ) ) {",
            "score": 99.57133152173913,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno ; ) {",
            "score": 99.73000662667411,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.71403899016204,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.71403899016204,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.71403899016204,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.71403899016204,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.71403899016204,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( error.description ) ; b.append( '\\n') ; } }",
            "score": 99.70745849609375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( error.description ) ; b.append( '| ') ; } }",
            "score": 99.70745849609375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( error.description ) ; b.append( ' ') ; } }",
            "score": 99.70745849609375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( error.description ) ; b.append( '  ') ; } }",
            "score": 99.70745849609375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( error.description ) ; b.append( 'bar') ; } }",
            "score": 99.70745849609375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0> charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6575927734375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( LINE ) )",
            "score": 99.64337158203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length ) {",
            "score": 99.60674727590461,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.60237260298295,
            "correctness": "uncompilable",
            "tokenized_patch": "&& && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) ;",
            "score": 99.58749229029605,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno ;",
            "score": 99.72947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.71336206896552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ] ) {",
            "score": 99.70735386439732,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ] ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { b.append( '\\n') ; }",
            "score": 99.6571514423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { b.append( '| ') ; }",
            "score": 99.6571514423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { b.append( ' ') ; }",
            "score": 99.6571514423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { b.append( '  ') ; }",
            "score": 99.6571514423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { b.append( 'bar') ; }",
            "score": 99.6571514423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) || charno < sourceExcerpt.length( ) )",
            "score": 99.64255099826389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) )",
            "score": 99.606494140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno + charno < sourceExcerpt.length( ) ) {",
            "score": 99.60208129882812,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no + char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&(0< charno && charno < sourceExcerpt.length ) ) {",
            "score": 99.58727446056548,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) && charno < charno ) {",
            "score": 99.72766985212054,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.71223667689732,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.71223667689732,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.71223667689732,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.71223667689732,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.71223667689732,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& b.equals( '\\n') &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.70631626674107,
            "correctness": "wrong",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& b.equals( '| ') &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.70631626674107,
            "correctness": "uncompilable",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& b.equals( ' ') &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.70631626674107,
            "correctness": "wrong",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& b.equals( '  ') &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.70631626674107,
            "correctness": "uncompilable",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& b.equals( 'bar') &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.70631626674107,
            "correctness": "uncompilable",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.65647536057692,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) &&0<= sourceExcerpt.length( ) )",
            "score": 99.64244666466347,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.60460844494048,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) ) {",
            "score": 99.58681126644737,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno && sourceExcerpt.length( ) >0) {",
            "score": 99.71149313038794,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.7053643588362,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno >0) {",
            "score": 99.65518892728366,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno < sourceExcerpt.length( ) )",
            "score": 99.6424051920573,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <1&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.561279296875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 1 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno ) { }",
            "score": 99.72591727120536,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.71060917295259,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.71060917295259,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.71060917295259,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.71060917295259,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.71060917295259,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= ! charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.703369140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ! char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && sourceExcerpt.length( ) < charno ) {",
            "score": 99.65465369591347,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.6418965657552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) >0) {",
            "score": 99.59954279119319,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.58437628495066,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= 0 && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.72489711216518,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && charno < sourceExcerpt.length( ) )",
            "score": 99.709716796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.70205583243535,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno <0)",
            "score": 99.64170328776042,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.sourceExcerpt.length( ) ) {",
            "score": 99.60233931107955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno - charno < sourceExcerpt.length( ) ) {",
            "score": 99.59881591796875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no - char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.58354259672619,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return null ;",
            "score": 99.56070609714673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return null ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < charno && charno < charno < charno ) {",
            "score": 99.72412109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno &&0<= charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.70911516462054,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && excerpt.equals( LINE ) ) {",
            "score": 99.70077912703805,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= sourceExcerpt.length( ) ) { {",
            "score": 99.65301044170673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source , sourceExcerpt.length( ) ) {",
            "score": 99.60782523777173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source , source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } else { b.append( ) ; } } else {",
            "score": 99.6018703294837,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } else { b.append( ) ; } } else {",
            "score": 99.6018703294837,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else { b.append( ) ; } } else {",
            "score": 99.6018703294837,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } else { b.append( ) ; } } else {",
            "score": 99.6018703294837,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else { b.append( ) ; } } else {",
            "score": 99.6018703294837,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < charno < sourceExcerpt.length( ) ) {",
            "score": 99.5975341796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '\\n') ; b.append( '\\n') ;",
            "score": 99.72310697115384,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '| ') ; b.append( '| ') ;",
            "score": 99.72310697115384,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( ' ') ; b.append( ' ') ;",
            "score": 99.72310697115384,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '  ') ; b.append( '  ') ;",
            "score": 99.72310697115384,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( 'bar') ; b.append( 'bar') ;",
            "score": 99.72310697115384,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.70831088362068,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno != sourceExcerpt.length( ) ) {",
            "score": 99.70075094288794,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.63988240559895,
            "correctness": "plausible",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<=0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.60108483355978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) ;",
            "score": 99.58102077907986,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt ) {",
            "score": 99.56056810461956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { else b.append( '\\n') ;",
            "score": 99.70808358028017,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { else b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { else b.append( '| ') ;",
            "score": 99.70808358028017,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { else b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { else b.append( ' ') ;",
            "score": 99.70808358028017,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { else b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { else b.append( '  ') ;",
            "score": 99.70808358028017,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { else b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { else b.append( 'bar') ;",
            "score": 99.70808358028017,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { else b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno < sourceExcerpt.length ) {",
            "score": 99.698720703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.6398174579327,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno < sourceExcerpt.length( ) ) {",
            "score": 99.60092342601104,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.59618030894886,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.70750269396552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ; if( excerpt.equals( LINE ) &&0<= charno ) {",
            "score": 99.6484883626302,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ; if ( ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { ) }",
            "score": 99.60176418138587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ; else {",
            "score": 99.59953169389205,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0== sourceExcerpt.length( ) ) {",
            "score": 99.57845458984374,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length <= sourceExcerpt.length( ) ) {",
            "score": 99.55840773809524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < charno && charno ) {",
            "score": 99.72198016826923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= charno ) {",
            "score": 99.64488002232143,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.length( ) <= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.63796762319711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -1)",
            "score": 99.5994540127841,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.59431258491848,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.57752075195313,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < charno ) {",
            "score": 99.55705823396382,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno && ) {",
            "score": 99.72120012555804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < charno && sourceExcerpt.length( ) )",
            "score": 99.70717947823661,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno &&0<= charno && charno < charno )",
            "score": 99.63787109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && 0 <= char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.sourceExcerpt.length( ) ) {",
            "score": 99.60021441915761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno + sourceExcerpt.length( ) >0) {",
            "score": 99.59923785665761,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no + source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.59386189778645,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.57681613498264,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && true )",
            "score": 99.55637428977273,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && true )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno > ) {",
            "score": 99.7201171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { } b.append( '\\n') ;",
            "score": 99.70712385506465,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { } b.append( '| ') ;",
            "score": 99.70712385506465,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { } b.append( ' ') ;",
            "score": 99.70712385506465,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { } b.append( '  ') ;",
            "score": 99.70712385506465,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { } b.append( 'bar') ;",
            "score": 99.70712385506465,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.equals( '\\n') ) {",
            "score": 99.64357503255208,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.equals( '| ') ) {",
            "score": 99.64357503255208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.equals( ' ') ) {",
            "score": 99.64357503255208,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.equals( '  ') ) {",
            "score": 99.64357503255208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.equals( 'bar') ) {",
            "score": 99.64357503255208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.63783616286058,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length ) {",
            "score": 99.59878058182566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ||0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59352805397727,
            "correctness": "uncompilable",
            "tokenized_patch": "&& || 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.57671508789062,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < sourceExcerpt ;",
            "score": 99.71943010602679,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( )( ) )",
            "score": 99.70705740792411,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= charno &&0<= charno ) {",
            "score": 99.6431133563702,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0> charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.63779477719908,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) +1) {",
            "score": 99.59836744225544,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < this.sourceExcerpt.length( ) ) {",
            "score": 99.59824006453805,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno > sourceExcerpt.length( ) ) ) {",
            "score": 99.59218962296195,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0>= sourceExcerpt.length( ) ) {",
            "score": 99.57625122070313,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || true ) {",
            "score": 99.55506963315217,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || true ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && ! charno < sourceExcerpt.length( ) ) {",
            "score": 99.71705845424107,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.70641668911638,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.70641668911638,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.70641668911638,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.70641668911638,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.70641668911638,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno <= sourceExcerpt.length( ) ) {",
            "score": 99.69422649515086,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0< charno && sourceExcerpt.length( ) < charno ) {",
            "score": 99.64296311598558,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno ) { {",
            "score": 99.5975674715909,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ).length( ) ) {",
            "score": 99.589951171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=1) {",
            "score": 99.57572021484376,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) - ) {",
            "score": 99.55427689985795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno && charno < sourceExcerpt.length( ) )",
            "score": 99.70480872844827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) -1) {",
            "score": 99.69370814732143,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.6412353515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( sourceExcerpt.toString( ) ) ) {",
            "score": 99.589912109375,
            "correctness": "wrong",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=0&&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.57548384232955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <=0) {",
            "score": 99.55425734747024,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno &&0<= charno && charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.70397528286638,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { if( excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.69291469029018,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6409912109375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && '\\n'<= sourceExcerpt.length( ) )",
            "score": 99.63502785011575,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && '| '<= sourceExcerpt.length( ) )",
            "score": 99.63502785011575,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ' '<= sourceExcerpt.length( ) )",
            "score": 99.63502785011575,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && '  '<= sourceExcerpt.length( ) )",
            "score": 99.63502785011575,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && 'bar'<= sourceExcerpt.length( ) )",
            "score": 99.63502785011575,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == sourceExcerpt.length( ) ) {",
            "score": 99.59703063964844,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.574951171875,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { &&",
            "score": 99.5538662997159,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno ; ) {",
            "score": 99.71438259548611,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.70047312769397,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno <0) {",
            "score": 99.6916015625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) { b.append( '\\n') ;",
            "score": 99.63950602213542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) { b.append( '| ') ;",
            "score": 99.63950602213542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) { b.append( ' ') ;",
            "score": 99.63950602213542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) { b.append( '  ') ;",
            "score": 99.63950602213542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) { b.append( 'bar') ;",
            "score": 99.63950602213542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.63454861111111,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '\\n') ; } else { { b.append( '\\n') ; }",
            "score": 99.5968905362216,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; } else { { b.append( '| ') ; }",
            "score": 99.5968905362216,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else { { b.append( ' ') ; }",
            "score": 99.5968905362216,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; } else { { b.append( '  ') ; }",
            "score": 99.5968905362216,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else { { b.append( 'bar') ; }",
            "score": 99.5968905362216,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return '\\n'; }",
            "score": 99.5886328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return $STRING$ ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return '| '; }",
            "score": 99.5886328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return $STRING$ ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return ' '; }",
            "score": 99.5886328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return $STRING$ ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return '  '; }",
            "score": 99.5886328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return $STRING$ ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return 'bar'; }",
            "score": 99.5886328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return $STRING$ ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.57239990234375,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) continue ;",
            "score": 99.5537442294034,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno ; charno ++ ) {",
            "score": 99.71323067801339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { if( charno <0) {",
            "score": 99.69988382273706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { if ( char@@ no < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) <= charno ) {",
            "score": 99.638671875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.charCount( ) ) {",
            "score": 99.5869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . char CaMeL Count ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) {",
            "score": 99.57211483226104,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && && charno < sourceExcerpt.length( ) ) {",
            "score": 99.55339249320652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < LINE ) {",
            "score": 99.71205491286058,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) >0) b.append( '\\n') ;",
            "score": 99.6996649380388,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) >0) b.append( '| ') ;",
            "score": 99.6996649380388,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) >0) b.append( ' ') ;",
            "score": 99.6996649380388,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) >0) b.append( '  ') ;",
            "score": 99.6996649380388,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) >0) b.append( 'bar') ;",
            "score": 99.6996649380388,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&1<= charno ) {",
            "score": 99.63825789741848,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 1 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { ).",
            "score": 99.59521484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) .",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0: charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58599562872024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 : char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.57032412574405,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { b.append( '\\n') ; }",
            "score": 99.71143450055804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { b.append( '| ') ; }",
            "score": 99.71143450055804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { b.append( ' ') ; }",
            "score": 99.71143450055804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { b.append( '  ') ; }",
            "score": 99.71143450055804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { b.append( 'bar') ; }",
            "score": 99.71143450055804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno > -1) {",
            "score": 99.69009512442129,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( error.description ) ; b.append( '\\n') ;",
            "score": 99.63804274338942,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( error.description ) ; b.append( '| ') ;",
            "score": 99.63804274338942,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( error.description ) ; b.append( ' ') ;",
            "score": 99.63804274338942,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( error.description ) ; b.append( '  ') ;",
            "score": 99.63804274338942,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( error.description ) ; b.append( 'bar') ;",
            "score": 99.63804274338942,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( LINE ) && charno < sourceExcerpt.length( ) )",
            "score": 99.63238994891827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.59491257440476,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.58483305431548,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < ) {",
            "score": 99.710458984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.63785494290866,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno < sourceExcerpt.length( ) )",
            "score": 99.6323772927989,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -2) {",
            "score": 99.5916164232337,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -11) {",
            "score": 99.5916164232337,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -10) {",
            "score": 99.5916164232337,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -9) {",
            "score": 99.5916164232337,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -2007) {",
            "score": 99.5916164232337,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) &&",
            "score": 99.5690185546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno <0) {",
            "score": 99.70720966045673,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.69827706473214,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( '\\n') ; }",
            "score": 99.68897356305804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( '| ') ; }",
            "score": 99.68897356305804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( ' ') ; }",
            "score": 99.68897356305804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( '  ') ; }",
            "score": 99.68897356305804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( 'bar') ; }",
            "score": 99.68897356305804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < charno ) )",
            "score": 99.63661545973558,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.63097205528847,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.59023902529762,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == null ) {",
            "score": 99.56893920898438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source = charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.69703832165948,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source = char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.length( ) ==0)",
            "score": 99.63087745949075,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { {",
            "score": 99.59190784801136,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < charno )",
            "score": 99.5482867697011,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) { ;",
            "score": 99.70524379185268,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& !( charno &&0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.68825050636575,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! ( char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( '\\n') ) {",
            "score": 99.634609375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( '| ') ) {",
            "score": 99.634609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( ' ') ) {",
            "score": 99.634609375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( '  ') ) {",
            "score": 99.634609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( 'bar') ) {",
            "score": 99.634609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) >=0)",
            "score": 99.630771484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) >= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >0)",
            "score": 99.5672543174342,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < sourceExcerpt.length )",
            "score": 99.54797894021739,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '\\n') ; b.append( error.description ) ;",
            "score": 99.7052001953125,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '| ') ; b.append( error.description ) ;",
            "score": 99.7052001953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( ' ') ; b.append( error.description ) ;",
            "score": 99.7052001953125,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '  ') ; b.append( error.description ) ;",
            "score": 99.7052001953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( 'bar') ; b.append( error.description ) ;",
            "score": 99.7052001953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.69619315011161,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.69619315011161,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.69619315011161,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.69619315011161,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.69619315011161,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } else if( excerpt.equals( LINE ) ) {",
            "score": 99.68764241536458,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; } else if( excerpt.equals( LINE ) ) {",
            "score": 99.68764241536458,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else if( excerpt.equals( LINE ) ) {",
            "score": 99.68764241536458,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; } else if( excerpt.equals( LINE ) ) {",
            "score": 99.68764241536458,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else if( excerpt.equals( LINE ) ) {",
            "score": 99.68764241536458,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.63436185396634,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.63000036168981,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < ! sourceExcerpt.length( ) ) {",
            "score": 99.58978826349431,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno( sourceExcerpt.length( ) ) ) {",
            "score": 99.58216796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length( ) ) ;",
            "score": 99.5666271391369,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0> sourceExcerpt.length( ) ) {",
            "score": 99.54754638671875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno < charno ) {",
            "score": 99.70361328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return b.append( '\\n') ;",
            "score": 99.69614083426339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return b.append( '| ') ;",
            "score": 99.69614083426339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return b.append( ' ') ;",
            "score": 99.69614083426339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return b.append( '  ') ;",
            "score": 99.69614083426339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return b.append( 'bar') ;",
            "score": 99.69614083426339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.68747474407327,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { append( '\\n') ;",
            "score": 99.63428673377403,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { append( '| ') ;",
            "score": 99.63428673377403,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { append( ' ') ;",
            "score": 99.63428673377403,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { append( '  ') ;",
            "score": 99.63428673377403,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { append( 'bar') ;",
            "score": 99.63428673377403,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= charno ) {",
            "score": 99.58975074404762,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( ) ; }",
            "score": 99.58702021059783,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0> charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.58206309442934,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&(0< charno && sourceExcerpt.length( ) ) ) {",
            "score": 99.56646118164062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=2) {",
            "score": 99.54683227539063,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=11) {",
            "score": 99.54683227539063,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=10) {",
            "score": 99.54683227539063,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=9) {",
            "score": 99.54683227539063,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=2007) {",
            "score": 99.54683227539063,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && ! charno < charno ) {",
            "score": 99.70278494698661,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && ! char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '\\n') ; } else { b.append( '\\n') ; }",
            "score": 99.69459885817308,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '| ') ; } else { b.append( '| ') ; }",
            "score": 99.69459885817308,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( ' ') ; } else { b.append( ' ') ; }",
            "score": 99.69459885817308,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '  ') ; } else { b.append( '  ') ; }",
            "score": 99.69459885817308,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( 'bar') ; } else { b.append( 'bar') ; }",
            "score": 99.69459885817308,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.68721064814815,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.toString( ) ) {",
            "score": 99.58650008491848,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0, charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5820079985119,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 , char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( charno < sourceExcerpt.length ) ) {",
            "score": 99.56624348958333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && excerpt.length( ) ) {",
            "score": 99.70278494698661,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.6944580078125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno > sourceExcerpt.length( ) ) {",
            "score": 99.68684334590517,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) ==0) {",
            "score": 99.63181640625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno == charno && charno < sourceExcerpt.length( ) )",
            "score": 99.6279529389881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) ;",
            "score": 99.58881170099431,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58033203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) ==0) {",
            "score": 99.56578979492187,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno( sourceExcerpt ) ) {",
            "score": 99.70043073381696,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0<= charno && charno && charno < sourceExcerpt.length( ) )",
            "score": 99.69301576967592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.68667497306035,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58428400213069,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >0) ;",
            "score": 99.56383056640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno <0) {",
            "score": 99.5448062294408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && && charno < charno && charno < charno && charno < charno ) {",
            "score": 99.70001220703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { char charno = error.getCharno( ) ; if( excerpt.equals( LINE ) ) {",
            "score": 99.68641008649554,
            "correctness": "uncompilable",
            "tokenized_patch": ") { char char@@ no = error . get CaMeL Char@@ no ( ) ; if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < source.length( ) ) {",
            "score": 99.6309481534091,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length ) {",
            "score": 99.58846242804276,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( '\\n') ; } else { b.append( '\\n') ; } }",
            "score": 99.58312457540761,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( '| ') ; } else { b.append( '| ') ; } }",
            "score": 99.58312457540761,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( ' ') ; } else { b.append( ' ') ; } }",
            "score": 99.58312457540761,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( '  ') ; } else { b.append( '  ') ; } }",
            "score": 99.58312457540761,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( 'bar') ; } else { b.append( 'bar') ; } }",
            "score": 99.58312457540761,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source != null && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5780859375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source != null && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >=1) {",
            "score": 99.56381225585938,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return ) ;",
            "score": 99.54477326766305,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) { try {",
            "score": 99.69216392780173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { try {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0<= charno && charno < charno )",
            "score": 99.62779744466145,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 <= char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno == sourceExcerpt.length( ) ) ) {",
            "score": 99.5828167459239,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( sourceExcerpt ) ; b.append( '\\n') ;",
            "score": 99.69894845145089,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( sourceExcerpt ) ; b.append( '| ') ;",
            "score": 99.69894845145089,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( sourceExcerpt ) ; b.append( ' ') ;",
            "score": 99.69894845145089,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( sourceExcerpt ) ; b.append( '  ') ;",
            "score": 99.69894845145089,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( sourceExcerpt ) ; b.append( 'bar') ;",
            "score": 99.69894845145089,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( LINE ) ; }",
            "score": 99.69085903825432,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( LINE ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( )( ) <=0)",
            "score": 99.62764033564815,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) ( ) <= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno ;",
            "score": 99.6275967684659,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { ) ;",
            "score": 99.58759998139881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno & sourceExcerpt.length( ) >0) {",
            "score": 99.57704228940217,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no & source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= != charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56272194602273,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && && charno < charno && charno < charno && charno < charno ) {",
            "score": 99.69843207465277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '\\n') ; } else {",
            "score": 99.69066510881696,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '| ') ; } else {",
            "score": 99.69066510881696,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( ' ') ; } else {",
            "score": 99.69066510881696,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '  ') ; } else {",
            "score": 99.69066510881696,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( 'bar') ; } else {",
            "score": 99.69066510881696,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& b.equals( LINE ) &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.68457903180804,
            "correctness": "wrong",
            "tokenized_patch": "&& b . equals ( LINE ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.627236328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )( ) ) ;",
            "score": 99.58708389945652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno( charno ) ) {",
            "score": 99.69749232700893,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( )",
            "score": 99.6270751953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < sourceExcerpt.length( ) ) {",
            "score": 99.626953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != sourceExcerpt.length( ) ) {",
            "score": 99.57685852050781,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) )",
            "score": 99.56008731617646,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2<= sourceExcerpt.length( ) ) {",
            "score": 99.54230346679688,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&11<= sourceExcerpt.length( ) ) {",
            "score": 99.54230346679688,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&10<= sourceExcerpt.length( ) ) {",
            "score": 99.54230346679688,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&9<= sourceExcerpt.length( ) ) {",
            "score": 99.54230346679688,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&2007<= sourceExcerpt.length( ) ) {",
            "score": 99.54230346679688,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno < ) {",
            "score": 99.69746616908482,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0&& charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.69005926724138,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.6270703125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.lineNumber )",
            "score": 99.57666625976563,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.57484019886364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0!= sourceExcerpt.length( ) ) {",
            "score": 99.55941162109374,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return false ;",
            "score": 99.5419921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return false ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno > ) {",
            "score": 99.69746616908482,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.69000875538794,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) continue ;",
            "score": 99.6820068359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno <= sourceExcerpt.length( ) )",
            "score": 99.62196180555556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.57457965353261,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) !=1) {",
            "score": 99.5589111328125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else { b.append( '\\n') ; }",
            "score": 99.69621672453704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else { b.append( '| ') ; }",
            "score": 99.69621672453704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else { b.append( ' ') ; }",
            "score": 99.69621672453704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else { b.append( '  ') ; }",
            "score": 99.69621672453704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else { b.append( 'bar') ; }",
            "score": 99.69621672453704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { out.append( '\\n') ;",
            "score": 99.68963623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { out . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { out.append( '| ') ;",
            "score": 99.68963623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { out . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { out.append( ' ') ;",
            "score": 99.68963623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { out . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { out.append( '  ') ;",
            "score": 99.68963623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { out . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { out.append( 'bar') ;",
            "score": 99.68963623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { out . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.62184495192308,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0) { b.append( '\\n') ; } else {",
            "score": 99.5761081861413,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >0) { b.append( '| ') ; } else {",
            "score": 99.5761081861413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0) { b.append( ' ') ; } else {",
            "score": 99.5761081861413,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >0) { b.append( '  ') ; } else {",
            "score": 99.5761081861413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0) { b.append( 'bar') ; } else {",
            "score": 99.5761081861413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.55823863636364,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && false && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && && charno < charno && charno < charno ) {",
            "score": 99.69478062220982,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && charno < sourceExcerpt.length( ) ) ) { b.append( '\\n') ;",
            "score": 99.68943568638393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && charno < sourceExcerpt.length( ) ) ) { b.append( '| ') ;",
            "score": 99.68943568638393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && charno < sourceExcerpt.length( ) ) ) { b.append( ' ') ;",
            "score": 99.68943568638393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && charno < sourceExcerpt.length( ) ) ) { b.append( '  ') ;",
            "score": 99.68943568638393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && charno < sourceExcerpt.length( ) ) ) { b.append( 'bar') ;",
            "score": 99.68943568638393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) ==0) {",
            "score": 99.62109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( )( ) ) {",
            "score": 99.57528023097827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.index( ) ) {",
            "score": 99.57320731026786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . index ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==0) ;",
            "score": 99.55775756835938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& &&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.69474574497768,
            "correctness": "uncompilable",
            "tokenized_patch": "&& && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno &&0<= charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.68940952845982,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno >= sourceExcerpt.length( ) ) {",
            "score": 99.68147225215517,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) &&0< charno ) {",
            "score": 99.62510329026442,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0!= charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.62105758101852,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { ) ; }",
            "score": 99.5842618075284,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno < sourceExcerpt.length( ) ) {",
            "score": 99.57308296535327,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno && charno < sourceExcerpt.length ) {",
            "score": 99.5577392578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno ; {",
            "score": 99.69439019097223,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.6890869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.6890869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.6890869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.6890869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.6890869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >= sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.68101764547414,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) &&0<= charno ) {",
            "score": 99.62408916766827,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || sourceExcerpt.length( ) >0)",
            "score": 99.62076822916667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( lineNumber ) ; } else { b.append( '\\n') ; }",
            "score": 99.57431428328805,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( line CaMeL Number ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( lineNumber ) ; } else { b.append( '| ') ; }",
            "score": 99.57431428328805,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( line CaMeL Number ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( lineNumber ) ; } else { b.append( ' ') ; }",
            "score": 99.57431428328805,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( line CaMeL Number ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( lineNumber ) ; } else { b.append( '  ') ; }",
            "score": 99.57431428328805,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( line CaMeL Number ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( lineNumber ) ; } else { b.append( 'bar') ; }",
            "score": 99.57431428328805,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( line CaMeL Number ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ; ) {",
            "score": 99.57288707386364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < charno && charno < charno )",
            "score": 99.69430106026786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { int charno =0;",
            "score": 99.68840422453704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { int char@@ no = 0 ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length1( ) ) {",
            "score": 99.6795066550926,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length 1 ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0== charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.62270883413461,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < sourceExcerpt.length( )",
            "score": 99.62057834201389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { {",
            "score": 99.58268229166667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.lineNumber( ) ) {",
            "score": 99.57321034307066,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . line CaMeL Number ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&1<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.57260529891305,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 1 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == ! charno ) {",
            "score": 99.55634099786931,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= < charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.69394356863839,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt.length( ) )",
            "score": 99.68840225883152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.67766462053571,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( ) >0) {",
            "score": 99.62221116286058,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( ) >0)",
            "score": 99.62041015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != charno ) {",
            "score": 99.5817638578869,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) ) {",
            "score": 99.5721923828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt.toString( ) ) ; } else {",
            "score": 99.57137398097827,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ) ;",
            "score": 99.55588666130515,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < ! charno ) {",
            "score": 99.69388253348214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.68821433738425,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.68821433738425,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.68821433738425,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.68821433738425,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.68821433738425,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.6771240234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { {",
            "score": 99.5812655362216,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length - charno ) {",
            "score": 99.57110040838069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno != sourceExcerpt.length( ) ) ) {",
            "score": 99.57072647758152,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt != null ) {",
            "score": 99.55576685855263,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && true ) {",
            "score": 99.53966606987848,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && true ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno( charno ) ) {",
            "score": 99.69373575846355,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno > sourceExcerpt.length( ) ) {",
            "score": 99.6768211082176,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.6200534986413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.getLength( ) ) {",
            "score": 99.57051418138587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . get CaMeL Length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) break ;",
            "score": 99.5391512784091,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) break ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || charno < charno ) { {",
            "score": 99.69234793526786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( charno &&0<= charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.68756103515625,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( char@@ no && 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.67611258370536,
            "correctness": "wrong",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) &&0<= charno ) {",
            "score": 99.62118765024039,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno >= sourceExcerpt.length( ) )",
            "score": 99.61937572337963,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) < charno ) {",
            "score": 99.58005593039773,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( )( ) ) {",
            "score": 99.56943147078805,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( charno ) ) {",
            "score": 99.55458762428977,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length && excerpt.equals( LINE ) ) {",
            "score": 99.67578996930804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno >1) {",
            "score": 99.62090594951923,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.equals( LINE ) )",
            "score": 99.61937537560097,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno )",
            "score": 99.57723388671874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length + charno ) {",
            "score": 99.56931374289773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length + char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno > sourceExcerpt.length( ) -1) {",
            "score": 99.56905995244566,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno < sourceExcerpt.length ) {",
            "score": 99.5538330078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <=0) {",
            "score": 99.5379638671875,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno && {",
            "score": 99.6905517578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.67287868923611,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >= charno ) {",
            "score": 99.61984487680289,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || false ) {",
            "score": 99.57630986752717,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.trim( ) ) {",
            "score": 99.56899879092262,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . trim ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt.toString( ) ) ; }",
            "score": 99.56883603050595,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(0&& charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.553466796875,
            "correctness": "uncompilable",
            "tokenized_patch": "( 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno < charno ;",
            "score": 99.68932233537946,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno &&0<= charno && charno && sourceExcerpt.length( ) ) {",
            "score": 99.68570682920259,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0>= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6197509765625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( ) <=0)",
            "score": 99.61861328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) <= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == ) {",
            "score": 99.57489334909539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > charno < sourceExcerpt.length( ) ) {",
            "score": 99.56892903645833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( '\\n') ;",
            "score": 99.56782670454545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( '| ') ;",
            "score": 99.56782670454545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( ' ') ;",
            "score": 99.56782670454545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( '  ') ;",
            "score": 99.56782670454545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( 'bar') ;",
            "score": 99.56782670454545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || charno < charno ) {",
            "score": 99.68919089988425,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno && sourceExcerpt.length( ) >0)",
            "score": 99.68559919084821,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno ) {",
            "score": 99.61925551470588,
            "correctness": "plausible",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) && charno < charno )",
            "score": 99.61808268229167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno < sourceExcerpt.length( ) ) {",
            "score": 99.56769476996527,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! charno < sourceExcerpt.length ) {",
            "score": 99.55284423828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < charno ) {",
            "score": 99.53427956321023,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno &&",
            "score": 99.68799767127403,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || excerpt.length( ) ) {",
            "score": 99.68532799030173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } b.append( error.description ) ; b.append( '\\n') ;",
            "score": 99.66950593171296,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } b.append( error.description ) ; b.append( '| ') ;",
            "score": 99.66950593171296,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } b.append( error.description ) ; b.append( ' ') ;",
            "score": 99.66950593171296,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } b.append( error.description ) ; b.append( '  ') ;",
            "score": 99.66950593171296,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } b.append( error.description ) ; b.append( 'bar') ;",
            "score": 99.66950593171296,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno &&0<= charno ) {",
            "score": 99.61878551136364,
            "correctness": "plausible",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < error.length( ) || charno < sourceExcerpt.length( ) )",
            "score": 99.6177978515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < error . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0!= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5527111235119,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) == sourceExcerpt.length( ) ) {",
            "score": 99.53409476902173,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno ) ) {",
            "score": 99.68795340401786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.68495686848958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.6683937355324,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; } if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.6683937355324,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.6683937355324,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; } if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.6683937355324,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.6683937355324,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.61876502403847,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) &&0<= charno )",
            "score": 99.6159375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { ) *",
            "score": 99.57145889945652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.56664428710937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno && ) {",
            "score": 99.68786168981481,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( charno ) ;",
            "score": 99.68469659213362,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( char@@ no ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >2) {",
            "score": 99.618525390625,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >11) {",
            "score": 99.618525390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >10) {",
            "score": 99.618525390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >9) {",
            "score": 99.618525390625,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >2007) {",
            "score": 99.618525390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < - sourceExcerpt.length( ) ) {",
            "score": 99.57121138139205,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < - source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length.length( ) ) {",
            "score": 99.56709621263587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.55199032738095,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) && ) {",
            "score": 99.68781389508929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.68382884837963,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& !(0<=0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.6680157001202,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! ( 0 <= 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.61815467247597,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) >=0) {",
            "score": 99.61507474459134,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) /",
            "score": 99.57105654761905,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.5665283203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.56463068181819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < ! charno ) {",
            "score": 99.5517245205966,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && ! charno < charno && charno < charno ) {",
            "score": 99.68671526227679,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && ! char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.68329729352679,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) !=0)",
            "score": 99.614248046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) != 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) {.",
            "score": 99.5704678622159,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { .",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( )( ) ) {",
            "score": 99.56630010190217,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( ) -1) {",
            "score": 99.56373131793478,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==0)",
            "score": 99.55078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) >0) {",
            "score": 99.53263346354167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < charno && charno < charno ; charno ++ ) {",
            "score": 99.68653247974537,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ==0) { b.append( '\\n') ;",
            "score": 99.68266950334821,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ==0) { b.append( '| ') ;",
            "score": 99.68266950334821,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ==0) { b.append( ' ') ;",
            "score": 99.68266950334821,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ==0) { b.append( '  ') ;",
            "score": 99.68266950334821,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ==0) { b.append( 'bar') ;",
            "score": 99.68266950334821,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.6678825827206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.length( ) >=0)",
            "score": 99.61403175636575,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ) { {",
            "score": 99.57041237571023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt( sourceExcerpt ) ) {",
            "score": 99.56615193684895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= true && charno < sourceExcerpt.length( ) ) {",
            "score": 99.55028686523437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= true && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < charno )",
            "score": 99.53224690755208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0< charno && sourceExcerpt.length( ) )",
            "score": 99.68254743303571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '\\n') ; } b.append( error.description ) ;",
            "score": 99.617509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '| ') ; } b.append( error.description ) ;",
            "score": 99.617509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( ' ') ; } b.append( error.description ) ;",
            "score": 99.617509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '  ') ; } b.append( error.description ) ;",
            "score": 99.617509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( 'bar') ; } b.append( error.description ) ;",
            "score": 99.617509765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || sourceExcerpt.length( ) <=0)",
            "score": 99.61314561631944,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.5695467862216,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.lineNumber( ) ) {",
            "score": 99.5624469259511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . line CaMeL Number ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.54894438244048,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length < charno ) {",
            "score": 99.53190307617187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.68482349537037,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.68230569773706,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.68230569773706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.68230569773706,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.68230569773706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.68230569773706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) && excerpt.equals( LINE ) ) {",
            "score": 99.616767578125,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) )",
            "score": 99.61180419921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno - charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56601969401042,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no - char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno( sourceExcerpt ) ) {",
            "score": 99.54843284970238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return 0;",
            "score": 99.53174889605978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return 0 ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) b.append( '\\n') ;",
            "score": 99.68440755208333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) b.append( '| ') ;",
            "score": 99.68440755208333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) b.append( ' ') ;",
            "score": 99.68440755208333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) b.append( '  ') ;",
            "score": 99.68440755208333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) b.append( 'bar') ;",
            "score": 99.68440755208333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source , charno && charno < sourceExcerpt.length( ) )",
            "score": 99.68229457310268,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source , char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( LINE ) ) {",
            "score": 99.61625591077302,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt.length( ) >0)",
            "score": 99.5655078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.56204659598214,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length < sourceExcerpt.length ) {",
            "score": 99.5312832919034,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < charno && charno < charno ) {",
            "score": 99.683837890625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) b.append( '\\n') ; b.append( '\\n') ;",
            "score": 99.68226841517857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) b.append( '| ') ; b.append( '| ') ;",
            "score": 99.68226841517857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) b.append( ' ') ; b.append( ' ') ;",
            "score": 99.68226841517857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) b.append( '  ') ; b.append( '  ') ;",
            "score": 99.68226841517857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) b.append( 'bar') ; b.append( 'bar') ;",
            "score": 99.68226841517857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < charno ;",
            "score": 99.616005859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) <= charno ) {",
            "score": 99.56746773097827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.lineNumber ) {",
            "score": 99.5615001860119,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno < sourceExcerpt.length ) {",
            "score": 99.54778731496711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno.length ) {",
            "score": 99.68308803013393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) b.append( '\\n') ; b.append( '\\n') ;",
            "score": 99.68157958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) b.append( '| ') ; b.append( '| ') ;",
            "score": 99.68157958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) b.append( ' ') ; b.append( ' ') ;",
            "score": 99.68157958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) b.append( '  ') ; b.append( '  ') ;",
            "score": 99.68157958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) b.append( 'bar') ; b.append( 'bar') ;",
            "score": 99.68157958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= excerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.61468036358173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { ) /",
            "score": 99.56711744225544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( '\\n') ; }",
            "score": 99.56458984375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( '| ') ; }",
            "score": 99.56458984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( ' ') ; }",
            "score": 99.56458984375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( '  ') ; }",
            "score": 99.56458984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( 'bar') ; }",
            "score": 99.56458984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) -1) {",
            "score": 99.56089716372283,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) -0) {",
            "score": 99.54674072265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) - 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length < sourceExcerpt.length ) {",
            "score": 99.5306396484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) break ;",
            "score": 99.68266078404018,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) break ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0<= charno && charno < charno ) {",
            "score": 99.661552734375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0== sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) )",
            "score": 99.60875108506944,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < false ) {",
            "score": 99.5664794921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56436011904762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 << char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.545947265625,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <0|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.53041294642857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && *charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.68186732700893,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && * char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) )",
            "score": 99.60819185697116,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { )",
            "score": 99.56630249023438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( charno > sourceExcerpt.length( ) ) ) {",
            "score": 99.56384808084239,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( '\\n') ; }",
            "score": 99.5602390455163,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( '| ') ; }",
            "score": 99.5602390455163,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( ' ') ; }",
            "score": 99.5602390455163,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( '  ') ; }",
            "score": 99.5602390455163,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( 'bar') ; }",
            "score": 99.5602390455163,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.5300625887784,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '\\n') ; } b.append( '\\n') ;",
            "score": 99.68173104745371,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '| ') ; } b.append( '| ') ;",
            "score": 99.68173104745371,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( ' ') ; } b.append( ' ') ;",
            "score": 99.68173104745371,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '  ') ; } b.append( '  ') ;",
            "score": 99.68173104745371,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( 'bar') ; } b.append( 'bar') ;",
            "score": 99.68173104745371,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno &&0<= charno && charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.68113490513393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ! sourceExcerpt.equals( LINE ) ) {",
            "score": 99.66100202287946,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= excerpt.length( ) ) {",
            "score": 99.60844089673913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) )",
            "score": 99.60793728298611,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.56264860733695,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&11<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.56264860733695,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&10<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.56264860733695,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&9<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.56264860733695,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2007<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.56264860733695,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) || charno < charno ) {",
            "score": 99.6815185546875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { int charno = charno ;",
            "score": 99.680908203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { int char@@ no = char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.6077734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.60752516526442,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56240234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) {",
            "score": 99.55922037760416,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "?0: charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5434802827381,
            "correctness": "uncompilable",
            "tokenized_patch": "? 0 : char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5256984544837,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.68088204520089,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.68088204520089,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.68088204520089,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.68088204520089,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.68088204520089,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno < charno ) { }",
            "score": 99.68027169363839,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.60774369673295,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( '\\n') ; b.append( error.description ) ;",
            "score": 99.60712139423077,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( '| ') ; b.append( error.description ) ;",
            "score": 99.60712139423077,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( ' ') ; b.append( error.description ) ;",
            "score": 99.60712139423077,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( '  ') ; b.append( error.description ) ;",
            "score": 99.60712139423077,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( 'bar') ; b.append( error.description ) ;",
            "score": 99.60712139423077,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) ) { {",
            "score": 99.56571821732955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.5622027853261,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.54340563322368,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= sourceExcerpt.length ) {",
            "score": 99.52561353600544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.68076869419643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.68076869419643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.68076869419643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.68076869419643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.68076869419643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < charno && charno <0) {",
            "score": 99.65721638997395,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno )",
            "score": 99.60657958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6065204326923,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 != char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < this.charno ) {",
            "score": 99.56566321331522,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < this . char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0&&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.54266912286931,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno( sourceExcerpt.length( ) ) ) {",
            "score": 99.525439453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.68073640046296,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ? ) {",
            "score": 99.67988804408482,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.65636786099138,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&( charno < charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.60603133491848,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < count && charno < sourceExcerpt.length( ) ) {",
            "score": 99.60584435096153,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < count && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.565185546875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.startsWith( sourceExcerpt ) ) {",
            "score": 99.561357421875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno - sourceExcerpt.length( ) >0) {",
            "score": 99.55811608355978,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no - source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > null ) {",
            "score": 99.5425048828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length sourceExcerpt.length( ) ) {",
            "score": 99.5253375509511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno < charno && sourceExcerpt.length( ) )",
            "score": 99.68044607979911,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && || charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.67885916573661,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && || char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > ) {",
            "score": 99.6057637532552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.60409780649039,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )( ) ) { {",
            "score": 99.56106567382812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( ) >0) {",
            "score": 99.55767822265625,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) >=0) {",
            "score": 99.54236949573864,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno <0) {",
            "score": 99.5242984169408,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "if(0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.68022629310344,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.68022629310344,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<= charno && charno < sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.68022629310344,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.68022629310344,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<= charno && charno < sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.68022629310344,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.678291015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -0) {",
            "score": 99.56465480638587,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56006920855978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.lineNumber ) {",
            "score": 99.55757068452381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == false ) {",
            "score": 99.541650390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno <= sourceExcerpt.length( ) ) {",
            "score": 99.52376302083333,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno &&( charno < sourceExcerpt.length( ) ) )",
            "score": 99.67998395647321,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno < charno )",
            "score": 99.67758614676339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.60365234375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) && ! charno ) {",
            "score": 99.54114879261364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno && charno )",
            "score": 99.67716761997768,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !(0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.65259806315105,
            "correctness": "wrong",
            "tokenized_patch": "&& ! ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno &&0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6035625751202,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno < charno ) {",
            "score": 99.5633544921875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >0) { {",
            "score": 99.54102725074405,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && isWhitespace( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.67982219827586,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && is CaMeL Whitespace ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.60294283353366,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0+ charno < sourceExcerpt.length( ) ) {",
            "score": 99.60207201086956,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 + char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { { }",
            "score": 99.56211786684783,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { }",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0, charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.55910237630208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 , char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.getLength( ) ) {",
            "score": 99.55679984714673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . get CaMeL Length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno <= sourceExcerpt.length( ) ) ) {",
            "score": 99.54091389973958,
            "correctness": "plausible",
            "tokenized_patch": "&& ( char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.67927769252232,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.67927769252232,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.67927769252232,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.67927769252232,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.67927769252232,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < charno && charno < charno && charno < charno ) {",
            "score": 99.6768798828125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '\\n') ; } b.append( sourceExcerpt ) ; b.append( '\\n') ;",
            "score": 99.65044955549568,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } b.append( sourceExcerpt ) ; b.append( '| ') ;",
            "score": 99.65044955549568,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } b.append( sourceExcerpt ) ; b.append( ' ') ;",
            "score": 99.65044955549568,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } b.append( sourceExcerpt ) ; b.append( '  ') ;",
            "score": 99.65044955549568,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } b.append( sourceExcerpt ) ; b.append( 'bar') ;",
            "score": 99.65044955549568,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.60290979456019,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( sourceExcerpt ) ) {",
            "score": 99.55851022820724,
            "correctness": "wrong",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0> charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5563732328869,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.54078258167614,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt != sourceExcerpt.length( ) ) {",
            "score": 99.52086292613636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.67784772600446,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno &&0<= sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.67784772600446,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.67784772600446,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno &&0<= sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.67784772600446,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.67784772600446,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length ) { {",
            "score": 99.67655888310185,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno == sourceExcerpt.length( ) ) {",
            "score": 99.6501885775862,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno ) { b.append( '\\n') ; b.append( error.description ) ; }",
            "score": 99.60181640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '| ') ; b.append( error.description ) ; }",
            "score": 99.60181640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( ' ') ; b.append( error.description ) ; }",
            "score": 99.60181640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '  ') ; b.append( error.description ) ; }",
            "score": 99.60181640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( 'bar') ; b.append( error.description ) ; }",
            "score": 99.60181640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno < sourceExcerpt.length( ) )",
            "score": 99.60171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt.toString( ) ) ; } }",
            "score": 99.55584161931819,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return '\\n'{",
            "score": 99.52028490149456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return '| '{",
            "score": 99.52028490149456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return ' '{",
            "score": 99.52028490149456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return '  '{",
            "score": 99.52028490149456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return 'bar'{",
            "score": 99.52028490149456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( error.description ) ;",
            "score": 99.677158203125,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno > charno && charno < charno && charno < charno ) {",
            "score": 99.67625144675925,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0< charno && sourceExcerpt.length( ) >0) {",
            "score": 99.60142578125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { *",
            "score": 99.56145685369319,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>> < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.55811656605114,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >> < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.55567568824405,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < false && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52014741443452,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.67708914620536,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt ) {",
            "score": 99.67623901367188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ||0< sourceExcerpt.length( ) )",
            "score": 99.60096571180556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false <= sourceExcerpt.length( ) ) {",
            "score": 99.56060180664062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { continue ; }",
            "score": 99.55647786458333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { continue ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt.length( ) -1) {",
            "score": 99.55460981889205,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && null <= sourceExcerpt.length( ) ) {",
            "score": 99.51829223632812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && null <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ; charno ++ ) { {",
            "score": 99.67615685096153,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; char@@ no ++ ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0*charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6008068266369,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 * char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < error.length( ) || charno < sourceExcerpt.length( ) ) {",
            "score": 99.600712890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < error . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) !=2) {",
            "score": 99.53929443359375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) !=11) {",
            "score": 99.53929443359375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) !=10) {",
            "score": 99.53929443359375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) !=9) {",
            "score": 99.53929443359375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) !=2007) {",
            "score": 99.53929443359375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { &&",
            "score": 99.51809825067934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '\\n') ; b.append( '\\n') ; }",
            "score": 99.67615198206019,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '| ') ; b.append( '| ') ; }",
            "score": 99.67615198206019,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( ' ') ; b.append( ' ') ; }",
            "score": 99.67615198206019,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '  ') ; b.append( '  ') ; }",
            "score": 99.67615198206019,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( 'bar') ; b.append( 'bar') ; }",
            "score": 99.67615198206019,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&( excerpt.equals( LINE )",
            "score": 99.6003887469952,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && ( ex@@ cer@@ pt . equals ( LINE )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( LINE ) && charno < sourceExcerpt.length( ) )",
            "score": 99.60007052951389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.56010298295455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.554580078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.55318777901786,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&(0<= charno && sourceExcerpt.length( )( ) ) ) {",
            "score": 99.5392178622159,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno <2) {",
            "score": 99.51793852306548,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno <11) {",
            "score": 99.51793852306548,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno <10) {",
            "score": 99.51793852306548,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno <9) {",
            "score": 99.51793852306548,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno <2007) {",
            "score": 99.51793852306548,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < error.getCharno( ) && charno < sourceExcerpt.length( ) )",
            "score": 99.60000723379629,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < error . get CaMeL Char@@ no ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( LINE ) &&0<= charno ) {",
            "score": 99.59951782226562,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.equals( sourceExcerpt.length( ) ) ) {",
            "score": 99.55281205610795,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < source.length( ) ) {",
            "score": 99.51692708333333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.6765557650862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.6765557650862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.6765557650862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.6765557650862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.6765557650862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < charno && charno && charno < charno ) {",
            "score": 99.67436161747685,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno &&0<= charno &&",
            "score": 99.64759657118056,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.5999168113426,
            "correctness": "wrong",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( '\\n') ;",
            "score": 99.5994160970052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( '| ') ;",
            "score": 99.5994160970052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( ' ') ;",
            "score": 99.5994160970052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( '  ') ;",
            "score": 99.5994160970052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( 'bar') ;",
            "score": 99.5994160970052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != sourceExcerpt.length ) {",
            "score": 99.558837890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= this.charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.55436905570652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= this . char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) -1)",
            "score": 99.55278986150569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) - 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > length( ) ) {",
            "score": 99.53862970525569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno || charno < sourceExcerpt.length ) {",
            "score": 99.51622250205592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int charno &&0<= charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.67637897359914,
            "correctness": "uncompilable",
            "tokenized_patch": "int char@@ no && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < false ) {",
            "score": 99.67395958533653,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.64671912560097,
            "correctness": "wrong",
            "tokenized_patch": "&& ! ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ||0<= sourceExcerpt.length( ) )",
            "score": 99.5987079326923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < '\\n') {",
            "score": 99.5985546875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $STRING$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < '| ') {",
            "score": 99.5985546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < ' ') {",
            "score": 99.5985546875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $STRING$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < '  ') {",
            "score": 99.5985546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < 'bar') {",
            "score": 99.5985546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.553994140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.55265299479167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.53853759765624,
            "correctness": "uncompilable",
            "tokenized_patch": "|| char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.67572021484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno ) { }",
            "score": 99.67321325231481,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.59821026141827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno + sourceExcerpt.length( ) ) {",
            "score": 99.55391438802083,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no + source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) *2) {",
            "score": 99.55258576766305,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) *11) {",
            "score": 99.55258576766305,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) *10) {",
            "score": 99.55258576766305,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) *9) {",
            "score": 99.55258576766305,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) *2007) {",
            "score": 99.55258576766305,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0< charno && charno < sourceExcerpt.length ) {",
            "score": 99.53789961965461,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno )",
            "score": 99.51558645148026,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '\\n') ; } else {",
            "score": 99.6755792025862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '| ') ; } else {",
            "score": 99.6755792025862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( ' ') ; } else {",
            "score": 99.6755792025862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '  ') ; } else {",
            "score": 99.6755792025862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( 'bar') ; } else {",
            "score": 99.6755792025862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno < sourceExcerpt.length( ) )",
            "score": 99.59867037259616,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) : charno ) {",
            "score": 99.55736142113095,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) : char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.537890625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno != sourceExcerpt.length ) {",
            "score": 99.51550903320313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < ) {",
            "score": 99.67277018229167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( sourceExcerpt.length( ) < charno ) ) {",
            "score": 99.55661939538044,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ( source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0+ charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.55348714192708,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 + char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( ! charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.5370760830966,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.67326136997768,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.67326136997768,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.67326136997768,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.67326136997768,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.67326136997768,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && equals( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.67247178819444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && equals ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) || charno < sourceExcerpt.length( ) ) {",
            "score": 99.64476697198276,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < isWhitespace && charno < sourceExcerpt.length( ) )",
            "score": 99.59762008101852,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < is CaMeL Whitespace && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >= sourceExcerpt.length( ) ) {",
            "score": 99.59690856933594,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { { {",
            "score": 99.5566173735119,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.55324388586956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length( ) -1) {",
            "score": 99.55095108695652,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && {",
            "score": 99.53636532738095,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=2&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51542736235119,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <=11&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51542736235119,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <=10&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51542736235119,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <=9&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51542736235119,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <=2007&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51542736235119,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < charno && charno ;",
            "score": 99.671376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && error.length( ) ) {",
            "score": 99.64443969726562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( ) <=0) {",
            "score": 99.5974872295673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.get( ) ) {",
            "score": 99.55301339285714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . get ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.55061848958333,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > charno ) {",
            "score": 99.51518322172619,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) || charno < sourceExcerpt.length( ) ) {",
            "score": 99.67264229910714,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&1<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.55478050595238,
            "correctness": "wrong",
            "tokenized_patch": "&& 1 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) - charno ) {",
            "score": 99.5529276529948,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt ) {",
            "score": 99.55060173483456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= false && charno < sourceExcerpt.length( ) ) {",
            "score": 99.53629150390626,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.67194475446429,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno == sourceExcerpt.length( ) ) {",
            "score": 99.64342809606481,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) && {",
            "score": 99.59667064525463,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno > sourceExcerpt.length( ) ) {",
            "score": 99.596640625,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.5546344259511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) +2) {",
            "score": 99.55044157608695,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) +11) {",
            "score": 99.55044157608695,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) +10) {",
            "score": 99.55044157608695,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) +9) {",
            "score": 99.55044157608695,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) +2007) {",
            "score": 99.55044157608695,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt sourceExcerpt.length( ) ) {",
            "score": 99.51432291666667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > charno && charno < charno && charno < charno && charno < charno ) {",
            "score": 99.669921875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.643349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno < sourceExcerpt.length( ) )",
            "score": 99.5966045673077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || charno >0) {",
            "score": 99.59653883713942,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno ) { ) {",
            "score": 99.55393384850544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { } else {",
            "score": 99.55259195963542,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt.length( ) )",
            "score": 99.54981753700658,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno == sourceExcerpt.length( ) ) {",
            "score": 99.51425316220238,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0<= charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.67064587823276,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < charno && charno < charno ;",
            "score": 99.66972133091518,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.6430031105324,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; } else {",
            "score": 99.59649188701923,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '| ') ; } else {",
            "score": 99.59649188701923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( ' ') ; } else {",
            "score": 99.59649188701923,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '  ') ; } else {",
            "score": 99.59649188701923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; } else {",
            "score": 99.59649188701923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.length( ) !=0)",
            "score": 99.59599247685185,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( ) != 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ).",
            "score": 99.55285063244048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) .",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && & charno < sourceExcerpt.length( ) ) {",
            "score": 99.55195756392045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && & char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ||",
            "score": 99.53306884765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ||",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < true && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5141369047619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < true && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( sourceExcerpt ) ; }",
            "score": 99.6702880859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno {",
            "score": 99.66957444411058,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0!= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59641676682692,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < sourceExcerpt.length( ) )",
            "score": 99.59565791377315,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source && charno < sourceExcerpt.length( ) ) {",
            "score": 99.55266007133152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( '\\n') ; }",
            "score": 99.5473102072011,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( '| ') ; }",
            "score": 99.5473102072011,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( ' ') ; }",
            "score": 99.5473102072011,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( '  ') ; }",
            "score": 99.5473102072011,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( 'bar') ; }",
            "score": 99.5473102072011,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0< charno && sourceExcerpt.length( ) ) {",
            "score": 99.53221546519886,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >=0) { b.append( '\\n') ;",
            "score": 99.66994803292411,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >=0) { b.append( '| ') ;",
            "score": 99.66994803292411,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >=0) { b.append( ' ') ;",
            "score": 99.66994803292411,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >=0) { b.append( '  ') ;",
            "score": 99.66994803292411,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >=0) { b.append( 'bar') ;",
            "score": 99.66994803292411,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { error.append( '\\n') ;",
            "score": 99.66876220703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { error . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { error.append( '| ') ;",
            "score": 99.66876220703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { error . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { error.append( ' ') ;",
            "score": 99.66876220703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { error . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { error.append( '  ') ;",
            "score": 99.66876220703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { error . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { error.append( 'bar') ;",
            "score": 99.66876220703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { error . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > charno ) {",
            "score": 99.59632286658653,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? CheckLevel.ERROR : CheckLevel.ERROR )",
            "score": 99.59542281539352,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? Check CaMeL Level . ERROR : Check CaMeL Level . ERROR )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )2) {",
            "score": 99.55260120738636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )11) {",
            "score": 99.55260120738636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )10) {",
            "score": 99.55260120738636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )9) {",
            "score": 99.55260120738636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )2007) {",
            "score": 99.55260120738636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length(1) ) {",
            "score": 99.55173561789773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( 1 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno > sourceExcerpt.length( ) )",
            "score": 99.5471923828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt ) {",
            "score": 99.513427734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0<= charno && sourceExcerpt.length( ) )",
            "score": 99.66925920758929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.length ) {",
            "score": 99.66847826086956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ] ) {",
            "score": 99.64174582741477,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ] ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < excerpt.length( ) ) {",
            "score": 99.59588153545673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno < charno )",
            "score": 99.59503643329327,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length2) {",
            "score": 99.55199584960937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length11) {",
            "score": 99.55199584960937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length10) {",
            "score": 99.55199584960937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length9) {",
            "score": 99.55199584960937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length2007) {",
            "score": 99.55199584960937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.getLength( ) )",
            "score": 99.54717462713069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . get CaMeL Length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= sourceExcerpt.length( ) ) {",
            "score": 99.531591796875,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '\\n') ;",
            "score": 99.6681659405048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '| ') ;",
            "score": 99.6681659405048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( ' ') ;",
            "score": 99.6681659405048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '  ') ;",
            "score": 99.6681659405048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( 'bar') ;",
            "score": 99.6681659405048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.66813441685268,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.66813441685268,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.66813441685268,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.66813441685268,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.66813441685268,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) && excerpt.length( ) >0) {",
            "score": 99.59528057391827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == sourceExcerpt.length ) {",
            "score": 99.53147194602273,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && true && charno < sourceExcerpt.length ) {",
            "score": 99.51192801339286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && true && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) >0) {",
            "score": 99.66812797214673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno && charno <",
            "score": 99.66713169642857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno <0) {",
            "score": 99.64121942934783,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.59265588831019,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) { b.append( '\\n') ; }",
            "score": 99.5915234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) { b.append( '| ') ; }",
            "score": 99.5915234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) { b.append( ' ') ; }",
            "score": 99.5915234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) { b.append( '  ') ; }",
            "score": 99.5915234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) { b.append( 'bar') ; }",
            "score": 99.5915234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { )",
            "score": 99.55046280570652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0!= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.55033542798913,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >=2) {",
            "score": 99.53135986328125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >=11) {",
            "score": 99.53135986328125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >=10) {",
            "score": 99.53135986328125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >=9) {",
            "score": 99.53135986328125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >=2007) {",
            "score": 99.53135986328125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < null && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51176525297619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < null && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno || charno < sourceExcerpt.length( ) )",
            "score": 99.66701744342673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno ) {",
            "score": 99.66691080729167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.64010184151786,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.equals( LINE ) ) {",
            "score": 99.59248408564815,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno + sourceExcerpt.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.59051044170673,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no + source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ; {",
            "score": 99.54985119047619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.54575805664062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.666826171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.666826171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.666826171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.666826171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.666826171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && ! charno ) {",
            "score": 99.63868297230114,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) || charno < sourceExcerpt.length( ) )",
            "score": 99.59242757161458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno >2) {",
            "score": 99.59036959134616,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno >11) {",
            "score": 99.59036959134616,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno >10) {",
            "score": 99.59036959134616,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno >9) {",
            "score": 99.59036959134616,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno >2007) {",
            "score": 99.59036959134616,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0: charno < sourceExcerpt.length( ) ) {",
            "score": 99.55007005774456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 : char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno < sourceExcerpt.length( ) ) {",
            "score": 99.54983681126645,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false &&0< sourceExcerpt.length( ) ) {",
            "score": 99.53046209161931,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && false && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < sourceExcerpt )",
            "score": 99.66653878348214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.63855432581019,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno < sourceExcerpt.length( ) )",
            "score": 99.59236283735795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ? '\\n': '\\n') ;",
            "score": 99.59013671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ? '| ': '| ') ;",
            "score": 99.59013671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ? ' ': ' ') ;",
            "score": 99.59013671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ? '  ': '  ') ;",
            "score": 99.59013671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ? 'bar': 'bar') ;",
            "score": 99.59013671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <1) {",
            "score": 99.54949340820312,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) )",
            "score": 99.54564819335937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt.length ) {",
            "score": 99.52946641710069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <( sourceExcerpt.length( ) ) ) {",
            "score": 99.50975501019022,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { char charno = charno ;",
            "score": 99.66596330915179,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { char char@@ no = char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < sourceExcerpt ) {",
            "score": 99.66553673377403,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( sourceExcerpt ) ; b.append( '\\n') ; }",
            "score": 99.63791419719827,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( sourceExcerpt ) ; b.append( '| ') ; }",
            "score": 99.63791419719827,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( sourceExcerpt ) ; b.append( ' ') ; }",
            "score": 99.63791419719827,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( sourceExcerpt ) ; b.append( '  ') ; }",
            "score": 99.63791419719827,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( sourceExcerpt ) ; b.append( 'bar') ; }",
            "score": 99.63791419719827,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < n && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58969350961539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < n && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno( sourceExcerpt.length( ) ) ) {",
            "score": 99.5493099814967,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.54870074728261,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno *sourceExcerpt.length( ) >0) {",
            "score": 99.54527216372283,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no * source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <0&& charno != sourceExcerpt.length( ) ) {",
            "score": 99.50961449032738,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '\\n') ; b.append( charno ) ;",
            "score": 99.66551830150463,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '| ') ; b.append( charno ) ;",
            "score": 99.66551830150463,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( ' ') ; b.append( charno ) ;",
            "score": 99.66551830150463,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '  ') ; b.append( charno ) ;",
            "score": 99.66551830150463,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( 'bar') ; b.append( charno ) ;",
            "score": 99.66551830150463,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? charno : sourceExcerpt.length( ) ) {",
            "score": 99.63669349407327,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) &&0<= charno )",
            "score": 99.59093299278847,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) >1) {",
            "score": 99.58791879507211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno <= sourceExcerpt.length( ) ) ) {",
            "score": 99.54807447350544,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.5451129415761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.5451129415761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.5451129415761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.5451129415761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.5451129415761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) */",
            "score": 99.50941051136364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) * /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) || ) {",
            "score": 99.66568429129464,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !( excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.63601248604911,
            "correctness": "wrong",
            "tokenized_patch": "&& ! ( ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) <0) {",
            "score": 99.58701171875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno ) { ) ;",
            "score": 99.54856275475544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) )",
            "score": 99.54786987304688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length )",
            "score": 99.52821180555556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { */",
            "score": 99.50892705502717,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { * /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno < {",
            "score": 99.66484917534723,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno &&0<= charno",
            "score": 99.63592998798077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.589560546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0+ charno < sourceExcerpt.length( ) ) {",
            "score": 99.58681233723958,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 + char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { b.append( '\\n') ; } else { b.append( lineNumber ) ; }",
            "score": 99.54447605298913,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( line CaMeL Number ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } else { b.append( lineNumber ) ; }",
            "score": 99.54447605298913,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( line CaMeL Number ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else { b.append( lineNumber ) ; }",
            "score": 99.54447605298913,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( line CaMeL Number ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } else { b.append( lineNumber ) ; }",
            "score": 99.54447605298913,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( line CaMeL Number ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else { b.append( lineNumber ) ; }",
            "score": 99.54447605298913,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( line CaMeL Number ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return b.append( '\\n') ;",
            "score": 99.66487910829741,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return b.append( '| ') ;",
            "score": 99.66487910829741,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return b.append( ' ') ;",
            "score": 99.66487910829741,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return b.append( '  ') ;",
            "score": 99.66487910829741,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return b.append( 'bar') ;",
            "score": 99.66487910829741,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( '\\n') ; } else {",
            "score": 99.66251627604167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( '| ') ; } else {",
            "score": 99.66251627604167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( ' ') ; } else {",
            "score": 99.66251627604167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( '  ') ; } else {",
            "score": 99.66251627604167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { b.append( 'bar') ; } else {",
            "score": 99.66251627604167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) !=0) {",
            "score": 99.58945875901442,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) != 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && sourceExcerpt.length( )",
            "score": 99.58541165865384,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<< charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.54771356997283,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 << char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.lineNumber )",
            "score": 99.544384765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . line CaMeL Number )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && sourceExcerpt.length( ) )",
            "score": 99.52778764204545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '\\n') ; b.append( '\\n') ; }",
            "score": 99.66472757273706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '| ') ; b.append( '| ') ; }",
            "score": 99.66472757273706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( ' ') ; b.append( ' ') ; }",
            "score": 99.66472757273706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '  ') ; b.append( '  ') ; }",
            "score": 99.66472757273706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( 'bar') ; b.append( 'bar') ; }",
            "score": 99.66472757273706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.63564627511161,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { if( excerpt.equals( LINE ) )",
            "score": 99.58928313078704,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { if ( ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ?0: charno ) {",
            "score": 99.5846416766827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? 0 : char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source , charno < sourceExcerpt.length( ) ) {",
            "score": 99.54763926630434,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source , char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno + charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.547119140625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no + char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0!= charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.5436779203869,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && length <= sourceExcerpt.length( ) ) {",
            "score": 99.50647583007813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && length <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '\\n') ; } else {",
            "score": 99.6646728515625,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '| ') ; } else {",
            "score": 99.6646728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( ' ') ; } else {",
            "score": 99.6646728515625,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '  ') ; } else {",
            "score": 99.6646728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( 'bar') ; } else {",
            "score": 99.6646728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno != sourceExcerpt.length( ) ) {",
            "score": 99.63523706896552,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; } else",
            "score": 99.588876953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '| ') ; } else",
            "score": 99.588876953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( ' ') ; } else",
            "score": 99.588876953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '  ') ; } else",
            "score": 99.588876953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; } else",
            "score": 99.588876953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && !0< sourceExcerpt.length( ) ) {",
            "score": 99.54730515252976,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno >= sourceExcerpt.length ) {",
            "score": 99.50640869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) > charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.66423087284483,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& error.getCharno( ) < sourceExcerpt.length( ) ) {",
            "score": 99.5838290127841,
            "correctness": "wrong",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && true <= sourceExcerpt.length( ) ) {",
            "score": 99.54673461914062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && true <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( sourceExcerpt.lineNumber ) ) {",
            "score": 99.54334026834239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno( sourceExcerpt.length( ) -1) ) {",
            "score": 99.50630115327381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ( source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { for( int charno =0;",
            "score": 99.63458041487068,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { for ( int char@@ no = 0 ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.58233173076923,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) ; )",
            "score": 99.5462313565341,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ; )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno == sourceExcerpt.lineNumber ) {",
            "score": 99.5432361421131,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= ! charno && charno < sourceExcerpt.length ) {",
            "score": 99.5262451171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < && charno < sourceExcerpt.length ) {",
            "score": 99.50619904891305,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( sourceExcerpt ) ;",
            "score": 99.66297325721153,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0> charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.58833984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>> <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5823086825284,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >> <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt ) {",
            "score": 99.54248046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false && charno < sourceExcerpt.length ) {",
            "score": 99.52593703497024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { int charno = error.getCharno( ) ;",
            "score": 99.66244070870536,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno && charno ;",
            "score": 99.65899188701923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! charno && charno < sourceExcerpt.length( ) )",
            "score": 99.58805338541667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno || charno < sourceExcerpt.length( ) ) {",
            "score": 99.58202185997597,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5460205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { ) {",
            "score": 99.54449462890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= sourceExcerpt.length( ) ) ) {",
            "score": 99.52493106617646,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.66170528017241,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno ; {",
            "score": 99.65894493689903,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.63276198814656,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.58761831430289,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )( ) ;",
            "score": 99.5458651455966,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { ) ;",
            "score": 99.54438920454545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt.length( ) ) ; } else {",
            "score": 99.54142252604167,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& true <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52440243675595,
            "correctness": "uncompilable",
            "tokenized_patch": "&& true <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ||0<= sourceExcerpt.length( ) ) {",
            "score": 99.58713107638889,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return ) ; }",
            "score": 99.545087890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) *",
            "score": 99.5434337797619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.5413485440341,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <( charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.66130719866071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.63170514787946,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0== sourceExcerpt.length( ) )",
            "score": 99.58706778067129,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 == source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& Character.isWhitespace( charno ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58075420673077,
            "correctness": "wrong",
            "tokenized_patch": "&& Character . is CaMeL Whitespace ( char@@ no ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length <1) {",
            "score": 99.54342990451389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt.length( ) ) ; }",
            "score": 99.54127903988487,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.52341822574013,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && ) {",
            "score": 99.50501598011364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { if( charno <0)",
            "score": 99.66123744419643,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { if ( char@@ no < 0 )",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt && charno < sourceExcerpt.length( ) ) {",
            "score": 99.657724609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <1&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.63149789663461,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 1 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0!= sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) )",
            "score": 99.58695927372685,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno > count ) {",
            "score": 99.58023775540866,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > count ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { ) {",
            "score": 99.54337211277173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno & sourceExcerpt.length( ) ) {",
            "score": 99.5232166108631,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no & source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < LINE ) {",
            "score": 99.657373046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < excerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.63113968460648,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.579658203125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno & charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.54488118489583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no & char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'<= sourceExcerpt.length( ) ) {",
            "score": 99.54299926757812,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && '| '<= sourceExcerpt.length( ) ) {",
            "score": 99.54299926757812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '<= sourceExcerpt.length( ) ) {",
            "score": 99.54299926757812,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && '  '<= sourceExcerpt.length( ) ) {",
            "score": 99.54299926757812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'<= sourceExcerpt.length( ) ) {",
            "score": 99.54299926757812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52315848214286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50471635298295,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.66106546336206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.66106546336206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.66106546336206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.66106546336206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.66106546336206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < charno ) {",
            "score": 99.65732209578805,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length && charno < sourceExcerpt.length( ) ) {",
            "score": 99.63045247395833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < excerpt.length( ) && charno < sourceExcerpt.length( ) )",
            "score": 99.58668870192308,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '\\n') ; } b.append( '\\n') ;",
            "score": 99.57960045855978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '| ') ; } b.append( '| ') ;",
            "score": 99.57960045855978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( ' ') ; } b.append( ' ') ;",
            "score": 99.57960045855978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '  ') ; } b.append( '  ') ;",
            "score": 99.57960045855978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( 'bar') ; } b.append( 'bar') ;",
            "score": 99.57960045855978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) { {",
            "score": 99.54292224702381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'.length < sourceExcerpt.length( ) ) {",
            "score": 99.52299360795455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '| '.length < sourceExcerpt.length( ) ) {",
            "score": 99.52299360795455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '.length < sourceExcerpt.length( ) ) {",
            "score": 99.52299360795455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '  '.length < sourceExcerpt.length( ) ) {",
            "score": 99.52299360795455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'.length < sourceExcerpt.length( ) ) {",
            "score": 99.52299360795455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; } } else {",
            "score": 99.66022858796296,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '| ') ; } } else {",
            "score": 99.66022858796296,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( ' ') ; } } else {",
            "score": 99.66022858796296,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '  ') ; } } else {",
            "score": 99.66022858796296,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; } } else {",
            "score": 99.66022858796296,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno < charno",
            "score": 99.65635463169643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { if( excerpt.equals( LINE ) ) {",
            "score": 99.62973458426339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.58631727430556,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0& charno < sourceExcerpt.length( ) ) {",
            "score": 99.57950492527173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 & char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length /2) {",
            "score": 99.54238746279762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length / $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length /11) {",
            "score": 99.54238746279762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length / $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length /10) {",
            "score": 99.54238746279762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length / $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length /9) {",
            "score": 99.54238746279762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length / $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length /2007) {",
            "score": 99.54238746279762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length / $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && true &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.52292702414773,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && true && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < sourceExcerpt.length ) {",
            "score": 99.65614536830357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) || charno < sourceExcerpt.length( ) ) {",
            "score": 99.62921773976294,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || sourceExcerpt.length( ) ==0)",
            "score": 99.58573857060185,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || source CaMeL Ex@@ cer@@ pt . length ( ) == 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < max && charno < sourceExcerpt.length( ) ) {",
            "score": 99.57936448317308,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < max && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { ;",
            "score": 99.54225852272727,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&(0<= charno &&( charno < sourceExcerpt.length( ) ) ) ) {",
            "score": 99.54216796875,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "|| charno <0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.52287946428571,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno *charno < sourceExcerpt.length( ) )",
            "score": 99.65973531788794,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no * char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <(0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.62912222055289,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ||0<= charno &&0<= charno ) {",
            "score": 99.57895132211539,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&(0<= charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.54215087890626,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && length < sourceExcerpt.length( ) ) {",
            "score": 99.52285766601562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && sourceExcerpt.length < sourceExcerpt.length ) {",
            "score": 99.5039699388587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( error.description ) ; }",
            "score": 99.65932053786058,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ||0<= sourceExcerpt.length( ) ) {",
            "score": 99.62855747767857,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&(0<= charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.54212890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length( ) ) { {",
            "score": 99.541748046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.52281605113636,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno < charno && sourceExcerpt.length( ) )",
            "score": 99.65903657058189,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < charno < charno ) {",
            "score": 99.65415602463942,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( LINE ) && charno < sourceExcerpt.length ) {",
            "score": 99.628173828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= charno )",
            "score": 99.58510131835938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ||0<= charno ) {",
            "score": 99.57871791294643,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.54207356770833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.lineNumber( ) ) {",
            "score": 99.53940217391305,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . line CaMeL Number ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno( sourceExcerpt.length( ) -1) ) {",
            "score": 99.5032958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ( source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.65797776442308,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '\\n') ; int charno = error.getCharno( ) ;",
            "score": 99.62761124320652,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; int charno = error.getCharno( ) ;",
            "score": 99.62761124320652,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; int charno = error.getCharno( ) ;",
            "score": 99.62761124320652,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; int charno = error.getCharno( ) ;",
            "score": 99.62761124320652,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; int charno = error.getCharno( ) ;",
            "score": 99.62761124320652,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58507848668981,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.541240234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { ) ;",
            "score": 99.54051672894022,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.intValue( ) ) {",
            "score": 99.5393703294837,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . int CaMeL Value ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= ! charno ) {",
            "score": 99.5222500887784,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0&& charno < charno && sourceExcerpt.length( ) )",
            "score": 99.65611049107143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) return '\\n';",
            "score": 99.62680489676339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) return '| ';",
            "score": 99.62680489676339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) return ' ';",
            "score": 99.62680489676339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) return '  ';",
            "score": 99.62680489676339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) return 'bar';",
            "score": 99.62680489676339,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( ) ==0)",
            "score": 99.584892578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) == 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno > ) {",
            "score": 99.578408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) -1) {",
            "score": 99.53878651494566,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.52200927734376,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length <0) {",
            "score": 99.50318739149306,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0&& charno < sourceExcerpt.length( ) )",
            "score": 99.65568359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { b.append( '\\n') ;",
            "score": 99.65181929976852,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { b.append( '| ') ;",
            "score": 99.65181929976852,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { b.append( ' ') ;",
            "score": 99.65181929976852,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { b.append( '  ') ;",
            "score": 99.65181929976852,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { b.append( 'bar') ;",
            "score": 99.65181929976852,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.58393012152777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) && excerpt.equals( '\\n') ) {",
            "score": 99.57779296875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) && excerpt.equals( '| ') ) {",
            "score": 99.57779296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) && excerpt.equals( ' ') ) {",
            "score": 99.57779296875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) && excerpt.equals( '  ') ) {",
            "score": 99.57779296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) && excerpt.equals( 'bar') ) {",
            "score": 99.57779296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0>= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.54108992866848,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.lineNumber )",
            "score": 99.538671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . line CaMeL Number )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) *",
            "score": 99.52140727796052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >1) {",
            "score": 99.50296456473214,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.6554842862216,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.6554842862216,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.6554842862216,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.6554842862216,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.6554842862216,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } b.append( '\\n') ; b.append( sourceExcerpt ) ;",
            "score": 99.6254461880388,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } b.append( '| ') ; b.append( sourceExcerpt ) ;",
            "score": 99.6254461880388,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } b.append( ' ') ; b.append( sourceExcerpt ) ;",
            "score": 99.6254461880388,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } b.append( '  ') ; b.append( sourceExcerpt ) ;",
            "score": 99.6254461880388,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } b.append( 'bar') ; b.append( sourceExcerpt ) ;",
            "score": 99.6254461880388,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.5777079264323,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source != sourceExcerpt.length( ) ) {",
            "score": 99.541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false < charno && sourceExcerpt.length( ) ) {",
            "score": 99.5393597146739,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno &&0<= charno && charno && sourceExcerpt.length( ) )",
            "score": 99.65545654296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { } else {",
            "score": 99.6472880045573,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { } else {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno != sourceExcerpt.length( ) ) {",
            "score": 99.62447554976852,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ) < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.58391203703704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > LINE ) {",
            "score": 99.5771484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.53845796130952,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) throws",
            "score": 99.52070545014881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) throws",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length.length ) {",
            "score": 99.50211588541667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.65416608537946,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length )",
            "score": 99.64712890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) ) break ;",
            "score": 99.62439416956019,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) break ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) && {",
            "score": 99.5838290127841,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) || excerpt.equals( LINE ) ) {",
            "score": 99.57712890625,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&( charno <= sourceExcerpt.length( ) ) ) {",
            "score": 99.53896696671195,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno != charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5382967862216,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==0) { {",
            "score": 99.52062406994048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2&& charno < sourceExcerpt.length ) {",
            "score": 99.5020687705592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <11&& charno < sourceExcerpt.length ) {",
            "score": 99.5020687705592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <10&& charno < sourceExcerpt.length ) {",
            "score": 99.5020687705592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <9&& charno < sourceExcerpt.length ) {",
            "score": 99.5020687705592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2007&& charno < sourceExcerpt.length ) {",
            "score": 99.5020687705592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || excerpt.length( ) )",
            "score": 99.65370396205357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno ) { {",
            "score": 99.646943359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( '\\n') ; } b.append( '\\n') ;",
            "score": 99.62439385775862,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( '| ') ; } b.append( '| ') ;",
            "score": 99.62439385775862,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( ' ') ; } b.append( ' ') ;",
            "score": 99.62439385775862,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( '  ') ; } b.append( '  ') ;",
            "score": 99.62439385775862,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( 'bar') ; } b.append( 'bar') ;",
            "score": 99.62439385775862,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno < sourceExcerpt.length( )",
            "score": 99.58342375578704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { ) {",
            "score": 99.53947647758152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) ; {",
            "score": 99.538330078125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ; {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0>= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52060081845238,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno &&",
            "score": 99.64599609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || sourceExcerpt.equals( LINE ) )",
            "score": 99.58311110276442,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.53946940104167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -1) ;",
            "score": 99.53772503396739,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) /2) {",
            "score": 99.53772503396739,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) /11) {",
            "score": 99.53772503396739,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) /10) {",
            "score": 99.53772503396739,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) /9) {",
            "score": 99.53772503396739,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) /2007) {",
            "score": 99.53772503396739,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& false != charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52013578869048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5012939453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source = charno && charno < sourceExcerpt.length( ) )",
            "score": 99.65277971540179,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source = char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno &&0<= sourceExcerpt.length( ) )",
            "score": 99.58250075120192,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || charno >1) {",
            "score": 99.5763408954327,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no > 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && != charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.539365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.lineNumber( ) )",
            "score": 99.5372647372159,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0== charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51972888764881,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) > ) {",
            "score": 99.50101318359376,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( sourceExcerpt ) ;",
            "score": 99.65182179418103,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >= sourceExcerpt.length( ) || charno < sourceExcerpt.length( ) ) {",
            "score": 99.62301320043103,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno &&0<= charno ) {",
            "score": 99.57534555288461,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.toString( ) ) {",
            "score": 99.53687584918478,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { ) ;",
            "score": 99.53662109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno <1) {",
            "score": 99.50066266741071,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.65115017361111,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && excerpt.length( ) )",
            "score": 99.64329310825893,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.62240705818965,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.582294921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( )( ) ) {",
            "score": 99.53785241168478,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >0) { ) ;",
            "score": 99.53639914772727,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno > sourceExcerpt.length ) {",
            "score": 99.53622275904605,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) <=0) {",
            "score": 99.51898803710938,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) )",
            "score": 99.5003726356908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '\\n') ; } else { b.append( '\\n') ;",
            "score": 99.65107421875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( '| ') ; } else { b.append( '| ') ;",
            "score": 99.65107421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( ' ') ; } else { b.append( ' ') ;",
            "score": 99.65107421875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( '  ') ; } else { b.append( '  ') ;",
            "score": 99.65107421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( 'bar') ; } else { b.append( 'bar') ;",
            "score": 99.65107421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? charno : CheckLevel.ERROR ) {",
            "score": 99.57453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no : Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) +1) {",
            "score": 99.53498641304348,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) + 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < options.length( ) ) {",
            "score": 99.51894962086396,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < options . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt && charno < sourceExcerpt.length ) {",
            "score": 99.5001804517663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( sourceExcerpt ) ;",
            "score": 99.6509540264423,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& error.getCharno( ) < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.62196568080357,
            "correctness": "wrong",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && excerpt.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.5745098407452,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt.length( ) > ) {",
            "score": 99.53751953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) ) ;",
            "score": 99.53516686480978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0) {",
            "score": 99.53488393930289,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.65082839439656,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& error.getCharno( ).length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.57406850961539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < true ) {",
            "score": 99.5349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.53431768002717,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.49939546130952,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.58100947627315,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > charno && charno < sourceExcerpt.length ) {",
            "score": 99.53693359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) ; ) {",
            "score": 99.53443444293478,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return",
            "score": 99.51815941220238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&1<= sourceExcerpt.length( ) ) {",
            "score": 99.49888305664062,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 1 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( '\\n') ; else",
            "score": 99.64990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( '| ') ; else",
            "score": 99.64990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( ' ') ; else",
            "score": 99.64990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( '  ') ; else",
            "score": 99.64990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( 'bar') ; else",
            "score": 99.64990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ; else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno > charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.63975306919643,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.equals( LINE ) )",
            "score": 99.580810546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.53653617527173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt ) {",
            "score": 99.53358369715073,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) )",
            "score": 99.51789994673295,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && excerpt.length( ) ) {",
            "score": 99.64987708782327,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( '\\n') ; b.append( charno ) ;",
            "score": 99.63953125,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( '| ') ; b.append( charno ) ;",
            "score": 99.63953125,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( ' ') ; b.append( charno ) ;",
            "score": 99.63953125,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( '  ') ; b.append( charno ) ;",
            "score": 99.63953125,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( 'bar') ; b.append( charno ) ;",
            "score": 99.63953125,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.571962890625,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&(0<= sourceExcerpt.length( ) ) ) {",
            "score": 99.53386896306819,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && ( 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.toString( ) ) {",
            "score": 99.5335109544837,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) ;",
            "score": 99.51788039434524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.58049982244319,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( excerpt.equals( LINE ) &&0<= charno ) ) {",
            "score": 99.57138543379934,
            "correctness": "plausible",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&(0& charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.5361858865489,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 & char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno ) :",
            "score": 99.53327287946429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) :",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length )",
            "score": 99.51784796463816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >2) {",
            "score": 99.49760509672619,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >11) {",
            "score": 99.49760509672619,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >10) {",
            "score": 99.49760509672619,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >9) {",
            "score": 99.49760509672619,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >2007) {",
            "score": 99.49760509672619,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( '\\n') ; b.append( '\\n') ;",
            "score": 99.64907045717592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( '| ') ; b.append( '| ') ;",
            "score": 99.64907045717592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( ' ') ; b.append( ' ') ;",
            "score": 99.64907045717592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( '  ') ; b.append( '  ') ;",
            "score": 99.64907045717592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( 'bar') ; b.append( 'bar') ;",
            "score": 99.64907045717592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& Character.isWhitespace( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.63921649639423,
            "correctness": "uncompilable",
            "tokenized_patch": "&& Character . is CaMeL Whitespace ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58017758969908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno <0) {",
            "score": 99.57089468149039,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && sourceExcerpt != sourceExcerpt.length( ) ) {",
            "score": 99.5361328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt..length( ) ) {",
            "score": 99.53326970880681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt == sourceExcerpt.length( ) ) {",
            "score": 99.5327481356534,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno ; charno ++ )",
            "score": 99.63916919849537,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ; char@@ no ++ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno <1) {",
            "score": 99.57009652944711,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length - ) {",
            "score": 99.53568725585937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno ) /",
            "score": 99.533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.lineNumber ) {",
            "score": 99.5318603515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= !0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51636904761905,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ! 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0&& charno < sourceExcerpt.length( ) )",
            "score": 99.64883535879629,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } b.append( '\\n') ; b.append( error.description ) ;",
            "score": 99.61771195023148,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } b.append( '| ') ; b.append( error.description ) ;",
            "score": 99.61771195023148,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } b.append( ' ') ; b.append( error.description ) ;",
            "score": 99.61771195023148,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } b.append( '  ') ; b.append( error.description ) ;",
            "score": 99.61771195023148,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } b.append( 'bar') ; b.append( error.description ) ;",
            "score": 99.61771195023148,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > '\\n') {",
            "score": 99.56966796875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $STRING$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > '| ') {",
            "score": 99.56966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > ' ') {",
            "score": 99.56966796875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $STRING$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > '  ') {",
            "score": 99.56966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > 'bar') {",
            "score": 99.56966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && - charno < sourceExcerpt.length( ) ) {",
            "score": 99.53551136363636,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && - char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) */ ) {",
            "score": 99.53160028872283,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * / ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != null ) {",
            "score": 99.516015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2) {",
            "score": 99.49696702223558,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <11) {",
            "score": 99.49696702223558,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <10) {",
            "score": 99.49696702223558,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <9) {",
            "score": 99.49696702223558,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <2007) {",
            "score": 99.49696702223558,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&( charno < sourceExcerpt.length( ) ) )",
            "score": 99.64850983796296,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length ) { {",
            "score": 99.63826810396634,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno && charno < charno &&",
            "score": 99.61700439453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.57978877314815,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no == char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) ==1) {",
            "score": 99.56916015625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& !0<= charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.53536987304688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length ) {",
            "score": 99.51544189453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < length( ) ) {",
            "score": 99.49695354959239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < charno && charno < charno && charno < charno ;",
            "score": 99.63786969866071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ||0<= charno ) {",
            "score": 99.56888521634616,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt.length( ) ) ) { {",
            "score": 99.53516642252605,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt.length( ) ) ; } }",
            "score": 99.53082275390625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )(",
            "score": 99.51500854492187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) (",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) &&0<= charno",
            "score": 99.61620251885776,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < sourceExcerpt != null )",
            "score": 99.57931753305289,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= getLevelName( warning ? CheckLevel.ERROR : CheckLevel.ERROR ) ) {",
            "score": 99.56856595552884,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= get CaMeL Level CaMeL Name ( warning ? Check CaMeL Level . ERROR : Check CaMeL Level . ERROR ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source != sourceExcerpt.length( ) ) {",
            "score": 99.49608313519022,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < sourceExcerpt.length( ) )",
            "score": 99.57924517463235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0*charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56834998497597,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 * char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= '\\n') {",
            "score": 99.5321533203125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $STRING$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= '| ') {",
            "score": 99.5321533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= ' ') {",
            "score": 99.5321533203125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $STRING$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= '  ') {",
            "score": 99.5321533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= 'bar') {",
            "score": 99.5321533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.toString( ) ) {",
            "score": 99.53042263454861,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) && ! charno ) ;",
            "score": 99.5143710049716,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && ! char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno !=0) {",
            "score": 99.49469866071429,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no != 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <0) { b.append( '\\n') ; } b.append( '\\n') ;",
            "score": 99.64671790081522,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '| ') ; } b.append( '| ') ;",
            "score": 99.64671790081522,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( ' ') ; } b.append( ' ') ;",
            "score": 99.64671790081522,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '  ') ; } b.append( '  ') ;",
            "score": 99.64671790081522,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( 'bar') ; } b.append( 'bar') ;",
            "score": 99.64671790081522,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < sourceExcerpt.length( )",
            "score": 99.61515860721983,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= sourceExcerpt.length( ) )",
            "score": 99.57923719618056,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { ) {",
            "score": 99.53215225883152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length )",
            "score": 99.53013780381944,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno >= sourceExcerpt.length ) {",
            "score": 99.51399953741776,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno && charno < charno && charno < sourceExcerpt.length ) ) {",
            "score": 99.63653564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.57912973257211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno &&0<= charno && sourceExcerpt.length( ) < charno ) {",
            "score": 99.56766451322116,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length ; ) {",
            "score": 99.5336181640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length1) {",
            "score": 99.53212280273438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0< sourceExcerpt.length( ) ) {",
            "score": 99.51339561060855,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= 0 && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno && charno < charno",
            "score": 99.61470992476852,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno <= sourceExcerpt.length( ) )",
            "score": 99.57884803185097,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0== charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.53346849524456,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.5317715731534,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt.length( ) )",
            "score": 99.52900623139881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0&&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.51336960565476,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=0&& charno < sourceExcerpt.length ) {",
            "score": 99.4940185546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.length( ) >0) {",
            "score": 99.6461181640625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno < charno && charno < charno ) {",
            "score": 99.63529750279018,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < error.length( ) )",
            "score": 99.57845052083333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < error . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && excerpt.length( ) > sourceExcerpt.length( ) ) {",
            "score": 99.56751427283653,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . length ( ) > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno &&0<= charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.53328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= ) ;",
            "score": 99.53153268914474,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5285113790761,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "|| charno <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51319469105114,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <0) return sourceExcerpt.length( ) ;",
            "score": 99.4934612771739,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) return source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.64591158353366,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&2<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.53197265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&11<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.53197265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&10<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.53197265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&9<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.53197265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2007<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.53197265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) - '\\n') {",
            "score": 99.53152598505434,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $STRING$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) - '| ') {",
            "score": 99.53152598505434,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) - ' ') {",
            "score": 99.53152598505434,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $STRING$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) - '  ') {",
            "score": 99.53152598505434,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) - 'bar') {",
            "score": 99.53152598505434,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ;",
            "score": 99.5283935546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51291232638889,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno && sourceExcerpt.length( ) ) {",
            "score": 99.64541391225961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.61441776670259,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) <0)",
            "score": 99.57744140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < index && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5672607421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < index && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || ) {",
            "score": 99.53099476207386,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.52822043678977,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == length( ) ) {",
            "score": 99.51258433948864,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) &&0<= charno &&0<= charno",
            "score": 99.61419046336206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no && 0 <= char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) &&0<= charno ) {",
            "score": 99.56716684194711,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= *charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.53188254616477,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= * char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) > sourceExcerpt.length( ) )",
            "score": 99.5279541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >=0) {",
            "score": 99.49304780505952,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno &&0<= sourceExcerpt.length( ) )",
            "score": 99.64333767361111,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.61302027209052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( '\\n') )",
            "score": 99.57720947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( '| ') )",
            "score": 99.57720947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( ' ') )",
            "score": 99.57720947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( '  ') )",
            "score": 99.57720947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( 'bar') )",
            "score": 99.57720947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.56701129415761,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.56701129415761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.56701129415761,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.56701129415761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.56701129415761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.531767578125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&11<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.531767578125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&10<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.531767578125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&9<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.531767578125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&2007<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.531767578125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) {0",
            "score": 99.53080610795455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { 0",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '\\n') ; } }",
            "score": 99.52771526834239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '| ') ; } }",
            "score": 99.52771526834239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( ' ') ; } }",
            "score": 99.52771526834239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '  ') ; } }",
            "score": 99.52771526834239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( 'bar') ; } }",
            "score": 99.52771526834239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) || ! charno ) {",
            "score": 99.51197398792614,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) || ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.49298650568181,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.56687575120192,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ; )",
            "score": 99.53172665550595,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= false ) {",
            "score": 99.53074340820312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno || charno < sourceExcerpt.length( ) ) {",
            "score": 99.49297540838069,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) b.append( error.description ) ;",
            "score": 99.64269598599138,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < charno && charno < charno",
            "score": 99.61292375837054,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= excerpt.length( ) ) {",
            "score": 99.56687418619792,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { try {",
            "score": 99.5316852072011,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { try {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&00< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51096413352273,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <0&& sourceExcerpt.length( ) ) {",
            "score": 99.492431640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.64245074728261,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.63016451322116,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( LINE ) &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.61274245689656,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > count ) {",
            "score": 99.566748046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > count ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.53052920386905,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return {",
            "score": 99.52675559303977,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno &&0< sourceExcerpt.length( ) )",
            "score": 99.64208080150463,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && warning <= sourceExcerpt.length( ) ) {",
            "score": 99.61256626674107,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && warning <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno >= sourceExcerpt.length( ) )",
            "score": 99.57665076622597,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ||0<= charno ) {",
            "score": 99.566650390625,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0: charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.53048706054688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 : char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '\\n') ; }",
            "score": 99.52611541748047,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '| ') ; }",
            "score": 99.52611541748047,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( ' ') ; }",
            "score": 99.52611541748047,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '  ') ; }",
            "score": 99.52611541748047,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( 'bar') ; }",
            "score": 99.52611541748047,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && sourceExcerpt.length( ) ) {",
            "score": 99.51071506076389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) throw true ;",
            "score": 99.49209196671195,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) throw true ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno > sourceExcerpt.length( ) )",
            "score": 99.5763690655048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno &&0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56642503004808,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&( charno < sourceExcerpt.length( ) ) )",
            "score": 99.5302734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) ) { ) {",
            "score": 99.52822477921195,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length -1) {",
            "score": 99.52570452008929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && ! charno < sourceExcerpt.length( ) ) {",
            "score": 99.4920070482337,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.64130108173077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < charno && charno < charno )",
            "score": 99.62898472377232,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == charno && charno < sourceExcerpt.length( ) )",
            "score": 99.57635967548077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { { ) ;",
            "score": 99.52820933948864,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt + sourceExcerpt.length( ) ) {",
            "score": 99.52557927911931,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt + source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return true {",
            "score": 99.49190090013587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return true {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { char charno = error.getCharno( ) ;",
            "score": 99.64118904903017,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { char char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) || charno < sourceExcerpt.length( ) ) {",
            "score": 99.5758984375,
            "correctness": "plausible",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= excerpt.length( ) || charno < sourceExcerpt.length( ) ) {",
            "score": 99.56581467848558,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( charno < sourceExcerpt.length( )( ) ) ) {",
            "score": 99.529912109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.0( ) ) {",
            "score": 99.52811104910714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . 0 ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50969904119319,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < source.length( ) )",
            "score": 99.49125532670455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; else",
            "score": 99.64090281519397,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '| ') ; else",
            "score": 99.64090281519397,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( ' ') ; else",
            "score": 99.64090281519397,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '  ') ; else",
            "score": 99.64090281519397,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; else",
            "score": 99.64090281519397,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt.length( ) && excerpt.equals( LINE ) ) {",
            "score": 99.61083142510776,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ||0< charno ) {",
            "score": 99.56571138822116,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && short <= sourceExcerpt.length( ) ) {",
            "score": 99.52965698242187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && short <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.50968852796052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) && charno <0) {",
            "score": 99.49114118303571,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( '\\n') ; b.append( '\\n') ; }",
            "score": 99.64017917798913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '| ') ; b.append( '| ') ; }",
            "score": 99.64017917798913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( ' ') ; b.append( ' ') ; }",
            "score": 99.64017917798913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '  ') ; b.append( '  ') ; }",
            "score": 99.64017917798913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( 'bar') ; b.append( 'bar') ; }",
            "score": 99.64017917798913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < excerpt.length( ) ) {",
            "score": 99.61080078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )( ) ) { ) {",
            "score": 99.5293359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ) { ) {",
            "score": 99.5274074388587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0.length( ) ) {",
            "score": 99.50959329044117,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.61056753305289,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.56553431919643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && null < sourceExcerpt.length( ) ) {",
            "score": 99.50948486328124,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && null < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) < charno ) {",
            "score": 99.57432725694444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >0) { ) {",
            "score": 99.527099609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( ) ==0) {",
            "score": 99.50924072265624,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno >= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.48985706676136,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.637451171875,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < charno && charno < charno &&",
            "score": 99.62450299944196,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( error.description ) ; } b.append( '\\n') ;",
            "score": 99.60994466145833,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( error.description ) ; } b.append( '| ') ;",
            "score": 99.60994466145833,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( error.description ) ; } b.append( ' ') ;",
            "score": 99.60994466145833,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( error.description ) ; } b.append( '  ') ;",
            "score": 99.60994466145833,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( error.description ) ; } b.append( 'bar') ;",
            "score": 99.60994466145833,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) &&0<= sourceExcerpt.length( ) )",
            "score": 99.57386610243056,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length ; ) {",
            "score": 99.52861328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( )1) {",
            "score": 99.52677055027173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno != sourceExcerpt.length( ) -1) {",
            "score": 99.52328889266305,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0>= sourceExcerpt.length ) {",
            "score": 99.50845675998264,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 >= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.60992431640625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& ! charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5729471842448,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < error.length( ) ) {",
            "score": 99.564755859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.52838134765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source || charno < sourceExcerpt.length( ) ) {",
            "score": 99.5263671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { { b.append( '\\n') ; }",
            "score": 99.52326766304348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { { b.append( '| ') ; }",
            "score": 99.52326766304348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { { b.append( ' ') ; }",
            "score": 99.52326766304348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { { b.append( '  ') ; }",
            "score": 99.52326766304348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { { b.append( 'bar') ; }",
            "score": 99.52326766304348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length )",
            "score": 99.50840928819444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0&& charno < sourceExcerpt.length( ) )",
            "score": 99.63651982060185,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < charno && charno < charno ) {",
            "score": 99.6239522298177,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.57290762442129,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno >= sourceExcerpt.length( ) ) ) {",
            "score": 99.52785326086956,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != ! charno ) {",
            "score": 99.50811212713069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length < sourceExcerpt.length( ) ) {",
            "score": 99.48928965692934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.623779296875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ! sourceExcerpt.length( ) ) {",
            "score": 99.60950159143519,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < sourceExcerpt.length )",
            "score": 99.57272677951389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0> charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.56417142427884,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 > char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=0&&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.527568359375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && source.length < sourceExcerpt.length( ) ) {",
            "score": 99.5078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( LINE ) )",
            "score": 99.57259114583333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.5275370279948,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'< sourceExcerpt.length( ) ) {",
            "score": 99.52572631835938,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && '| '< sourceExcerpt.length( ) ) {",
            "score": 99.52572631835938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '< sourceExcerpt.length( ) ) {",
            "score": 99.52572631835938,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && '  '< sourceExcerpt.length( ) ) {",
            "score": 99.52572631835938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'< sourceExcerpt.length( ) ) {",
            "score": 99.52572631835938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0< charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.52230980282738,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& !0&& charno < sourceExcerpt.length ) {",
            "score": 99.50763298483456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.489013671875,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) b.append( '\\n') ;",
            "score": 99.63514055524554,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) b.append( '| ') ;",
            "score": 99.63514055524554,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) b.append( ' ') ;",
            "score": 99.63514055524554,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) b.append( '  ') ;",
            "score": 99.63514055524554,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) b.append( 'bar') ;",
            "score": 99.63514055524554,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) &&0<= charno ) {",
            "score": 99.57204861111111,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && error.lineNumber >0) {",
            "score": 99.56398518880208,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && error . line CaMeL Number > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0, charno < sourceExcerpt.length( ) ) {",
            "score": 99.52681477864583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 , char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( sourceExcerpt.length( ) ) )",
            "score": 99.52207253196023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& <0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.50714432565789,
            "correctness": "uncompilable",
            "tokenized_patch": "&& < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) break ;",
            "score": 99.48878173828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) break ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) >0)",
            "score": 99.634521484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) continue ; b.append( '\\n') ;",
            "score": 99.60878569504311,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) continue ; b.append( '| ') ;",
            "score": 99.60878569504311,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) continue ; b.append( ' ') ;",
            "score": 99.60878569504311,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) continue ; b.append( '  ') ;",
            "score": 99.60878569504311,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) continue ; b.append( 'bar') ;",
            "score": 99.60878569504311,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0<= sourceExcerpt.length( ) )",
            "score": 99.571962890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) -1)",
            "score": 99.52187278053977,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) - 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { int charno = error.getCharno( ) ;",
            "score": 99.63351004464286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < charno &&0<= charno",
            "score": 99.60831705729167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no && 0 <= char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt != sourceExcerpt.length( ) ) {",
            "score": 99.525966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno( sourceExcerpt.length( ) ) ) {",
            "score": 99.52454723011364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.lineNumber )",
            "score": 99.5216064453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . line CaMeL Number )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) ?",
            "score": 99.50695219494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ?",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt.length( ) {",
            "score": 99.48759128736413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno &&",
            "score": 99.6079434481534,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && error.getCharno( ) < charno ) {",
            "score": 99.56236328125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && error . get CaMeL Char@@ no ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length -2) {",
            "score": 99.52594866071429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length -11) {",
            "score": 99.52594866071429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length -10) {",
            "score": 99.52594866071429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length -9) {",
            "score": 99.52594866071429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length -2007) {",
            "score": 99.52594866071429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <2) {",
            "score": 99.52440185546875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <11) {",
            "score": 99.52440185546875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <10) {",
            "score": 99.52440185546875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <9) {",
            "score": 99.52440185546875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <2007) {",
            "score": 99.52440185546875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == true ) {",
            "score": 99.50674438476562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length )",
            "score": 99.48734714673913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.62084089006696,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( )( ) >0)",
            "score": 99.57109013310185,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0>> charno < sourceExcerpt.length( ) ) {",
            "score": 99.56234077785327,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 >> char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) -2) {",
            "score": 99.52152683423913,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) -11) {",
            "score": 99.52152683423913,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) -10) {",
            "score": 99.52152683423913,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) -9) {",
            "score": 99.52152683423913,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) -2007) {",
            "score": 99.52152683423913,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( false ) ) {",
            "score": 99.50664992559524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( false ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt..length ) {",
            "score": 99.48693237304687,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.63246889467592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { ) {",
            "score": 99.620361328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.60636683872768,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.length( ) >= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( '\\n') ) {",
            "score": 99.56228155838816,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( '| ') ) {",
            "score": 99.56228155838816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( ' ') ) {",
            "score": 99.56228155838816,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( '  ') ) {",
            "score": 99.56228155838816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( 'bar') ) {",
            "score": 99.56228155838816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.52515665690105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0< sourceExcerpt.length( ) ) ) {",
            "score": 99.50659897748162,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno )",
            "score": 99.48677884615384,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| charno < charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.62008231026786,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) break ; b.append( '\\n') ;",
            "score": 99.60613382273706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) break ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) break ; b.append( '| ') ;",
            "score": 99.60613382273706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) break ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) break ; b.append( ' ') ;",
            "score": 99.60613382273706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) break ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) break ; b.append( '  ') ;",
            "score": 99.60613382273706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) break ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) break ; b.append( 'bar') ;",
            "score": 99.60613382273706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) break ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&1<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.52498046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 1 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source.charno < sourceExcerpt.length( ) ) {",
            "score": 99.52401069972827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '\\n') ; b.append( error.description ) ; }",
            "score": 99.631806640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '| ') ; b.append( error.description ) ; }",
            "score": 99.631806640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( ' ') ; b.append( error.description ) ; }",
            "score": 99.631806640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '  ') ; b.append( error.description ) ; }",
            "score": 99.631806640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( 'bar') ; b.append( error.description ) ; }",
            "score": 99.631806640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.61971609933036,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno == '\\n') {",
            "score": 99.60592886117789,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == $STRING$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno == '| ') {",
            "score": 99.60592886117789,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno == ' ') {",
            "score": 99.60592886117789,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == $STRING$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno == '  ') {",
            "score": 99.60592886117789,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno == 'bar') {",
            "score": 99.60592886117789,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt2.length( ) ) {",
            "score": 99.5249356356534,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt $NUMBER$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt11.length( ) ) {",
            "score": 99.5249356356534,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt $NUMBER$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt10.length( ) ) {",
            "score": 99.5249356356534,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt $NUMBER$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt9.length( ) ) {",
            "score": 99.5249356356534,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt $NUMBER$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt2007.length( ) ) {",
            "score": 99.5249356356534,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt $NUMBER$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno < sourceExcerpt.length( ) -1) {",
            "score": 99.5208050271739,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0!= charno && sourceExcerpt.length( ) ) {",
            "score": 99.50639512803819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >= charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.56985134548611,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no >= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >=0) {",
            "score": 99.5607421875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && ! sourceExcerpt.length( ) >0) {",
            "score": 99.48633922230114,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) > charno && charno < sourceExcerpt.length( ) )",
            "score": 99.63090297154018,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length ++ ) {",
            "score": 99.61836299189815,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >= sourceExcerpt.length && charno < sourceExcerpt.length( ) ) {",
            "score": 99.60547779224537,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no >= source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) continue ;",
            "score": 99.5697711447011,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '\\n') &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.56057739257812,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '| ') &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.56057739257812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( ' ') &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.56057739257812,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '  ') &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.56057739257812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( 'bar') &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.56057739257812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2&& charno < sourceExcerpt.length( ) )",
            "score": 99.52455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <11&& charno < sourceExcerpt.length( ) )",
            "score": 99.52455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <10&& charno < sourceExcerpt.length( ) )",
            "score": 99.52455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <9&& charno < sourceExcerpt.length( ) )",
            "score": 99.52455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2007&& charno < sourceExcerpt.length( ) )",
            "score": 99.52455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { :",
            "score": 99.52276056463069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { :",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<=0&& charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.50584827769886,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) && true ) {",
            "score": 99.48545143821023,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && true ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno <",
            "score": 99.6179668719952,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length && excerpt.equals( '\\n') ) {",
            "score": 99.60517229352679,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length && excerpt.equals( '| ') ) {",
            "score": 99.60517229352679,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length && excerpt.equals( ' ') ) {",
            "score": 99.60517229352679,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length && excerpt.equals( '  ') ) {",
            "score": 99.60517229352679,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length && excerpt.equals( 'bar') ) {",
            "score": 99.60517229352679,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( charno >= sourceExcerpt.length( ) ) ) {",
            "score": 99.52262015964673,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.getLength( ) ) {",
            "score": 99.52003309461806,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . get CaMeL Length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { true",
            "score": 99.48506303267045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { true",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( )",
            "score": 99.630263671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < sourceExcerpt != null ) {",
            "score": 99.6049171730324,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < sourceExcerpt ) {",
            "score": 99.569609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<< charno < sourceExcerpt.length( ) ) {",
            "score": 99.5598675271739,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 << char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& '\\n'<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52250744047619,
            "correctness": "wrong",
            "tokenized_patch": "&& $STRING$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& '| '<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52250744047619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& $STRING$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ' '<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52250744047619,
            "correctness": "wrong",
            "tokenized_patch": "&& $STRING$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& '  '<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52250744047619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& $STRING$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& 'bar'<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52250744047619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& $STRING$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.toString( ) ) {",
            "score": 99.51951002038044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < ! sourceExcerpt.length ) {",
            "score": 99.50518188476562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ! source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| sourceExcerpt.length < sourceExcerpt.length( ) ) {",
            "score": 99.48501441592262,
            "correctness": "uncompilable",
            "tokenized_patch": "|| source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '\\n') ;",
            "score": 99.6301953125,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '| ') ;",
            "score": 99.6301953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( ' ') ;",
            "score": 99.6301953125,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '  ') ;",
            "score": 99.6301953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( 'bar') ;",
            "score": 99.6301953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno && charno < charno && charno < charno && charno < charno ) )",
            "score": 99.61725725446429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.60491473858173,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && excerpt.length( )",
            "score": 99.5690285011574,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && sourceExcerpt.equals( LINE ) ) {",
            "score": 99.5597635904948,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ==0) {",
            "score": 99.52371348505434,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2< sourceExcerpt.length( ) ) {",
            "score": 99.5222412109375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&11< sourceExcerpt.length( ) ) {",
            "score": 99.5222412109375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&10< sourceExcerpt.length( ) ) {",
            "score": 99.5222412109375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&9< sourceExcerpt.length( ) ) {",
            "score": 99.5222412109375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&2007< sourceExcerpt.length( ) ) {",
            "score": 99.5222412109375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && options.length < sourceExcerpt.length( ) ) {",
            "score": 99.50506036931819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && options . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno < charno && charno <",
            "score": 99.62986597521552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no && char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < charno && charno < charno ) {",
            "score": 99.61710611979167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno == sourceExcerpt.length( ) )",
            "score": 99.56895616319444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { ) {",
            "score": 99.52189497514205,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= == charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50453879616477,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < -1&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.48466352982955,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < - 1 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno &&0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.62960250289352,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '\\n') ; }",
            "score": 99.61661783854167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '| ') ; }",
            "score": 99.61661783854167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( ' ') ; }",
            "score": 99.61661783854167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '  ') ; }",
            "score": 99.61661783854167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( 'bar') ; }",
            "score": 99.61661783854167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < charno )",
            "score": 99.56892533735795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno( sourceExcerpt ) ) {",
            "score": 99.55781886888587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) ;",
            "score": 99.52155412946429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt , sourceExcerpt.length( ) ) {",
            "score": 99.51924272017045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt , source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= null && charno < sourceExcerpt.length( ) ) {",
            "score": 99.504345703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= null && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < end && charno < sourceExcerpt.length( ) ) {",
            "score": 99.48463076636905,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < end && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( sourceExcerpt ) ;",
            "score": 99.62914100060097,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.60269059806035,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0== charno && charno < sourceExcerpt.length( ) )",
            "score": 99.56859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) > ) {",
            "score": 99.55763671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { /",
            "score": 99.52135120738636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.lineNumber( ) ) {",
            "score": 99.51909044053819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) {",
            "score": 99.48438720703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length( ) && {",
            "score": 99.61601911272321,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= sourceExcerpt.length( ) )",
            "score": 99.56858317057292,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length || charno < sourceExcerpt.length ) {",
            "score": 99.52298828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length || char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=0) { {",
            "score": 99.52129836309524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.51887650923295,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt.length ) {",
            "score": 99.50388405539773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno <=0) {",
            "score": 99.48396809895833,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no <= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.62806919642857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( )( ) <=0)",
            "score": 99.56852213541667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) ( ) <= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0& charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.55701264880952,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 & char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( )( ) ) {",
            "score": 99.522861328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno ) *",
            "score": 99.52100771949405,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) >0) {",
            "score": 99.51859283447266,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno( ) )",
            "score": 99.61544363839286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != sourceExcerpt.length( ) || charno < sourceExcerpt.length( ) ) {",
            "score": 99.60148673221983,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56847692418981,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) < charno ) ;",
            "score": 99.52099609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) < char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return {",
            "score": 99.51810886548913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false == charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50353422619048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.61488172743056,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&( charno > sourceExcerpt.length( ) ) ) {",
            "score": 99.55520290798611,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&(0< charno && sourceExcerpt.length( )( ) ) ) {",
            "score": 99.50288529829545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( error.lineNumber ) ;",
            "score": 99.62694408275463,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . line CaMeL Number ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.61478969029018,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < next && charno < sourceExcerpt.length( ) ) {",
            "score": 99.60021033653847,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < next && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && sourceExcerpt != null ) {",
            "score": 99.555126953125,
            "correctness": "plausible",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length(( ) ) ) {",
            "score": 99.52237601902173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) *2) {",
            "score": 99.51721722146739,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) *11) {",
            "score": 99.51721722146739,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) *10) {",
            "score": 99.51721722146739,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) *9) {",
            "score": 99.51721722146739,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) *2007) {",
            "score": 99.51721722146739,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && false )",
            "score": 99.48296564275569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && false )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6262715657552,
            "correctness": "uncompilable",
            "tokenized_patch": "int char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno ) {",
            "score": 99.61415608723958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno == charno && charno < sourceExcerpt.length( ) )",
            "score": 99.56809714988425,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) <= LINE ) {",
            "score": 99.55498046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length >0) {",
            "score": 99.52058919270833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno == sourceExcerpt.length( ) -1) {",
            "score": 99.51718537703805,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && false == sourceExcerpt.length( ) ) {",
            "score": 99.50238037109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= sourceExcerpt.length ) {",
            "score": 99.482666015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) != charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.62578293372844,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.61393519810268,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && !0<= sourceExcerpt.length( ) ) {",
            "score": 99.59997979525862,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ! 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= excerpt.length( ) ) {",
            "score": 99.56795560396634,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { }",
            "score": 99.52031860351562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( '\\n') ; }",
            "score": 99.51683349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( '| ') ; }",
            "score": 99.51683349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( ' ') ; }",
            "score": 99.51683349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( '  ') ; }",
            "score": 99.51683349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( 'bar') ; }",
            "score": 99.51683349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && <= sourceExcerpt.length( ) ) {",
            "score": 99.50224223889802,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) return b.toString( ) ;",
            "score": 99.62558930495689,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return b . to CaMeL String ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ? CheckLevel.ERROR : CheckLevel.ERROR ) ) {",
            "score": 99.61383056640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ? Check CaMeL Level . ERROR : Check CaMeL Level . ERROR ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno >0) {",
            "score": 99.55475725446429,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.getLength( ) ) {",
            "score": 99.51658033288044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . get CaMeL Length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && sourceExcerpt.length ) {",
            "score": 99.50205775669643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length(2) ) {",
            "score": 99.48213334517045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( $NUMBER$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length(11) ) {",
            "score": 99.48213334517045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( $NUMBER$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length(10) ) {",
            "score": 99.48213334517045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( $NUMBER$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length(9) ) {",
            "score": 99.48213334517045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( $NUMBER$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length(2007) ) {",
            "score": 99.48213334517045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( $NUMBER$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( sourceExcerpt ) ;",
            "score": 99.62534516433189,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { {",
            "score": 99.61360677083333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59978778545673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) <= charno ) {",
            "score": 99.56755461516204,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ) { ) ;",
            "score": 99.52017875339673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.50197882401316,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt ) {",
            "score": 99.48201127485795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( sourceExcerpt.length( ) >0) && charno < sourceExcerpt.length( ) )",
            "score": 99.62478953394397,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno &&0<= charno",
            "score": 99.59918844288794,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && 0 <= char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) <= sourceExcerpt.length( ) ) {",
            "score": 99.5674060639881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <( sourceExcerpt.length( ) -1) ) {",
            "score": 99.52138671875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ( source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& !0<= charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.51619096235795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) && charno <",
            "score": 99.62459590517241,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) continue ; b.append( '\\n') ;",
            "score": 99.56740315755208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) continue ; b.append( '| ') ;",
            "score": 99.56740315755208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) continue ; b.append( ' ') ;",
            "score": 99.56740315755208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) continue ; b.append( '  ') ;",
            "score": 99.56740315755208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) continue ; b.append( 'bar') ;",
            "score": 99.56740315755208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >= LINE ) {",
            "score": 99.553173828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno > charno < sourceExcerpt.length( ) ) {",
            "score": 99.52123046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno > sourceExcerpt.length( )( ) ) {",
            "score": 99.51607082201087,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false <= charno && charno < sourceExcerpt.length ) {",
            "score": 99.50168328536184,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno <2) {",
            "score": 99.48170872738487,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno <11) {",
            "score": 99.48170872738487,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno <10) {",
            "score": 99.48170872738487,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno <9) {",
            "score": 99.48170872738487,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno <2007) {",
            "score": 99.48170872738487,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( '\\n') ;",
            "score": 99.62446732954545,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( '| ') ;",
            "score": 99.62446732954545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( ' ') ;",
            "score": 99.62446732954545,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( '  ') ;",
            "score": 99.62446732954545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( 'bar') ;",
            "score": 99.62446732954545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno && charno )",
            "score": 99.61208871694711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.59893329326923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && b.append( '\\n') )",
            "score": 99.56727430555556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && b.append( '| ') )",
            "score": 99.56727430555556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && b.append( ' ') )",
            "score": 99.56727430555556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && b.append( '  ') )",
            "score": 99.56727430555556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && b.append( 'bar') )",
            "score": 99.56727430555556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && sourceExcerpt.length( ) >1) {",
            "score": 99.5531640625,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<=0<= charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.51582668138587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'!= sourceExcerpt.length( ) ) {",
            "score": 99.50106201171874,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && '| '!= sourceExcerpt.length( ) ) {",
            "score": 99.50106201171874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '!= sourceExcerpt.length( ) ) {",
            "score": 99.50106201171874,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && '  '!= sourceExcerpt.length( ) ) {",
            "score": 99.50106201171874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'!= sourceExcerpt.length( ) ) {",
            "score": 99.50106201171874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > length ) {",
            "score": 99.4815185546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '\\n') ; } else",
            "score": 99.62395109953704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '| ') ; } else",
            "score": 99.62395109953704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( ' ') ; } else",
            "score": 99.62395109953704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '  ') ; } else",
            "score": 99.62395109953704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( 'bar') ; } else",
            "score": 99.62395109953704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno &&0)",
            "score": 99.61191231863839,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( error.description ) ; b.append( '\\n') ; }",
            "score": 99.59829824942129,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( error.description ) ; b.append( '| ') ; }",
            "score": 99.59829824942129,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( error.description ) ; b.append( ' ') ; }",
            "score": 99.59829824942129,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( error.description ) ; b.append( '  ') ; }",
            "score": 99.59829824942129,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( error.description ) ; b.append( 'bar') ; }",
            "score": 99.59829824942129,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0!= sourceExcerpt.length( ) )",
            "score": 99.56718388310185,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 != source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno &&0<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.55140625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( sourceExcerpt.length( ) < sourceExcerpt.length( ) ) ) {",
            "score": 99.52103515625,
            "correctness": "wrong",
            "tokenized_patch": "&& ( source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { { ) ; }",
            "score": 99.51955247961956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { { ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { return",
            "score": 99.50093217329545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=1&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.48150344122024,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= 1 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && ! charno < sourceExcerpt.length( ) ) {",
            "score": 99.5982666015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != charno && charno < sourceExcerpt.length( ) )",
            "score": 99.567138671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno >0&& charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.55135444972827,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no > 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.62334735576923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.62334735576923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.62334735576923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.62334735576923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.62334735576923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( ) ==0) {",
            "score": 99.56693209134616,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && error.sourceName != null ) {",
            "score": 99.55116780598958,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && error . source CaMeL Name != null ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&(0< charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.520595703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( 0 < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) < charno ) ;",
            "score": 99.51920942826705,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || {",
            "score": 99.49865141369048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.59800368088942,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= excerpt.length( ) )",
            "score": 99.566875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0> charno && sourceExcerpt.length( ) >0) {",
            "score": 99.550400390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 > char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && source.length( ) > sourceExcerpt.length( ) ) {",
            "score": 99.52053833007812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length ( ) > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length < sourceExcerpt.length( ) ) {",
            "score": 99.48049094460227,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < isWhitespace &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.56633391203704,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < is CaMeL Whitespace && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < error.length( ) ) {",
            "score": 99.55037064985795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) {0{",
            "score": 99.51908542798913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { 0 {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt.length ) {",
            "score": 99.51487426757812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '\\n') ;",
            "score": 99.61112253289474,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '| ') ;",
            "score": 99.61112253289474,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( ' ') ;",
            "score": 99.61112253289474,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '  ') ;",
            "score": 99.61112253289474,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( 'bar') ;",
            "score": 99.61112253289474,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( )",
            "score": 99.56620649857955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&( charno < sourceExcerpt.length( )",
            "score": 99.54984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.52016194661458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { { *",
            "score": 99.5189792798913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4984463778409,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && excerpt.equals( LINE ) ) {",
            "score": 99.61052594866071,
            "correctness": "plausible",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) )",
            "score": 99.5658710186298,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && ! sourceExcerpt.equals( LINE ) ) {",
            "score": 99.5488671875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { / /",
            "score": 99.5187351392663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { / /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno < sourceExcerpt.length( ) -1) {",
            "score": 99.5139690896739,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) &&0<= charno && charno <",
            "score": 99.62106759207589,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no && char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || ! sourceExcerpt.equals( LINE ) ) {",
            "score": 99.59666224888393,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt1.length( ) ) {",
            "score": 99.51948686079545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt 1 . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) < sourceExcerpt.length( ) )",
            "score": 99.51384943181819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && this.charno < sourceExcerpt.length ) {",
            "score": 99.49809337797619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && this . char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) !=0) {",
            "score": 99.47736467633929,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length )",
            "score": 99.60958862304688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0&&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5194091796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno( sourceExcerpt.length ) ) {",
            "score": 99.51799210258152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ( source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt( sourceExcerpt.length( ) ) ) {",
            "score": 99.51308806046195,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) <0) {",
            "score": 99.4978360262784,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) &&",
            "score": 99.47662062872024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0)",
            "score": 99.620654296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < charno ) {",
            "score": 99.60719896399456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno &&0<= charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.59638503502156,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) < LINE ) )",
            "score": 99.548212890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { ) :",
            "score": 99.51789656929348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) :",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( sourceExcerpt.trim( ) ) ) {",
            "score": 99.51301375679348,
            "correctness": "wrong",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt . trim ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <= ) {",
            "score": 99.47614135742188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; int charno = error.getCharno( ) ; if( charno <",
            "score": 99.59592982700893,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ; if ( char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; int charno = error.getCharno( ) ; if( charno <",
            "score": 99.59592982700893,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ; if ( char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; int charno = error.getCharno( ) ; if( charno <",
            "score": 99.59592982700893,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ; if ( char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; int charno = error.getCharno( ) ; if( charno <",
            "score": 99.59592982700893,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ; if ( char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; int charno = error.getCharno( ) ; if( charno <",
            "score": 99.59592982700893,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; int char@@ no = error . get CaMeL Char@@ no ( ) ; if ( char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= charno && charno < charno )",
            "score": 99.56502591646634,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.lineNumber < sourceExcerpt.length( ) ) {",
            "score": 99.54819207442434,
            "correctness": "plausible",
            "tokenized_patch": "&& error . line CaMeL Number < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= & charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5187100497159,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= & char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? charno : sourceExcerpt.length( ) )",
            "score": 99.59561593191964,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no : source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > null ) {",
            "score": 99.54814453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt.length( ) ) ) { ) {",
            "score": 99.518671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno , sourceExcerpt.length( ) >0) {",
            "score": 99.51233440896739,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no , source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.4759854403409,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) )",
            "score": 99.62000947840073,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { {",
            "score": 99.6060458096591,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.5953838641827,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <11&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.5953838641827,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <10&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.5953838641827,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <9&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.5953838641827,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <2007&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.5953838641827,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& error.getCharno( ) <= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5646339699074,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno : charno < sourceExcerpt.length( ) ) {",
            "score": 99.54810587565105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no : char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( sourceExcerpt ) ) {",
            "score": 99.51848038383152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { / *",
            "score": 99.51724906589673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { / *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( sourceExcerpt ) ; }",
            "score": 99.51216430664063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt != length ) {",
            "score": 99.4968197471217,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt != length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno > sourceExcerpt.length( ) ) {",
            "score": 99.47588820684524,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno > sourceExcerpt.length( ) )",
            "score": 99.619384765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { b.append( '\\n') ; }",
            "score": 99.60585239955357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { b.append( '| ') ; }",
            "score": 99.60585239955357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { b.append( ' ') ; }",
            "score": 99.60585239955357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { b.append( '  ') ; }",
            "score": 99.60585239955357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { b.append( 'bar') ; }",
            "score": 99.60585239955357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.equals( LINE ) )",
            "score": 99.56459738991477,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) &&0<= charno ;",
            "score": 99.547236328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && !0<= sourceExcerpt.length( ) ) {",
            "score": 99.51712472098214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& sourceExcerpt.length( ) >0) {",
            "score": 99.4755126953125,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { System.out.println( ) ;",
            "score": 99.61807987607759,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { System . out . println ( ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno < charno &&",
            "score": 99.60584368024554,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno == charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59341866629464,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0>= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.56451171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno ++ < sourceExcerpt.length( ) ) {",
            "score": 99.5469637784091,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no ++ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.count( ) ) {",
            "score": 99.51091657366071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . count ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < options.length ) {",
            "score": 99.4950439453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < options . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( sourceExcerpt.length( ) >0) &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.61749057112068,
            "correctness": "plausible",
            "tokenized_patch": "&& ( source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( charno ) ) {",
            "score": 99.5930645282452,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) ) {",
            "score": 99.51677856445312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.getLength( ) ) {",
            "score": 99.5106891134511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . get CaMeL Length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) && sourceExcerpt.length( ) >0)",
            "score": 99.61749057112068,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < charno && charno < charno ; charno ++ )",
            "score": 99.60426613136575,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no ; char@@ no ++ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0< sourceExcerpt.length( ) ) {",
            "score": 99.59298270089286,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && error.sourceName.length( ) >0)",
            "score": 99.564208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && error . source CaMeL Name . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51785714285714,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && source.charno < sourceExcerpt.length ) {",
            "score": 99.49480329241071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && && charno < sourceExcerpt.length ) {",
            "score": 99.4743408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.617080078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.60416015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >> < sourceExcerpt.length( ) ) {",
            "score": 99.54644220525569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >> < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < sourceExcerpt ) {",
            "score": 99.51645729758523,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { {",
            "score": 99.4945132606908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.6168721516927,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length( )",
            "score": 99.60304612379808,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && excerpt.equals( '\\n') ) {",
            "score": 99.592529296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && excerpt.equals( '| ') ) {",
            "score": 99.592529296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && excerpt.equals( ' ') ) {",
            "score": 99.592529296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && excerpt.equals( '  ') ) {",
            "score": 99.592529296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && excerpt.equals( 'bar') ) {",
            "score": 99.592529296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( ) >=0)",
            "score": 99.5634375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) >= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno && charno < sourceExcerpt.length ) ) {",
            "score": 99.49416281960227,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.contains( sourceExcerpt.length( ) ) ) {",
            "score": 99.47343306107955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . contains ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; int",
            "score": 99.61615200700432,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; int",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '| ') ; int",
            "score": 99.61615200700432,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; int",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( ' ') ; int",
            "score": 99.61615200700432,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; int",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( '  ') ; int",
            "score": 99.61615200700432,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; int",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; int",
            "score": 99.61615200700432,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; int",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length0) {",
            "score": 99.60298213252315,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.592421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || '\\n'<= sourceExcerpt.length( ) )",
            "score": 99.56298828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || '| '<= sourceExcerpt.length( ) )",
            "score": 99.56298828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || ' '<= sourceExcerpt.length( ) )",
            "score": 99.56298828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || '  '<= sourceExcerpt.length( ) )",
            "score": 99.56298828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || 'bar'<= sourceExcerpt.length( ) )",
            "score": 99.56298828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || $STRING$ <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && sourceExcerpt.length( ) < LINE ) {",
            "score": 99.54626953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno , charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51766967773438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no , char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno ) { )",
            "score": 99.5155362215909,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) -1)",
            "score": 99.50885564630681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) - 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length < ! sourceExcerpt.length( ) ) {",
            "score": 99.47304465553977,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length < ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) <= charno )",
            "score": 99.5629413311298,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0< charno && charno > sourceExcerpt.length( ) ) ) {",
            "score": 99.50830078125,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) }",
            "score": 99.49388485863095,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ==0) {",
            "score": 99.4729236421131,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > sourceExcerpt.length && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59226707175925,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5629249855324,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no != char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { if( error.description != null ) {",
            "score": 99.545751953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { if ( error . description != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0& charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51722208658855,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 & char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.47230834960938,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt && charno < sourceExcerpt.length ) {",
            "score": 99.6024169921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno <0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.59205005787037,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( )( ) )",
            "score": 99.56258491847827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) !=0) {",
            "score": 99.54546875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )( ) ; ) {",
            "score": 99.5166727701823,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= ) { {",
            "score": 99.514501953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) /2) {",
            "score": 99.50703938802083,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "1"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) /11) {",
            "score": 99.50703938802083,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) /10) {",
            "score": 99.50703938802083,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) /9) {",
            "score": 99.50703938802083,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) /2007) {",
            "score": 99.50703938802083,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( )( ) >=0) {",
            "score": 99.49296431107955,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno <= sourceExcerpt.length ) {",
            "score": 99.47202758789062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( sourceExcerpt ) ; }",
            "score": 99.61447482638889,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < charno && charno < charno && charno < charno )",
            "score": 99.60205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) && charno <= sourceExcerpt.length( ) )",
            "score": 99.56244574652777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno &&0<= charno ) {",
            "score": 99.54527452256944,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&( charno == sourceExcerpt.length( ) ) ) {",
            "score": 99.5164104959239,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&1< sourceExcerpt.length( ) ) {",
            "score": 99.51434326171875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 1 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) >0) {",
            "score": 99.5070163892663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && !0&& charno < sourceExcerpt.length ) {",
            "score": 99.492919921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.614111328125,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { } else {",
            "score": 99.60185546875,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < excerpt.length( ) ) {",
            "score": 99.59009806315105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) ;",
            "score": 99.56237262228261,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ; if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.54508109714673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ; if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) + charno ) {",
            "score": 99.51625569661458,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ) { {",
            "score": 99.5140713778409,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == sourceExcerpt.sourceExcerpt.length( ) ) {",
            "score": 99.50701349431819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == source CaMeL Ex@@ cer@@ pt . source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0== charno && sourceExcerpt.length( ) ) {",
            "score": 99.4927645596591,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && 0 == char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno <0) {",
            "score": 99.47188895089286,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= excerpt.length( ) && charno < sourceExcerpt.length( ) )",
            "score": 99.562255859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& getLevelName( warning ? CheckLevel.ERROR : CheckLevel.ERROR ) ) {",
            "score": 99.54421997070312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& get CaMeL Level CaMeL Name ( warning ? Check CaMeL Level . ERROR : Check CaMeL Level . ERROR ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length < charno ) {",
            "score": 99.51406028053977,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && true &&0< sourceExcerpt.length( ) ) {",
            "score": 99.49253151633523,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && true && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) < charno && sourceExcerpt.length( ) >0) {",
            "score": 99.61324637276786,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.60075774016204,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == sourceExcerpt.length( ) && excerpt.equals( LINE ) ) {",
            "score": 99.543642578125,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) <= ) {",
            "score": 99.51386951264881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) <= ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) /2) {",
            "score": 99.50685716711956,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "1"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) /11) {",
            "score": 99.50685716711956,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) /10) {",
            "score": 99.50685716711956,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) /9) {",
            "score": 99.50685716711956,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) /2007) {",
            "score": 99.50685716711956,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) && false ) {",
            "score": 99.4924560546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <= sourceExcerpt.length( ) )",
            "score": 99.47060324928977,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && excerpt.length( ) )",
            "score": 99.613037109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno < charno",
            "score": 99.59994393807871,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58960865162037,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& b.equals( LINE ) &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.56126121238425,
            "correctness": "uncompilable",
            "tokenized_patch": "&& b . equals ( LINE ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && error.lineNumber < sourceExcerpt.length( ) ) {",
            "score": 99.54364013671875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && error . line CaMeL Number < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno *sourceExcerpt.length( ) ) {",
            "score": 99.51539103190105,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no * source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { ?",
            "score": 99.51340553977273,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ?",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno + sourceExcerpt.length( ) >0) {",
            "score": 99.50684655230978,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no + source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) &&",
            "score": 99.49186197916667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <=2) {",
            "score": 99.47031947544643,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <=11) {",
            "score": 99.47031947544643,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <=10) {",
            "score": 99.47031947544643,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <=9) {",
            "score": 99.47031947544643,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <=2007) {",
            "score": 99.47031947544643,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) < sourceExcerpt.length( ) )",
            "score": 99.61295863560268,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( sourceExcerpt.length( ) ) ) {",
            "score": 99.59920247395833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.56118539663461,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) || excerpt.equals( '\\n') ) {",
            "score": 99.5435546875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) || excerpt.equals( '| ') ) {",
            "score": 99.5435546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) || excerpt.equals( ' ') ) {",
            "score": 99.5435546875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) || excerpt.equals( '  ') ) {",
            "score": 99.5435546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) || excerpt.equals( 'bar') ) {",
            "score": 99.5435546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno( charno ) ) {",
            "score": 99.51334635416667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.sourceExcerpt.length( ) ) {",
            "score": 99.50681374289773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) }",
            "score": 99.4915835731908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.61218843005952,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE , charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.59892054966518,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE , char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( )( ) < sourceExcerpt.length( ) ) {",
            "score": 99.514775390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.( ) ) {",
            "score": 99.5130859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) ;",
            "score": 99.5065185546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != false ) {",
            "score": 99.49148559570312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) {",
            "score": 99.47028459821429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.6121356670673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.6121356670673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.6121356670673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.6121356670673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.6121356670673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.59768337673611,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) && excerpt != null )",
            "score": 99.56090856481481,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.50624302455357,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0<= charno || charno < sourceExcerpt.length( ) ) {",
            "score": 99.49130394345238,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > CheckLevel.ERROR ) {",
            "score": 99.54258219401042,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length + sourceExcerpt.length( ) ) {",
            "score": 99.51427205403645,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length + source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) , charno ) {",
            "score": 99.51304408482143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) , char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.lineNumber ) {",
            "score": 99.5061267671131,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=0) ;",
            "score": 99.4908447265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '\\n') ; } else",
            "score": 99.61176409040179,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '| ') ; } else",
            "score": 99.61176409040179,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( ' ') ; } else",
            "score": 99.61176409040179,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( '  ') ; } else",
            "score": 99.61176409040179,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { b.append( 'bar') ; } else",
            "score": 99.61176409040179,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < sourceExcerpt.length ) {",
            "score": 99.59717701099537,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; } }",
            "score": 99.58873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '| ') ; } }",
            "score": 99.58873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( ' ') ; } }",
            "score": 99.58873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '  ') ; } }",
            "score": 99.58873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; } }",
            "score": 99.58873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.0) {",
            "score": 99.51302297491776,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt.lineNumber ) {",
            "score": 99.50599254261364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= null ) {",
            "score": 99.49075317382812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno <2) {",
            "score": 99.46969443873355,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno <11) {",
            "score": 99.46969443873355,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno <10) {",
            "score": 99.46969443873355,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno <9) {",
            "score": 99.46969443873355,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno <2007) {",
            "score": 99.46969443873355,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno &&0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.6116473858173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.59706333705357,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0== charno && sourceExcerpt.length( ) >0) {",
            "score": 99.542431640625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 == char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length >1) {",
            "score": 99.51295301649306,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length > 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno > sourceExcerpt.length( ) ) {",
            "score": 99.5056396484375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { &&",
            "score": 99.46929931640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > charno && charno < sourceExcerpt.length( ) )",
            "score": 99.61150653545673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno < sourceExcerpt.length( ) ) continue ;",
            "score": 99.58856201171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.length( ) ;",
            "score": 99.560029296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { '\\n') ;",
            "score": 99.54209391276042,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { '| ') ;",
            "score": 99.54209391276042,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { ' ') ;",
            "score": 99.54209391276042,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { '  ') ;",
            "score": 99.54209391276042,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { 'bar') ;",
            "score": 99.54209391276042,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.51244007457386,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) <<2) {",
            "score": 99.50563646399456,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) << $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) <<11) {",
            "score": 99.50563646399456,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) << $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) <<10) {",
            "score": 99.50563646399456,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) << $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) <<9) {",
            "score": 99.50563646399456,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) << $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) <<2007) {",
            "score": 99.50563646399456,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) << $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno : sourceExcerpt.length( ) ) {",
            "score": 99.49062965029762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '\\n') &&0<= charno &&0<= charno ) {",
            "score": 99.54180353338069,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '| ') &&0<= charno &&0<= charno ) {",
            "score": 99.54180353338069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( ' ') &&0<= charno &&0<= charno ) {",
            "score": 99.54180353338069,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '  ') &&0<= charno &&0<= charno ) {",
            "score": 99.54180353338069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( 'bar') &&0<= charno &&0<= charno ) {",
            "score": 99.54180353338069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) *2) {",
            "score": 99.50558338994566,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) *11) {",
            "score": 99.50558338994566,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) *10) {",
            "score": 99.50558338994566,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) *9) {",
            "score": 99.50558338994566,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) *2007) {",
            "score": 99.50558338994566,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && true && charno < sourceExcerpt.length( ) )",
            "score": 99.46903852982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && true && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.51335797991071,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append ) ; } }",
            "score": 99.50539232336956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && sourceExcerpt.equals( LINE ) ) {",
            "score": 99.54112752278645,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno == sourceExcerpt.length ) {",
            "score": 99.505126953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) || ! charno ) ;",
            "score": 99.490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) || ! char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { String charno = error.getCharno( ) ;",
            "score": 99.61012425915948,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { String char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { }",
            "score": 99.59602156929348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0&& charno < sourceExcerpt.length( ) )",
            "score": 99.559609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.equals( charno ) ) {",
            "score": 99.54095703125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < '\\n'&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51109095982143,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < '| '&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51109095982143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < ' '&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51109095982143,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < '  '&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51109095982143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < 'bar'&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.51109095982143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <=1) {",
            "score": 99.46857561383929,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno && sourceExcerpt.length( ) )",
            "score": 99.609453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno && charno < charno )",
            "score": 99.59586879185268,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.58689662388393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.51157633463542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ;",
            "score": 99.50427924262152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) !=0) {",
            "score": 99.48975830078125,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length < charno && charno < sourceExcerpt.length ) {",
            "score": 99.59584263392857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { if(0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58663940429688,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) <0) {",
            "score": 99.559326171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0& charno < sourceExcerpt.length( ) ) {",
            "score": 99.54052056206598,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 & char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < sourceExcerpt.length ) {",
            "score": 99.51145426432292,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= true ) {",
            "score": 99.51067504882812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < options.length ) {",
            "score": 99.48973499644886,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < options . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { charno = error.getCharno( ) ;",
            "score": 99.60936628069196,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno >= charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59562465122768,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no >= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= error.length( ) ) {",
            "score": 99.53995768229167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno & charno < sourceExcerpt.length( ) ) {",
            "score": 99.51137288411458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no & char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) ;",
            "score": 99.51064918154762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) &&0>=0) {",
            "score": 99.48973499644886,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && 0 >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || true )",
            "score": 99.4678955078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || true )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.60929361979167,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& Character.isWhitespace( sourceExcerpt.length( ) ) ) {",
            "score": 99.53988037109374,
            "correctness": "wrong",
            "tokenized_patch": "&& Character . is CaMeL Whitespace ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&2<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51135835193452,
            "correctness": "wrong",
            "tokenized_patch": "&& $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&11<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51135835193452,
            "correctness": "wrong",
            "tokenized_patch": "&& $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&10<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51135835193452,
            "correctness": "wrong",
            "tokenized_patch": "&& $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&9<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51135835193452,
            "correctness": "wrong",
            "tokenized_patch": "&& $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&2007<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51135835193452,
            "correctness": "wrong",
            "tokenized_patch": "&& $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.getLineNumber( ) ) {",
            "score": 99.503271484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . get CaMeL Line CaMeL Number ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno &&0< sourceExcerpt.length( ) ) ) {",
            "score": 99.4896573153409,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) { for(",
            "score": 99.60897932381465,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { for (",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '\\n') ;",
            "score": 99.59465680803571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '| ') ;",
            "score": 99.59465680803571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( ' ') ;",
            "score": 99.59465680803571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '  ') ;",
            "score": 99.59465680803571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( 'bar') ;",
            "score": 99.59465680803571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno <= sourceExcerpt.length ) {",
            "score": 99.586259765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0+ charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5398181733631,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 + char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ;",
            "score": 99.50316772460937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || charno < charno && charno <",
            "score": 99.60897090517241,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < char@@ no && char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < CheckLevel.ERROR && charno < sourceExcerpt.length( ) ) {",
            "score": 99.585849609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < Check CaMeL Level . ERROR && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( '\\n') )",
            "score": 99.55888227982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( '| ') )",
            "score": 99.55888227982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( ' ') )",
            "score": 99.55888227982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( '  ') )",
            "score": 99.55888227982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( 'bar') )",
            "score": 99.55888227982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) > n ) {",
            "score": 99.539609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > n ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=0) { ) ;",
            "score": 99.5093661221591,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno + sourceExcerpt.length( ) >0)",
            "score": 99.5030184659091,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no + source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false( charno < sourceExcerpt.length ) ) {",
            "score": 99.4894131747159,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < charno && charno < charno",
            "score": 99.59343352141204,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < excerpt.length && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58580078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0> sourceExcerpt.length( ) ) {",
            "score": 99.539560546875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && sourceExcerpt == sourceExcerpt.length( ) ) {",
            "score": 99.51051839192708,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) )",
            "score": 99.50889828330592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno == sourceExcerpt.length ) {",
            "score": 99.46639404296874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) || charno <",
            "score": 99.60856681034483,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.58485243055556,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { excerpt.append( '\\n') ;",
            "score": 99.5394140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ex@@ cer@@ pt . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { excerpt.append( '| ') ;",
            "score": 99.5394140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ex@@ cer@@ pt . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { excerpt.append( ' ') ;",
            "score": 99.5394140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ex@@ cer@@ pt . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { excerpt.append( '  ') ;",
            "score": 99.5394140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ex@@ cer@@ pt . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { excerpt.append( 'bar') ;",
            "score": 99.5394140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ex@@ cer@@ pt . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.lineNumber ) {",
            "score": 99.50252278645833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=0)",
            "score": 99.48830052425987,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.60818045479911,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno >= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59293038504464,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < error.getCharno( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58481270926339,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < error . get CaMeL Char@@ no ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.length( ) <=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.5582744891827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && sourceExcerpt != null )",
            "score": 99.53869140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length == sourceExcerpt.length ) {",
            "score": 99.50984700520833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length == source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false && charno < sourceExcerpt.length( ) ) {",
            "score": 99.48761664496527,
            "correctness": "wrong",
            "tokenized_patch": "&& false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= sourceExcerpt sourceExcerpt.length( ) ) {",
            "score": 99.466064453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || sourceExcerpt.length( ) >0) {",
            "score": 99.60804094587054,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.55780498798077,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0[ charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50971912202381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 [ char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno < sourceExcerpt.length ) {",
            "score": 99.50828915550595,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) - {",
            "score": 99.50199962797619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.48744710286458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ).}",
            "score": 99.4657870205966,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) . }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.58467320033482,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno <0&& charno < sourceExcerpt.length( ) )",
            "score": 99.55772047776442,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno > charno < sourceExcerpt.length( ) ) {",
            "score": 99.50946044921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno != sourceExcerpt.length( ) )",
            "score": 99.50179443359374,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < this.sourceExcerpt.length ) {",
            "score": 99.4873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < source.length ) {",
            "score": 99.46498325892857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length , charno < sourceExcerpt.length( ) ) {",
            "score": 99.58373119212963,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length , char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) < charno )",
            "score": 99.55768291766827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < this.charno && charno < sourceExcerpt.length ) {",
            "score": 99.50811212713069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < this . char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.lineNumber ) {",
            "score": 99.50166248139881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length( ) )",
            "score": 99.48715691817434,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )1)",
            "score": 99.46490187872024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ||0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.59238106863839,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) || 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= sourceExcerpt.length( ) )",
            "score": 99.55741577148437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) &&0<= charno ) {",
            "score": 99.53666759672619,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= charno && sourceExcerpt.length( ) < charno ) {",
            "score": 99.50804554332386,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=0&& charno == sourceExcerpt.length( ) ) {",
            "score": 99.4863525390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( sourceExcerpt ) ; }",
            "score": 99.60706018518519,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno ; )",
            "score": 99.59119104456019,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5573828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt , charno ) {",
            "score": 99.50785522460937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt , char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& Character.isDigit( sourceExcerpt.length( ) ) ) {",
            "score": 99.50087890625,
            "correctness": "wrong",
            "tokenized_patch": "&& Character . is CaMeL Digit ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length < sourceExcerpt.length ) {",
            "score": 99.46404474431819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < false && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59098307291667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( ) && excerpt.equals( LINE ) ) {",
            "score": 99.58281792534723,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt ) {",
            "score": 99.50736083984376,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false <= charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.48607788085937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.60648148148148,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < sourceExcerpt.length ) {",
            "score": 99.59073539402173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.58278245192308,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length -1) {",
            "score": 99.50069754464286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno &&0< sourceExcerpt.length ) {",
            "score": 99.48579237196181,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) -1) {",
            "score": 99.46375621448864,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) &&0<= sourceExcerpt.length( ) )",
            "score": 99.60629377693965,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno < charno ;",
            "score": 99.59067007211539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && excerpt.equals( LINE ) &&0<= charno ) {",
            "score": 99.53456809303977,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != sourceExcerpt.length( ) )",
            "score": 99.50728175951087,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno || charno < sourceExcerpt.length( ) ) { {",
            "score": 99.50693581321023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length < sourceExcerpt.length ) {",
            "score": 99.46350678943452,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59041015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( '\\n') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58242361886161,
            "correctness": "wrong",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( '| ') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58242361886161,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( ' ') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58242361886161,
            "correctness": "wrong",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( '  ') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58242361886161,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( 'bar') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58242361886161,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && Character.isWhitespace( charno ) )",
            "score": 99.556484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && Character . is CaMeL Whitespace ( char@@ no ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } b.append( sourceExcerpt ) ;",
            "score": 99.53446821732955,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } b.append( sourceExcerpt ) ;",
            "score": 99.53446821732955,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } b.append( sourceExcerpt ) ;",
            "score": 99.53446821732955,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } b.append( sourceExcerpt ) ;",
            "score": 99.53446821732955,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } b.append( sourceExcerpt ) ;",
            "score": 99.53446821732955,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length < sourceExcerpt.length( ) ) { {",
            "score": 99.50632546164773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| charno <= sourceExcerpt.length( ) ) {",
            "score": 99.48511505126953,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) && charno <0) {",
            "score": 99.46343383789062,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( error.lineNumber ) ; }",
            "score": 99.60557338169643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . line CaMeL Number ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length && excerpt.length( ) ) {",
            "score": 99.59005301339286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0> charno && charno < sourceExcerpt.length( ) )",
            "score": 99.55623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno &&0<= charno ) {",
            "score": 99.53405083550348,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno ) { b.append( '\\n') ; } else {",
            "score": 99.49965413411458,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno ) { b.append( '| ') ; } else {",
            "score": 99.49965413411458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( ' ') ; } else {",
            "score": 99.49965413411458,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno ) { b.append( '  ') ; } else {",
            "score": 99.49965413411458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( 'bar') ; } else {",
            "score": 99.49965413411458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length && charno < sourceExcerpt.length ) {",
            "score": 99.46335671164773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < excerpt.length( ) ) {",
            "score": 99.58206881009616,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0!= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.556103515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0< charno ) {",
            "score": 99.53400336371527,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < '\\n') {",
            "score": 99.50606079101563,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $STRING$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < '| ') {",
            "score": 99.50606079101563,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < ' ') {",
            "score": 99.50606079101563,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $STRING$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < '  ') {",
            "score": 99.50606079101563,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < 'bar') {",
            "score": 99.50606079101563,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == !0) {",
            "score": 99.4848865327381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == ! 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0!= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4620694247159,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) || sourceExcerpt.length( ) >0)",
            "score": 99.60514042295259,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) || source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < charno ; charno ++ )",
            "score": 99.5899188701923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ; char@@ no ++ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno && charno < sourceExcerpt.length( ) )",
            "score": 99.55609130859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno || charno < sourceExcerpt.length( ) ) {",
            "score": 99.53219604492188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length( ) ) { )",
            "score": 99.5059814453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno == sourceExcerpt.length( ) )",
            "score": 99.49931640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.4845947265625,
            "correctness": "uncompilable",
            "tokenized_patch": "( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=2&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.46187744140624,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<=11&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.46187744140624,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<=10&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.46187744140624,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<=9&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.46187744140624,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<=2007&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.46187744140624,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0< sourceExcerpt.length( ) )",
            "score": 99.605078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno && charno &&",
            "score": 99.58876255580357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) && excerpt.equals( LINE ) ) {",
            "score": 99.58081926618304,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) )",
            "score": 99.555634765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) & CheckLevel.ERROR ) {",
            "score": 99.53000895182292,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) & Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( )( ) )",
            "score": 99.4992342862216,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'== sourceExcerpt.length( ) ) {",
            "score": 99.48456420898438,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && '| '== sourceExcerpt.length( ) ) {",
            "score": 99.48456420898438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '== sourceExcerpt.length( ) ) {",
            "score": 99.48456420898438,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && '  '== sourceExcerpt.length( ) ) {",
            "score": 99.48456420898438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'== sourceExcerpt.length( ) ) {",
            "score": 99.48456420898438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& sourceExcerpt.length( ) <=0) {",
            "score": 99.46183471679687,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=0&&0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.604921875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < sourceExcerpt.length( )",
            "score": 99.58810860770089,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ! sourceExcerpt.equals( '\\n') ) {",
            "score": 99.58076695033482,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ! sourceExcerpt.equals( '| ') ) {",
            "score": 99.58076695033482,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ! sourceExcerpt.equals( ' ') ) {",
            "score": 99.58076695033482,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ! sourceExcerpt.equals( '  ') ) {",
            "score": 99.58076695033482,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ! sourceExcerpt.equals( 'bar') ) {",
            "score": 99.58076695033482,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0< charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5554950420673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5059481534091,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt !=0) {",
            "score": 99.48454204358552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt != 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { for( int0=0;",
            "score": 99.60445731026786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { for ( int 0 = 0 ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( ) !=0)",
            "score": 99.5554296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) != 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( '\\n') &&0<= charno ) {",
            "score": 99.528564453125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( '| ') &&0<= charno ) {",
            "score": 99.528564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( ' ') &&0<= charno ) {",
            "score": 99.528564453125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( '  ') &&0<= charno ) {",
            "score": 99.528564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( 'bar') &&0<= charno ) {",
            "score": 99.528564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.5058063009511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&11<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.5058063009511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&10<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.5058063009511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&9<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.5058063009511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2007<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.5058063009511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && *charno < sourceExcerpt.length( ) ) {",
            "score": 99.50441672585227,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && * char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno > sourceExcerpt.lineNumber ) {",
            "score": 99.49895368303571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.48418898809524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ! excerpt.equals( LINE ) ) {",
            "score": 99.5806415264423,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ! ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.52831013997395,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.52831013997395,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.52831013997395,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.52831013997395,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.52831013997395,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= charno ) ;",
            "score": 99.50433640252976,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0|| charno < sourceExcerpt.length ) {",
            "score": 99.48409016927083,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( error.getCharno ) ;",
            "score": 99.60389927455357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . get CaMeL Char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( LINE ) && excerpt.equals( LINE ) ) {",
            "score": 99.58033165564903,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0.equals( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.5056864420573,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 . equals ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt ) {",
            "score": 99.49857823988971,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != length ) {",
            "score": 99.4839859008789,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.46134810014205,
            "correctness": "uncompilable",
            "tokenized_patch": "( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.60304478236607,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.length( ) <=0) {",
            "score": 99.57994733537946,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < error.length( ) ) {",
            "score": 99.52817789713542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( sourceExcerpt.toString( ) ) ) {",
            "score": 99.50547281901042,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { b.append( sourceExcerpt.length( ) ) ; } } else {",
            "score": 99.49821333451705,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { &&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.4838634672619,
            "correctness": "uncompilable",
            "tokenized_patch": ") { && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( error.sourceName ) ;",
            "score": 99.60300925925925,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . source CaMeL Name ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && && charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.58744755497685,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno && charno ==",
            "score": 99.57979910714286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no ==",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( charno ) ) {",
            "score": 99.49740600585938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false &&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.48330543154762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno !=(0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.57953350360577,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no != ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.55451171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < ~ sourceExcerpt.length( ) ) {",
            "score": 99.50422807173295,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ~ source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0&&0< sourceExcerpt.length( ) ) {",
            "score": 99.4830322265625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( error.getCharno( ) ) ;",
            "score": 99.60254748114224,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . get CaMeL Char@@ no ( ) ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else { b.append( '\\n') ;",
            "score": 99.58651968149039,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else { b.append( '| ') ;",
            "score": 99.58651968149039,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else { b.append( ' ') ;",
            "score": 99.58651968149039,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else { b.append( '  ') ;",
            "score": 99.58651968149039,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else { b.append( 'bar') ;",
            "score": 99.58651968149039,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno &&0<= charno ;",
            "score": 99.57950846354167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& Character.isWhitespace( charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.554375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& Character . is CaMeL Whitespace ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < source.length( ) && charno < source.length( ) ) {",
            "score": 99.52749488467262,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source . length ( ) && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) > ) {",
            "score": 99.50384521484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno < sourceExcerpt.length( ) ) {",
            "score": 99.50381324404762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length && true ) {",
            "score": 99.46048409598214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length ++ ) {",
            "score": 99.58578725961539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.getCount( ) ) {",
            "score": 99.50381071671195,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . get CaMeL Count ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno < sourceExcerpt.length( ) ) ;",
            "score": 99.50290749289773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) ==0) {",
            "score": 99.48252650669643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { for( int ++0;",
            "score": 99.60239438657408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { for ( int ++ 0 ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) <=0&& charno < sourceExcerpt.length( ) )",
            "score": 99.553837890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( sourceExcerpt ) ;",
            "score": 99.52689034598214,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( sourceExcerpt ) ;",
            "score": 99.52689034598214,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( sourceExcerpt ) ;",
            "score": 99.52689034598214,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( sourceExcerpt ) ;",
            "score": 99.52689034598214,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( sourceExcerpt ) ;",
            "score": 99.52689034598214,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { break ; }",
            "score": 99.50367228190105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { break ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! charno != sourceExcerpt.length( ) ) {",
            "score": 99.50234153053977,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( true ) ) {",
            "score": 99.48231724330357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( true ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno <0) {",
            "score": 99.4601806640625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || sourceExcerpt.length( ) ) {",
            "score": 99.60207895132211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.57908412388393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno + sourceExcerpt.length( ) < charno ) {",
            "score": 99.52646891276042,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no + source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) { {",
            "score": 99.5021110983456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( sourceExcerpt ) ; } }",
            "score": 99.49677966889881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno <0) {",
            "score": 99.46005684988839,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <( charno < charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.5790382667824,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ||0<= charno )",
            "score": 99.55369140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == charno ) {",
            "score": 99.50206938244048,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno != sourceExcerpt.lineNumber ) {",
            "score": 99.49602399553571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno &&0<= sourceExcerpt.length ) {",
            "score": 99.48185221354167,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && charno < charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.60187897858796,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && ! charno < sourceExcerpt.length( ) )",
            "score": 99.55328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno > CheckLevel.ERROR ) {",
            "score": 99.52570134943181,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.50201125372024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( '\\n') ; } else {",
            "score": 99.4956942471591,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( '| ') ; } else {",
            "score": 99.4956942471591,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( ' ') ; } else {",
            "score": 99.4956942471591,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( '  ') ; } else {",
            "score": 99.4956942471591,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( 'bar') ; } else {",
            "score": 99.4956942471591,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= length( ) ) {",
            "score": 99.48180042613636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno < charno && charno < charno ) {",
            "score": 99.45976329985119,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno && charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.60171621817129,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0+ charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.55319081182066,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 + char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0( charno > sourceExcerpt.length( ) ) ) {",
            "score": 99.52557373046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 ( char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( error.description ) ; } else {",
            "score": 99.60134451729911,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . description ) ; } else {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < has && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58428485576923,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < has && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < charno &&0<= charno &&",
            "score": 99.57841273716518,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no && 0 <= char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && error.isWhitespace( ) )",
            "score": 99.55290421195652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && error . is CaMeL Whitespace ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<=0&& charno < sourceExcerpt.length ) {",
            "score": 99.48125542534723,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( '\\n') && charno < sourceExcerpt.length( ) )",
            "score": 99.55240572415866,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( '| ') && charno < sourceExcerpt.length( ) )",
            "score": 99.55240572415866,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( ' ') && charno < sourceExcerpt.length( ) )",
            "score": 99.55240572415866,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( '  ') && charno < sourceExcerpt.length( ) )",
            "score": 99.55240572415866,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( 'bar') && charno < sourceExcerpt.length( ) )",
            "score": 99.55240572415866,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.lineNumber( ) )",
            "score": 99.49465110085227,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . line CaMeL Number ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&00<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4812344637784,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.equals( LINE || charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.5840625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.57803505345395,
            "correctness": "wrong",
            "tokenized_patch": "&& ! ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < isWhitespace && charno < sourceExcerpt.length( ) )",
            "score": 99.55237926136364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < is CaMeL Whitespace && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno > sourceExcerpt.length( )",
            "score": 99.52463785807292,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno > sourceExcerpt.length( ) ) )",
            "score": 99.49462890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| !0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.48121402138158,
            "correctness": "uncompilable",
            "tokenized_patch": "|| ! 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source.length < sourceExcerpt.length ) {",
            "score": 99.45855102539062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.length( ) ) {",
            "score": 99.60047325721153,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < null && charno < sourceExcerpt.length( ) ) {",
            "score": 99.57791841947116,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < null && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( ) >=0) {",
            "score": 99.55201134314903,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) < charno ) {",
            "score": 99.52461751302083,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0: charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.5025050951087,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 : char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.charno ) {",
            "score": 99.50134887695313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= != charno && charno < sourceExcerpt.length ) {",
            "score": 99.481103515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '\\n') ; }",
            "score": 99.59951547475961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '| ') ; }",
            "score": 99.59951547475961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( ' ') ; }",
            "score": 99.59951547475961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '  ') ; }",
            "score": 99.59951547475961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( 'bar') ; }",
            "score": 99.59951547475961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < charno && charno )",
            "score": 99.5821484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || sourceExcerpt.equals( LINE ) ) {",
            "score": 99.57713035300925,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length < charno ) {",
            "score": 99.52461751302083,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && b.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.50229899088542,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && b . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < source && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5011974516369,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.49419611150569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false <= charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.4810546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && false ) {",
            "score": 99.4581298828125,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.length < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.57685546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( LINE ) &&0<= sourceExcerpt.length( ) )",
            "score": 99.551533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.50211588541667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) ;",
            "score": 99.50099487304688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ; else {",
            "score": 99.4941739169034,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length ) {",
            "score": 99.48095703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < charno( ) ) {",
            "score": 99.45812406994048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { if( charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.581396484375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < excerpt.length( ) ) {",
            "score": 99.57648668791118,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( )( ) < sourceExcerpt.length( ) ) {",
            "score": 99.52402750651042,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50032182173295,
            "correctness": "uncompilable",
            "tokenized_patch": ") && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ) ; } else { b.append( '\\n') ; }",
            "score": 99.4937744140625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ) ; } else { b.append( '| ') ; }",
            "score": 99.4937744140625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ) ; } else { b.append( ' ') ; }",
            "score": 99.4937744140625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ) ; } else { b.append( '  ') ; }",
            "score": 99.4937744140625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ) ; } else { b.append( 'bar') ; }",
            "score": 99.4937744140625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && null != sourceExcerpt.length( ) ) {",
            "score": 99.48068237304688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && null != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < sourceExcerpt != length( ) ) {",
            "score": 99.59904532596983,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt != length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno && )",
            "score": 99.58128074363425,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length && excerpt.length < charno ) {",
            "score": 99.57647705078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . length < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) && {",
            "score": 99.550546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.50203080610795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.49333844866071,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||(0<= charno && charno < sourceExcerpt.length ) ) {",
            "score": 99.48057338169643,
            "correctness": "uncompilable",
            "tokenized_patch": "|| ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; int charno ;",
            "score": 99.59903971354167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; int char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '| ') ; int charno ;",
            "score": 99.59903971354167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; int char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( ' ') ; int charno ;",
            "score": 99.59903971354167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; int char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( '  ') ; int charno ;",
            "score": 99.59903971354167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; int char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; int charno ;",
            "score": 99.59903971354167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; int char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno < sourceExcerpt.length( ) ] ) {",
            "score": 99.57616315569196,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ] ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno > sourceExcerpt.length( ) )",
            "score": 99.5500996907552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>> charno < sourceExcerpt.length( ) ) {",
            "score": 99.52366129557292,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 >> char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.equals( sourceExcerpt ) ) {",
            "score": 99.50177001953125,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append ) ; }",
            "score": 99.49280894886364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length ) { {",
            "score": 99.47991333007812,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) && excerpt.length( ) >0) ) {",
            "score": 99.59902518136161,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) > 0 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( '\\n') ) {",
            "score": 99.57586115056819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( '| ') ) {",
            "score": 99.57586115056819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( ' ') ) {",
            "score": 99.57586115056819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( '  ') ) {",
            "score": 99.57586115056819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( 'bar') ) {",
            "score": 99.57586115056819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) < sourceExcerpt.length( ) )",
            "score": 99.5500732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.booleanValue( ) ) {",
            "score": 99.50147545855978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . boolean CaMeL Value ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) <= charno ) {",
            "score": 99.49958939985795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) ==0) {",
            "score": 99.47978071732955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno >= sourceExcerpt.length( ) ) {",
            "score": 99.45633370535714,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt.length( )( ) ) {",
            "score": 99.59900841346153,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < charno && charno < charno < charno )",
            "score": 99.58052884615384,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno <= sourceExcerpt.length( ) )",
            "score": 99.54984537760417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) && charno < charno ) {",
            "score": 99.4987460049716,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno ++ <= sourceExcerpt.length( ) ) {",
            "score": 99.49236505681819,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no ++ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0>= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.47955322265625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <1&& charno < sourceExcerpt.length ) {",
            "score": 99.45622815583882,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 1 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { if( charno < charno",
            "score": 99.59881591796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { if ( char@@ no < char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) ) {",
            "score": 99.5803731282552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0.equals( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.575322265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 . equals ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0++ charno < sourceExcerpt.length( ) ) {",
            "score": 99.52284307065217,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 ++ char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length(0) ) {",
            "score": 99.50059925426136,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( 0 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < length( ) ) {",
            "score": 99.49853515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno < charno ) {",
            "score": 99.47934441817434,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.45620582217262,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno != charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.57500542534723,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && excerpt != null )",
            "score": 99.54897836538461,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ? sourceExcerpt : sourceExcerpt.length( ) ) {",
            "score": 99.50047810872395,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ? source CaMeL Ex@@ cer@@ pt : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=0) { ) {",
            "score": 99.49852405894886,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) +1) {",
            "score": 99.49155680338542,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >=0)",
            "score": 99.4792544716283,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( error.description ) ;",
            "score": 99.59834798177083,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && key < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5799091045673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && key < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno >= sourceExcerpt.length ) {",
            "score": 99.574775390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( )",
            "score": 99.5224673622533,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0.2< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50021229619566,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 . $NUMBER$ < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0.11< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50021229619566,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 . $NUMBER$ < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0.10< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50021229619566,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 . $NUMBER$ < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0.9< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50021229619566,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 . $NUMBER$ < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0.2007< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50021229619566,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 . $NUMBER$ < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0.<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.49818004261364,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 . <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0< charno && charno < sourceExcerpt.length( ) )",
            "score": 99.49151000976562,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "?0: charno && charno < sourceExcerpt.length ) {",
            "score": 99.47922877261513,
            "correctness": "uncompilable",
            "tokenized_patch": "? 0 : char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno & sourceExcerpt.length( ) ) {",
            "score": 99.45552201704545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no & source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) &&( charno < sourceExcerpt.length( ) ) )",
            "score": 99.59803508890086,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < this.charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.54829915364583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < this . char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < LINE ) {",
            "score": 99.5223876953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno & sourceExcerpt.length( ) ==0) {",
            "score": 99.49992569633152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no & source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { ) { {",
            "score": 99.498046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno > sourceExcerpt.length( ) )",
            "score": 99.49136352539062,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length ) ;",
            "score": 99.47920307360198,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < sourceExcerpt ) {",
            "score": 99.57868561921296,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.5741554542824,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < this.charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5482867697011,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < this . char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno( sourceExcerpt ) ) {",
            "score": 99.5221923828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) || charno < charno ) {",
            "score": 99.49793590198864,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >>0==0) {",
            "score": 99.47918146306819,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >> 0 == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { b.append( error.description ) ;",
            "score": 99.59630895543981,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= charno && charno < charno ) {",
            "score": 99.57840530960648,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& !( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.5740966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < charno )",
            "score": 99.54825846354167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ) ;",
            "score": 99.49787248883929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.4908383018092,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) <=0) {",
            "score": 99.4791592684659,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( excerpt.length( ) >0) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59599958147321,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . length ( ) > 0 ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.startsWith( '\\n') ) {",
            "score": 99.49968610491071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.startsWith( '| ') ) {",
            "score": 99.49968610491071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.startsWith( ' ') ) {",
            "score": 99.49968610491071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.startsWith( '  ') ) {",
            "score": 99.49968610491071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.startsWith( 'bar') ) {",
            "score": 99.49968610491071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { *",
            "score": 99.497607421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.49029541015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt.length( ) {",
            "score": 99.57809787326389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( LINE ) &&0<= charno &&0<= charno ) {",
            "score": 99.52091471354167,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < source ) {",
            "score": 99.49754638671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < source ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= ! charno ) {",
            "score": 99.47892622514205,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0&& charno <0) {",
            "score": 99.4542236328125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < charno && charno < sourceExcerpt ) {",
            "score": 99.57797128182871,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { charno = error.getCharno( ) ; if( excerpt.equals( LINE ) ) {",
            "score": 99.57365813078704,
            "correctness": "uncompilable",
            "tokenized_patch": ") { char@@ no = error . get CaMeL Char@@ no ( ) ; if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.equals( LINE ) {",
            "score": 99.54801432291667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.4994586447011,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )( {",
            "score": 99.47885277157738,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) b.append( '\\n') ;",
            "score": 99.59589301215277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) b.append( '| ') ;",
            "score": 99.59589301215277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) b.append( ' ') ;",
            "score": 99.59589301215277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) b.append( '  ') ;",
            "score": 99.59589301215277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >0) b.append( 'bar') ;",
            "score": 99.59589301215277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5770263671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == CheckLevel.ERROR && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5735546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == Check CaMeL Level . ERROR && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.54781400240384,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < getLevelName( sourceExcerpt ) ) {",
            "score": 99.52084350585938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < get CaMeL Level CaMeL Name ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0>= charno < sourceExcerpt.length( ) ) {",
            "score": 99.49917204483695,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 >= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && ! sourceExcerpt.length( ) ) {",
            "score": 99.4540283203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) )",
            "score": 99.5953369140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.57344111689815,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( LINE ) )",
            "score": 99.54744720458984,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && sourceExcerpt.equals( '\\n') ) {",
            "score": 99.52044677734375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno &&0<= charno && sourceExcerpt.equals( '| ') ) {",
            "score": 99.52044677734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && sourceExcerpt.equals( ' ') ) {",
            "score": 99.52044677734375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno &&0<= charno && sourceExcerpt.equals( '  ') ) {",
            "score": 99.52044677734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && sourceExcerpt.equals( 'bar') ) {",
            "score": 99.52044677734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.4990743001302,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '| '.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.4990743001302,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.4990743001302,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '  '.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.4990743001302,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'.length( ) < sourceExcerpt.length( ) ) {",
            "score": 99.4990743001302,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= null ) {",
            "score": 99.47869262695312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < ! sourceExcerpt.length( ) ) {",
            "score": 99.45393640854779,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) ) {",
            "score": 99.59531947544643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length1) {",
            "score": 99.573427734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0+ charno < sourceExcerpt.length( ) )",
            "score": 99.54742790670956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 + char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno *charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.49876912434895,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no * char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0!= charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.49638227982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.59519740513393,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno >= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.57321506076389,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <( charno < charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.54741962139423,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < charno < sourceExcerpt.length( ) ) {",
            "score": 99.4981180826823,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) ) { )",
            "score": 99.49602716619319,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt < sourceExcerpt.length ) {",
            "score": 99.45339133522727,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&&0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.59427584134616,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < sourceExcerpt == null ) {",
            "score": 99.57313368055556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt == null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno( sourceExcerpt ) ) {",
            "score": 99.51915147569444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno > sourceExcerpt.length ) {",
            "score": 99.4876708984375,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) && charno <0) {",
            "score": 99.57288953993056,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno < sourceExcerpt.length( ) )",
            "score": 99.54706488715277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( )",
            "score": 99.51886307565789,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length -.length( ) ) {",
            "score": 99.49749755859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno != sourceExcerpt.length( ) )",
            "score": 99.45286923363095,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.59422956194196,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) && excerpt.equals( LINE ) ) {",
            "score": 99.57491500289352,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !( charno < charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.572666015625,
            "correctness": "plausible",
            "tokenized_patch": "&& ! ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno && charno < sourceExcerpt.length ) {",
            "score": 99.4957608309659,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )0) {",
            "score": 99.4871493252841,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length )",
            "score": 99.47768985523896,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > -1) {",
            "score": 99.45219494047619,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.59420340401786,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { int charno = error.getCharno( ) ;",
            "score": 99.57487883391204,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.57256610576923,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt != null )",
            "score": 99.54624872622283,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < CheckLevel.ERROR ) {",
            "score": 99.51714533025569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2< charno < sourceExcerpt.length( ) ) {",
            "score": 99.49675186820652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&11< charno < sourceExcerpt.length( ) ) {",
            "score": 99.49675186820652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&10< charno < sourceExcerpt.length( ) ) {",
            "score": 99.49675186820652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&9< charno < sourceExcerpt.length( ) ) {",
            "score": 99.49675186820652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2007< charno < sourceExcerpt.length( ) ) {",
            "score": 99.49675186820652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <1) {",
            "score": 99.49563363882211,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( )( ) )",
            "score": 99.48679421164773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno &&(0<= charno",
            "score": 99.57255497685185,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && ( 0 <= char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ) <= sourceExcerpt.length( ) ) {",
            "score": 99.51710094105114,
            "correctness": "plausible",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && false < sourceExcerpt.length ) {",
            "score": 99.49557834201389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) *2) {",
            "score": 99.48636881510417,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) *11) {",
            "score": 99.48636881510417,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) *10) {",
            "score": 99.48636881510417,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) *9) {",
            "score": 99.48636881510417,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) *2007) {",
            "score": 99.48636881510417,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length == sourceExcerpt.length( ) ) {",
            "score": 99.45184616815476,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '\\n') ; } else",
            "score": 99.59358723958333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '| ') ; } else",
            "score": 99.59358723958333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( ' ') ; } else",
            "score": 99.59358723958333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( '  ') ; } else",
            "score": 99.59358723958333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( 'bar') ; } else",
            "score": 99.59358723958333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( $STRING$ ) ; } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ] ) {",
            "score": 99.57243795955883,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ] ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <(0<= charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.545732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < != sourceExcerpt.length( ) ) {",
            "score": 99.45164905894886,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < ! charno && charno < sourceExcerpt.length ) {",
            "score": 99.57399269386575,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.length( )",
            "score": 99.51661217730978,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0&&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.49626358695652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.trim( ) ) {",
            "score": 99.48550269717262,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . trim ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.47689658717105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt ) {",
            "score": 99.57332356770833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& Character.isWhitespace( charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5449609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& Character . is CaMeL Whitespace ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && sourceExcerpt != null ) {",
            "score": 99.5154041108631,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) ) ;",
            "score": 99.49510609019886,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& short <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.49500093005952,
            "correctness": "uncompilable",
            "tokenized_patch": "&& short <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length length( ) >0) {",
            "score": 99.47684151785714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { StringBuilder b = new StringBuilder( ) ;",
            "score": 99.59325299944196,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { String CaMeL Builder b = new String CaMeL Builder ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && && charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.5732891376202,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < source.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.57189453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.equals( LINE ) )",
            "score": 99.5446307842548,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < count && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5151134672619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < count && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || ) ;",
            "score": 99.49498401988636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length )",
            "score": 99.47678509880515,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { for( int ++ )",
            "score": 99.59304574819711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { for ( int ++ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno( ) )",
            "score": 99.57325122974537,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >(0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.57184307391827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.length( )",
            "score": 99.5443115234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && excerpt.equals( LINE ) ) {",
            "score": 99.5147346047794,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && source.0< sourceExcerpt.length( ) ) {",
            "score": 99.49497292258523,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ; )",
            "score": 99.49464818050987,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ; )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& true && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47660997178819,
            "correctness": "wrong",
            "tokenized_patch": "&& true && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length && excerpt.length( ) ) {",
            "score": 99.57294379340277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.57173488451087,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.lineNumber > sourceExcerpt.length( ) ) {",
            "score": 99.51442999588816,
            "correctness": "wrong",
            "tokenized_patch": "&& error . line CaMeL Number > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && source.length( ) <= sourceExcerpt.length( ) ) {",
            "score": 99.4944356282552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length ( ) <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) !=0)",
            "score": 99.4765689247533,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) - )",
            "score": 99.45085797991071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && sourceExcerpt.length( ) >0) {",
            "score": 99.59256546585648,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.571591796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) <= sourceExcerpt.length( ) )",
            "score": 99.54408569335938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length > ) {",
            "score": 99.49485868566177,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.48457416735198,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=( charno && sourceExcerpt.length( ) ) ) {",
            "score": 99.476220703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ( char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < && sourceExcerpt.length( ) ) {",
            "score": 99.4508389559659,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno && charno <",
            "score": 99.57204965444711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.57071035879629,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE && charno < sourceExcerpt.length( ) ) {",
            "score": 99.54393513997395,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '\\n') &&0<= charno ) {",
            "score": 99.51370059742646,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '| ') &&0<= charno ) {",
            "score": 99.51370059742646,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( ' ') &&0<= charno ) {",
            "score": 99.51370059742646,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '  ') &&0<= charno ) {",
            "score": 99.51370059742646,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( 'bar') &&0<= charno ) {",
            "score": 99.51370059742646,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<<0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.49353558084239,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 << 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length -1) {",
            "score": 99.48454284667969,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno + sourceExcerpt.length( ) ) {",
            "score": 99.47572544642857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no + source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) > charno && sourceExcerpt.length( ) >0) {",
            "score": 99.59209333147321,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ?0: charno ) {",
            "score": 99.51350911458333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? 0 : char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { ) ;",
            "score": 99.49459499782986,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4935302734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.47553943452381,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( error.description ) ;",
            "score": 99.59206136067708,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) { ) {",
            "score": 99.57130714699075,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno < sourceExcerpt.length( ) )",
            "score": 99.54342651367188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.51307262073864,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.next( ) ) {",
            "score": 99.49454752604167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . next ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno != sourceExcerpt.length ) {",
            "score": 99.48403448807566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return '\\n';",
            "score": 99.45044623480902,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return '| ';",
            "score": 99.45044623480902,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return ' ';",
            "score": 99.45044623480902,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return '  ';",
            "score": 99.45044623480902,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return 'bar';",
            "score": 99.45044623480902,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= charno && charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5917499248798,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) <= )",
            "score": 99.54318237304688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) <= )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < error.length( ) ) {",
            "score": 99.51286046645221,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno + charno < sourceExcerpt.length( ) ) {",
            "score": 99.49277750651042,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no + char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) && !0) {",
            "score": 99.47520228794643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && ! 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2&& charno <= sourceExcerpt.length( ) ) {",
            "score": 99.45010230654762,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <11&& charno <= sourceExcerpt.length( ) ) {",
            "score": 99.45010230654762,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <10&& charno <= sourceExcerpt.length( ) ) {",
            "score": 99.45010230654762,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <9&& charno <= sourceExcerpt.length( ) ) {",
            "score": 99.45010230654762,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <2007&& charno <= sourceExcerpt.length( ) ) {",
            "score": 99.45010230654762,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& Character.isWhitespace( error.getCharno( ) ) ) {",
            "score": 99.51259251644737,
            "correctness": "wrong",
            "tokenized_patch": "&& Character . is CaMeL Whitespace ( error . get CaMeL Char@@ no ( ) ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&(0<= charno && sourceExcerpt.length( ) >0) ) {",
            "score": 99.48225541548295,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) !=0) ;",
            "score": 99.47503662109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) && true ) {",
            "score": 99.45005170036765,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && true ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) != charno && charno < sourceExcerpt.length( ) )",
            "score": 99.59101213727679,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < false && charno < sourceExcerpt.length( ) ) {",
            "score": 99.57058481069711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno < sourceExcerpt.length1) {",
            "score": 99.56833120492789,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.54224650065105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < sourceExcerpt ) {",
            "score": 99.4923095703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false != sourceExcerpt.length( ) ) {",
            "score": 99.47500610351562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length != sourceExcerpt.length( ) ) {",
            "score": 99.44961402529762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno ; )",
            "score": 99.57057542067308,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { int charno = error.getCharno( ) ; if( charno <0) {",
            "score": 99.56822713216145,
            "correctness": "uncompilable",
            "tokenized_patch": ") { int char@@ no = error . get CaMeL Char@@ no ( ) ; if ( char@@ no < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&1< charno < sourceExcerpt.length( ) ) {",
            "score": 99.49215565557066,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 1 < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length -1) {",
            "score": 99.48203822544643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && end < sourceExcerpt.length( ) ) {",
            "score": 99.4495849609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && end < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) >1)",
            "score": 99.541796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) > 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0< charno ) {",
            "score": 99.51142810639881,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length - sourceExcerpt.length ) {",
            "score": 99.48175603693181,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length - source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'.length < sourceExcerpt.length ) {",
            "score": 99.47485961914063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '| '.length < sourceExcerpt.length ) {",
            "score": 99.47485961914063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '.length < sourceExcerpt.length ) {",
            "score": 99.47485961914063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '  '.length < sourceExcerpt.length ) {",
            "score": 99.47485961914063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'.length < sourceExcerpt.length ) {",
            "score": 99.47485961914063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { System.out.println( '\\n') ;",
            "score": 99.59083984375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { System . out . println ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { System.out.println( '| ') ;",
            "score": 99.59083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { System . out . println ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { System.out.println( ' ') ;",
            "score": 99.59083984375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { System . out . println ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { System.out.println( '  ') ;",
            "score": 99.59083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { System . out . println ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { System.out.println( 'bar') ;",
            "score": 99.59083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { System . out . println ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5702655498798,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || b.append( '\\n') )",
            "score": 99.54168146306819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || b.append( '| ') )",
            "score": 99.54168146306819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || b.append( ' ') )",
            "score": 99.54168146306819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || b.append( '  ') )",
            "score": 99.54168146306819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || b.append( 'bar') )",
            "score": 99.54168146306819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || b . append ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt == null ) {",
            "score": 99.51128859747024,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == null ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno < charno ) {",
            "score": 99.49332275390626,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source == sourceExcerpt.length( ) ) {",
            "score": 99.49190673828124,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) && !0) ;",
            "score": 99.47448149181548,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && ! 0 ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -2)",
            "score": 99.44950727982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -11)",
            "score": 99.44950727982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -10)",
            "score": 99.44950727982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -9)",
            "score": 99.44950727982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) -2007)",
            "score": 99.44950727982955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno > sourceExcerpt.length( ) )",
            "score": 99.59073311941964,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno >1) {",
            "score": 99.51064918154762,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < ) ;",
            "score": 99.49331825657895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.type( ) ) {",
            "score": 99.48129417782738,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . type ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.590625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length0) {",
            "score": 99.57004957932692,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt )",
            "score": 99.54139775815217,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno &&( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.49178413722827,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0> charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.4804920014881,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&( sourceExcerpt.length( ) >0) ) {",
            "score": 99.4493741122159,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && ( source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno <= sourceExcerpt.length( ) )",
            "score": 99.59051513671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < sourceExcerpt )",
            "score": 99.541259765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& <0&&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.49159749348958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& < 0 && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) -1) {",
            "score": 99.47982449001736,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) { {",
            "score": 99.47335476345486,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno < charno <",
            "score": 99.567919921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno )",
            "score": 99.54118546195652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length( ) ) { ) {",
            "score": 99.49175470525569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt.length( )( ) ) {",
            "score": 99.49129231770833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.end( ) ) {",
            "score": 99.44893973214286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . end ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < sourceExcerpt ) {",
            "score": 99.5679180438702,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) continue ;",
            "score": 99.56707404641544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) > sourceExcerpt.length( ) ) {",
            "score": 99.50971912202381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < ) {",
            "score": 99.49151252297794,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( charno < sourceExcerpt.length( ) ) ) { {",
            "score": 99.49087524414062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( LINE ) ; } else { b.append( '\\n') ; }",
            "score": 99.47955031622024,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( LINE ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( LINE ) ; } else { b.append( '| ') ; }",
            "score": 99.47955031622024,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( LINE ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( LINE ) ; } else { b.append( ' ') ; }",
            "score": 99.47955031622024,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( LINE ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( LINE ) ; } else { b.append( '  ') ; }",
            "score": 99.47955031622024,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( LINE ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( LINE ) ; } else { b.append( 'bar') ; }",
            "score": 99.47955031622024,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( LINE ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && null == sourceExcerpt.length( ) ) {",
            "score": 99.47312622070312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && null == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < ! charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5411044034091,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && sourceExcerpt.equals( '\\n') ) {",
            "score": 99.5095745584239,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && sourceExcerpt.equals( '| ') ) {",
            "score": 99.5095745584239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && sourceExcerpt.equals( ' ') ) {",
            "score": 99.5095745584239,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && sourceExcerpt.equals( '  ') ) {",
            "score": 99.5095745584239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && sourceExcerpt.equals( 'bar') ) {",
            "score": 99.5095745584239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ? ) {",
            "score": 99.49144398082386,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>> > charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.49082253196023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >> > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length -1) {",
            "score": 99.4794921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.47301635742187,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 != char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.equals( LINE ) && charno < sourceExcerpt.length ) {",
            "score": 99.56748046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno > sourceExcerpt.length ) {",
            "score": 99.565419921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no > source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ++ ) {",
            "score": 99.50956420898437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0< charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.47917036576705,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0||0<= sourceExcerpt.length( ) ) {",
            "score": 99.47268194901316,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= 0 || 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt )",
            "score": 99.44806463068181,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < excerpt.length( ) || charno < sourceExcerpt.length( ) ) {",
            "score": 99.56462492766204,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ex@@ cer@@ pt . length ( ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0*charno < sourceExcerpt.length( ) ) {",
            "score": 99.50940472146739,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 * char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.start( ) ) {",
            "score": 99.49114118303571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . start ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( lineNumber ) ) {",
            "score": 99.47838637408088,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( line CaMeL Number ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && sourceExcerpt.length( ) <=0) {",
            "score": 99.447998046875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { ) { b.append( '\\n') ;",
            "score": 99.566484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { ) { b.append( '| ') ;",
            "score": 99.566484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { ) { b.append( ' ') ;",
            "score": 99.566484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { ) { b.append( '  ') ;",
            "score": 99.566484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { ) { b.append( 'bar') ;",
            "score": 99.566484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > charno && charno < sourceExcerpt.length( ) )",
            "score": 99.54058547247024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < '\\n'.length( ) ) {",
            "score": 99.50937721946023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < '| '.length( ) ) {",
            "score": 99.50937721946023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < ' '.length( ) ) {",
            "score": 99.50937721946023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < '  '.length( ) ) {",
            "score": 99.50937721946023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < 'bar'.length( ) ) {",
            "score": 99.50937721946023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno &&0<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.4904073079427,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && length < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56615271935097,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && length < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56391834077381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno &&0<= sourceExcerpt.length( ) )",
            "score": 99.54021484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||(0<= charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.49010699728261,
            "correctness": "plausible",
            "tokenized_patch": "|| ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.47822875976563,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) <=0) {",
            "score": 99.44769577752976,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) )",
            "score": 99.58863661024306,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < '\\n'.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.563388671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < '| '.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.563388671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < ' '.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.563388671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < '  '.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.563388671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < 'bar'.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.563388671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && error.lineNumber >0)",
            "score": 99.53971000339673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && error . line CaMeL Number > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( ) < charno ) {",
            "score": 99.50899832589286,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length( ) ) { ) ;",
            "score": 99.49073375355114,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ++ charno < sourceExcerpt.length( ) ) {",
            "score": 99.49010120738636,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ++ char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.47821599786931,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) -1) {",
            "score": 99.47089233398438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && &&0< sourceExcerpt.length( ) ) {",
            "score": 99.44768415178571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( ) ) {",
            "score": 99.58812459309895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.5657246907552,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && LINE ) {",
            "score": 99.50892705502717,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length0) {",
            "score": 99.49064331054687,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length == sourceExcerpt.length( ) ) {",
            "score": 99.49007161458333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.47814360119048,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) return '\\n';",
            "score": 99.44766090029762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) return '| ';",
            "score": 99.44766090029762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) return ' ';",
            "score": 99.44766090029762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) return '  ';",
            "score": 99.44766090029762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) return 'bar';",
            "score": 99.44766090029762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.58806046195652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && ! sourceExcerpt.equals( LINE ) ) {",
            "score": 99.5654296875,
            "correctness": "plausible",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno >= sourceExcerpt.length( ) )",
            "score": 99.5393575032552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt.length( ) ) ;",
            "score": 99.48974609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > charno && charno < sourceExcerpt.length ) {",
            "score": 99.47796020507812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& null <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47062174479167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& null <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < charno )",
            "score": 99.44761827256944,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) || excerpt.length( ) >0) ) {",
            "score": 99.58758544921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) > 0 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && ! charno < sourceExcerpt.length( ) ) {",
            "score": 99.56541090745192,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > this.sourceExcerpt.length( ) ) {",
            "score": 99.50837508491848,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > this . source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && != sourceExcerpt.length( ) ) {",
            "score": 99.4902407997533,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < & sourceExcerpt.length( ) ) {",
            "score": 99.48963512073864,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < & source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno == sourceExcerpt.lineNumber ) {",
            "score": 99.47762044270833,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && < sourceExcerpt.length( ) ) {",
            "score": 99.47051038240132,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.56471761067708,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && !( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.56278483072917,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ! ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0+0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5386962890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 + 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ) { )",
            "score": 99.490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ; else {",
            "score": 99.47746138139205,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ; else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno.length( ) ) {",
            "score": 99.47030978732639,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { char charno = error.getCharno( ) ;",
            "score": 99.58684430803571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { char char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& Boolean.isWhitespace( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.56456580528847,
            "correctness": "uncompilable",
            "tokenized_patch": "&& Boolean . is CaMeL Whitespace ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < type && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56252817007211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < type && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0- charno < sourceExcerpt.length( ) ) {",
            "score": 99.50669794497283,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 - char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length >0) {",
            "score": 99.49015299479167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) -1)",
            "score": 99.47660688920455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < locale.length( ) ) {",
            "score": 99.44641831341912,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < locale . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) &&0< charno && charno <",
            "score": 99.58678327287946,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 < char@@ no && char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { if( excerpt.equals( LINE ) ) {",
            "score": 99.56444295247395,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.53842308407738,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&1<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.4892578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 1 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno + sourceExcerpt.length( ) ) {",
            "score": 99.47655571831598,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no + source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <( sourceExcerpt.length ) ) {",
            "score": 99.47000558035714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ( source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) {",
            "score": 99.44626686789773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno && charno < charno && charno < charno ) ) {",
            "score": 99.5640285326087,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.getCharno( ) ) {",
            "score": 99.56146240234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . get CaMeL Char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) &&0<= charno ) ) {",
            "score": 99.50631581182066,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.equals( sourceExcerpt ) ) {",
            "score": 99.48870849609375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& Character.isDigit( sourceExcerpt.charAt( ) ) ) {",
            "score": 99.47642933238636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& Character . is CaMeL Digit ( source CaMeL Ex@@ cer@@ pt . char CaMeL At ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.58634440104167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.5380078125,
            "correctness": "plausible",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) /1) {",
            "score": 99.50595490828805,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length ) {",
            "score": 99.48998305376838,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0:0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4883449388587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 : 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( ) ; } }",
            "score": 99.4762850674716,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && options.length < sourceExcerpt.length ) {",
            "score": 99.46963500976562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && options . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.44610305059524,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no >= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.58613918138587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.563623046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( null ) && charno < sourceExcerpt.length( ) )",
            "score": 99.53788248697917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( null ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt !=0) {",
            "score": 99.48994445800781,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0< charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.47624860491071,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "|| ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.46943359375,
            "correctness": "uncompilable",
            "tokenized_patch": "|| ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( sourceExcerpt.length( ) >0) &&0<= sourceExcerpt.length( ) )",
            "score": 99.58552769252232,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < isWhitespace && charno < sourceExcerpt.length( ) ) {",
            "score": 99.53757642663044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < is CaMeL Whitespace && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0> charno < sourceExcerpt.length( ) ) {",
            "score": 99.50529679008152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 > char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { ) }",
            "score": 99.48988560267857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { ) }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= true || charno < sourceExcerpt.length( ) ) {",
            "score": 99.46939697265626,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= true || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno < charno ) {",
            "score": 99.44584147135417,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) || sourceExcerpt.length( ) ) {",
            "score": 99.58543178013393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) || source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && sourceExcerpt.length( ) ) { {",
            "score": 99.56235914963942,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '\\n') && sourceExcerpt.equals( '\\n') ) {",
            "score": 99.50435207201087,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '| ') && sourceExcerpt.equals( '| ') ) {",
            "score": 99.50435207201087,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( ' ') && sourceExcerpt.equals( ' ') ) {",
            "score": 99.50435207201087,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '  ') && sourceExcerpt.equals( '  ') ) {",
            "score": 99.50435207201087,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( 'bar') && sourceExcerpt.equals( 'bar') ) {",
            "score": 99.50435207201087,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { / ;",
            "score": 99.48985072544643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { / ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) >1) {",
            "score": 99.46884765625,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { charno = charno ;",
            "score": 99.58535879629629,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { char@@ no = char@@ no ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) { }",
            "score": 99.562255859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && ) {",
            "score": 99.50407971833882,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) <0) {",
            "score": 99.48940894717262,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.charno( ) ) {",
            "score": 99.48762650923295,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno + charno < sourceExcerpt.length ) {",
            "score": 99.47565252130681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no + char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0<= sourceExcerpt.length ) {",
            "score": 99.46880744485294,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && 0 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= null && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4455333891369,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= null && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! excerpt.equals( LINE ) &&0<= charno &&0<= charno ) {",
            "score": 99.50407608695652,
            "correctness": "wrong",
            "tokenized_patch": "&& ! ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0>= charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.48940207741477,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno &&0<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.48759321732955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0) { b.append( '\\n') ; }",
            "score": 99.47526041666667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0) { b.append( '| ') ; }",
            "score": 99.47526041666667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0) { b.append( ' ') ; }",
            "score": 99.47526041666667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0) { b.append( '  ') ; }",
            "score": 99.47526041666667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0) { b.append( 'bar') ; }",
            "score": 99.47526041666667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length )",
            "score": 99.4686638327206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < sourceExcerpt ;",
            "score": 99.56199137369792,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < error.length( ) )",
            "score": 99.536748046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < error . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length -1)",
            "score": 99.475244140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < in && charno < sourceExcerpt.length( ) ) {",
            "score": 99.44512648809524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < in && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno *charno < sourceExcerpt.length( ) ) {",
            "score": 99.58507283528645,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no * char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < source.length( ) )",
            "score": 99.5589599609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < source . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < excerpt.length( ) )",
            "score": 99.53656005859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) &&0<= charno ) {",
            "score": 99.5037151834239,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && false < sourceExcerpt.length( ) ) { {",
            "score": 99.48914155505952,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.47418823242188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& ! charno < sourceExcerpt.length( ) ) {",
            "score": 99.46808733258929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <= charno ) {",
            "score": 99.4447354403409,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length0) {",
            "score": 99.558935546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && error.length( ) >0)",
            "score": 99.53581436820652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && error . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >> <= sourceExcerpt.length( ) ) {",
            "score": 99.50361772017045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >> <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0: charno < sourceExcerpt.length( ) ) {",
            "score": 99.48714870876736,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 : char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.trim( ) ) {",
            "score": 99.47405133928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . trim ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno <= sourceExcerpt.length( ) ) {",
            "score": 99.46808471679688,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= 0 && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { b.append( '\\n') ; }",
            "score": 99.47332208806819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { b.append( '| ') ; }",
            "score": 99.47332208806819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { b.append( ' ') ; }",
            "score": 99.47332208806819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { b.append( '  ') ; }",
            "score": 99.47332208806819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { b.append( 'bar') ; }",
            "score": 99.47332208806819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length <= charno ) {",
            "score": 99.44448370682566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) b.append( '\\n') ;",
            "score": 99.584296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) b.append( '| ') ;",
            "score": 99.584296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) b.append( ' ') ;",
            "score": 99.584296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) b.append( '  ') ;",
            "score": 99.584296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) b.append( 'bar') ;",
            "score": 99.584296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.561376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < error.length( ) ) {",
            "score": 99.5344950358073,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0+0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50284476902173,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 + 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0.2<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4865085767663,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 . $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0.11<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4865085767663,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 . $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0.10<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4865085767663,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 . $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0.9<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4865085767663,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 . $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0.2007<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4865085767663,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 . $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt.lineNumber ) {",
            "score": 99.4729248046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) ?",
            "score": 99.46772203947368,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ?",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length <0) {",
            "score": 99.4444644325658,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.5837910970052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && Character.isWhitespace( charno ) ) {",
            "score": 99.50280230978261,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && Character . is CaMeL Whitespace ( char@@ no ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.48866489955357,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length )",
            "score": 99.47271050347223,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) ==1) {",
            "score": 99.46771850585938,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& Math.isWhitespace( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.56041541466347,
            "correctness": "uncompilable",
            "tokenized_patch": "&& Math . is CaMeL Whitespace ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>>( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.50258178710938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >> ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) ) { {",
            "score": 99.48844604492187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno <2&& charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.48633873980978,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno <11&& charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.48633873980978,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&( charno <10&& charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.48633873980978,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&( charno <9&& charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.48633873980978,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&( charno <2007&& charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.48633873980978,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.lineNumber( ) )",
            "score": 99.4725341796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . line CaMeL Number ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) ||",
            "score": 99.46748279389881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ||",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=0|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.44424293154762,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt ) { b.append( '\\n') ;",
            "score": 99.560400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt ) { b.append( '| ') ;",
            "score": 99.560400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt ) { b.append( ' ') ;",
            "score": 99.560400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt ) { b.append( '  ') ;",
            "score": 99.560400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt ) { b.append( 'bar') ;",
            "score": 99.560400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno -- < sourceExcerpt.length( ) ) {",
            "score": 99.50237482244319,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no -- < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < this.charno ) {",
            "score": 99.48817443847656,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.toString( ) )",
            "score": 99.47246759588069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false &&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.46728515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) && charno < charno ) {",
            "score": 99.444091796875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '\\n') ; b.append( '\\n') ;",
            "score": 99.58342633928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '| ') ; b.append( '| ') ;",
            "score": 99.58342633928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( ' ') ; b.append( ' ') ;",
            "score": 99.58342633928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '  ') ; b.append( '  ') ;",
            "score": 99.58342633928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( 'bar') ; b.append( 'bar') ;",
            "score": 99.58342633928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56002674932066,
            "correctness": "uncompilable",
            "tokenized_patch": "&& && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } int charno = error.getCharno( ) ;",
            "score": 99.5559794108073,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } int charno = error.getCharno( ) ;",
            "score": 99.5559794108073,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } int charno = error.getCharno( ) ;",
            "score": 99.5559794108073,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } int charno = error.getCharno( ) ;",
            "score": 99.5559794108073,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } int charno = error.getCharno( ) ;",
            "score": 99.5559794108073,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno <= sourceExcerpt.length( ) )",
            "score": 99.53381928943452,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt ; ) {",
            "score": 99.48573811848958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno > sourceExcerpt.length( ) )",
            "score": 99.47243041992188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) || false ) {",
            "score": 99.46720581054687,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) || false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && in < sourceExcerpt.length( ) ) {",
            "score": 99.443994140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && in < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58324291087963,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno < charno < charno )",
            "score": 99.5599365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < charno && charno < charno )",
            "score": 99.53352156929348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) { b.append( '\\n') ;",
            "score": 99.50184326171875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) { b.append( '| ') ;",
            "score": 99.50184326171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) { b.append( ' ') ;",
            "score": 99.50184326171875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) { b.append( '  ') ;",
            "score": 99.50184326171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) { b.append( 'bar') ;",
            "score": 99.50184326171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) { )",
            "score": 99.48798162286931,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source.length( ) < source.length( ) ) {",
            "score": 99.485009765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length ( ) < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( sourceExcerpt.length ) ) {",
            "score": 99.47201683407738,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) )",
            "score": 99.46627004523026,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && continue )",
            "score": 99.44392533735795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && continue )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| excerpt.equals( LINE ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.559189453125,
            "correctness": "plausible",
            "tokenized_patch": "|| ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && error.isWhitespace( ) ) {",
            "score": 99.53348795572917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && error . is CaMeL Whitespace ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) *2)",
            "score": 99.4719571200284,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) *11)",
            "score": 99.4719571200284,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) *10)",
            "score": 99.4719571200284,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) *9)",
            "score": 99.4719571200284,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) *2007)",
            "score": 99.4719571200284,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< sourceExcerpt.length( ) ) {",
            "score": 99.46611328125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) true",
            "score": 99.44389415922619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) true",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno == sourceExcerpt.length ) {",
            "score": 99.554384765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no == source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( sourceExcerpt.length( ) ) )",
            "score": 99.53309122721355,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0!= charno < sourceExcerpt.length( ) ) {",
            "score": 99.484619140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 != char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )(1) ) {",
            "score": 99.47177605879934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( 1 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.58310372488839,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ] ) {",
            "score": 99.55435844089673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ] ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && error.getCharno( ) ) {",
            "score": 99.49986683238636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && error . get CaMeL Char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) - ) ;",
            "score": 99.48674982244319,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length *2) {",
            "score": 99.48453776041667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length * $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length *11) {",
            "score": 99.48453776041667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length * $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length *10) {",
            "score": 99.48453776041667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length * $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length *9) {",
            "score": 99.48453776041667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length * $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length *2007) {",
            "score": 99.48453776041667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length * $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno > sourceExcerpt.length( ) )",
            "score": 99.471630859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) ;",
            "score": 99.46524658203126,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < length && charno < sourceExcerpt.length( ) ) {",
            "score": 99.44374302455357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { {",
            "score": 99.48668619791667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.contains( sourceExcerpt ) ) {",
            "score": 99.48433254076087,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . contains ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { ;",
            "score": 99.55812669836956,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) < LINE ) {",
            "score": 99.55394568810097,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) < LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= warning.length( ) ) {",
            "score": 99.49915132068452,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= warning . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) ) continue ;",
            "score": 99.47138006036931,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) true ) {",
            "score": 99.4432373046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < length && charno < sourceExcerpt.length( ) ) {",
            "score": 99.55782376802884,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno < excerpt.length( ) ) {",
            "score": 99.5539453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno < source.length( ) ) {",
            "score": 99.49907892400569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno <1) {",
            "score": 99.48582821800595,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && */ charno < sourceExcerpt.length( ) ) {",
            "score": 99.48398225203805,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && * / char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ; else",
            "score": 99.47134254092262,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno || charno < sourceExcerpt.length( ) ) {",
            "score": 99.46468098958333,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) && excerpt.length( ) >0) {",
            "score": 99.58238002232143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) <= ) {",
            "score": 99.532177734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) <= ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { ?",
            "score": 99.48562622070312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { ?",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) length( ) >0) {",
            "score": 99.48396102241848,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.mode( ) ) {",
            "score": 99.47131928943452,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . mode ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length( ) &&",
            "score": 99.46427001953126,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno ==0) {",
            "score": 99.44315011160714,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && ! sourceExcerpt.equals( LINE ) ) {",
            "score": 99.5536639873798,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno < charno )",
            "score": 99.5320712002841,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0% charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.49850027901786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 % char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= '\\n') {",
            "score": 99.48545532226562,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= $STRING$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= '| ') {",
            "score": 99.48545532226562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= ' ') {",
            "score": 99.48545532226562,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= $STRING$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= '  ') {",
            "score": 99.48545532226562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= 'bar') {",
            "score": 99.48545532226562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.getLength( )( ) ) {",
            "score": 99.47108154296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . get CaMeL Length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) >=0) {",
            "score": 99.46409912109375,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) >1) {",
            "score": 99.44308035714286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) *sourceExcerpt.length( ) ) {",
            "score": 99.556884765625,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) &&0<=0) {",
            "score": 99.5533984375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) <=1)",
            "score": 99.53130859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) <= 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && charno < source.length( ) ) {",
            "score": 99.49782492897727,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > ) { {",
            "score": 99.48539428710937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& true &&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.46398344494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& true && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length <2) {",
            "score": 99.44296603732639,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length <11) {",
            "score": 99.44296603732639,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length <10) {",
            "score": 99.44296603732639,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length <9) {",
            "score": 99.44296603732639,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length <2007) {",
            "score": 99.44296603732639,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { if(0<= charno",
            "score": 99.58185944733796,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { if ( 0 <= char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno >= sourceExcerpt.length( ) )",
            "score": 99.53026181175595,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ) > sourceExcerpt.length( ) ) {",
            "score": 99.49755859375,
            "correctness": "wrong",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0> charno && charno > sourceExcerpt.length ) {",
            "score": 99.46981008429276,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) &&",
            "score": 99.4639828330592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt != null )",
            "score": 99.52975027901786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) { }",
            "score": 99.49753639914773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno instanceof sourceExcerpt.length( ) ) {",
            "score": 99.48506091889881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no instanceof source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& sourceExcerpt.length( ) >0) {",
            "score": 99.46396998355263,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= 0 && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&( charno &&0<= charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.581513671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )( charno ) ) {",
            "score": 99.556513671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < sourceExcerpt.length ++ ) {",
            "score": 99.55267578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) ;",
            "score": 99.49727006392045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ++ ) {",
            "score": 99.48298783735795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& ! sourceExcerpt.length( ) ) {",
            "score": 99.46352132161458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ? charno : sourceExcerpt.length( ) ) {",
            "score": 99.44198753720238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ? char@@ no : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) *int charno ;",
            "score": 99.581064453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) * int char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < LINE )",
            "score": 99.556435546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < LINE )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= false ) {",
            "score": 99.484423828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno & charno < sourceExcerpt.length( ) )",
            "score": 99.4828464673913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no & char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length ) { b.append( '\\n') ; }",
            "score": 99.46958229758523,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length ) { b.append( '| ') ; }",
            "score": 99.46958229758523,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length ) { b.append( ' ') ; }",
            "score": 99.46958229758523,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length ) { b.append( '  ') ; }",
            "score": 99.46958229758523,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length ) { b.append( 'bar') ; }",
            "score": 99.46958229758523,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno >= sourceExcerpt.length ) {",
            "score": 99.4635009765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) < charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.58097621372768,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ) { b.append( '\\n') ;",
            "score": 99.5563252766927,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ) { b.append( '| ') ;",
            "score": 99.5563252766927,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ) { b.append( ' ') ;",
            "score": 99.5563252766927,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ) { b.append( '  ') ;",
            "score": 99.5563252766927,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ) { b.append( 'bar') ;",
            "score": 99.5563252766927,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno ==0) {",
            "score": 99.55222731370192,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( '\\n') ) {",
            "score": 99.5291164232337,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( '| ') ) {",
            "score": 99.5291164232337,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( ' ') ) {",
            "score": 99.5291164232337,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( '  ') ) {",
            "score": 99.5291164232337,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( 'bar') ) {",
            "score": 99.5291164232337,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ||0< charno ) {",
            "score": 99.48408435639881,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno < sourceExcerpt.length ) {",
            "score": 99.48256429036458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& &&0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.469482421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ||0<= charno && charno <",
            "score": 99.58095005580357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= char@@ no && char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && error.sourceName != null )",
            "score": 99.52892535665761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && error . source CaMeL Name != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != '\\n') {",
            "score": 99.48348388671874,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != $STRING$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != '| ') {",
            "score": 99.48348388671874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != ' ') {",
            "score": 99.48348388671874,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != $STRING$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != '  ') {",
            "score": 99.48348388671874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != 'bar') {",
            "score": 99.48348388671874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) { b.append( '\\n') ; }",
            "score": 99.58066587094908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) { b.append( '| ') ; }",
            "score": 99.58066587094908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) { b.append( ' ') ; }",
            "score": 99.58066587094908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) { b.append( '  ') ; }",
            "score": 99.58066587094908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) { b.append( 'bar') ; }",
            "score": 99.58066587094908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < charno",
            "score": 99.555791015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0] < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.48335404829545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ] < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.48165760869566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.46930486505681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0!= charno && charno < sourceExcerpt.length ) {",
            "score": 99.46295487253289,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) throw",
            "score": 99.43987165178571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) throw",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.58040364583333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >=0) { {",
            "score": 99.48306129092262,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno - sourceExcerpt.length( ) ) {",
            "score": 99.46924506293402,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no - source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( error.sourceName ) ; }",
            "score": 99.58009556361607,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . source CaMeL Name ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno < {",
            "score": 99.55544026692708,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < error.length( ) )",
            "score": 99.52746051290761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < error . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= charno ) { {",
            "score": 99.48298783735795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& *0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.48101251775569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& * 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.46913364955357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >=0) ;",
            "score": 99.4617919921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { &&",
            "score": 99.4394890280331,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length && charno < charno ) {",
            "score": 99.55520395132211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && error.description < sourceExcerpt.length( ) ) {",
            "score": 99.49390758167614,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && error . description < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( ) ) { {",
            "score": 99.48289905894886,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )(0) ) {",
            "score": 99.46910336143092,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( 0 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'.< sourceExcerpt.length( ) ) {",
            "score": 99.4616931733631,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '| '.< sourceExcerpt.length( ) ) {",
            "score": 99.4616931733631,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '.< sourceExcerpt.length( ) ) {",
            "score": 99.4616931733631,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '  '.< sourceExcerpt.length( ) ) {",
            "score": 99.4616931733631,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'.< sourceExcerpt.length( ) ) {",
            "score": 99.4616931733631,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && type < sourceExcerpt.length( ) ) {",
            "score": 99.43934936523438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && type < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && && charno < charno && charno < charno && charno < charno )",
            "score": 99.5551006610577,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno < sourceExcerpt.length0) {",
            "score": 99.5500957782452,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && {",
            "score": 99.52627563476562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && sourceExcerpt != null ) {",
            "score": 99.49365234375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno || charno > sourceExcerpt.length( ) ) {",
            "score": 99.46904064360119,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no || char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt != sourceExcerpt.length ) {",
            "score": 99.43909912109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt != source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.57971722146739,
            "correctness": "uncompilable",
            "tokenized_patch": "int char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && charno !=0) {",
            "score": 99.54994553786058,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no != 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= ! charno && charno < sourceExcerpt.length( ) )",
            "score": 99.52620442708333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ++( ) ) {",
            "score": 99.49184348366477,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ++ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { ) { }",
            "score": 99.4827547940341,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno == sourceExcerpt.length( ) ) )",
            "score": 99.4690274325284,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt != length( ) ) {",
            "score": 99.46107700892857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt != length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) { try",
            "score": 99.57962472098214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { try",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < charno && charno < charno ) {",
            "score": 99.5531589673913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.54991736778847,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno.length( ) ) {",
            "score": 99.49171031605114,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.48273577008929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno *sourceExcerpt.length ) {",
            "score": 99.4688720703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no * source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <0) {",
            "score": 99.43843005952381,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "if( sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.57923719618056,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ++ ) {",
            "score": 99.55304827008929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) < sourceExcerpt.length( ) )",
            "score": 99.52429729959239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && && sourceExcerpt.length( ) < charno ) {",
            "score": 99.482666015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ).length( ).length( ) ) {",
            "score": 99.48014322916667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) . length ( ) . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != sourceExcerpt.sourceExcerpt.length( ) ) {",
            "score": 99.4687167080966,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no != source CaMeL Ex@@ cer@@ pt . source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) - ) {",
            "score": 99.46041067023026,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) - ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length && charno <0) {",
            "score": 99.43820029810855,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length && char@@ no < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) && charno < charno ) {",
            "score": 99.55238850911458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < end && charno < sourceExcerpt.length( ) ) {",
            "score": 99.54897836538461,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < end && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ||0<= sourceExcerpt.length( ) ) {",
            "score": 99.48250325520833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && || 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.startsWith( '\\n') ) {",
            "score": 99.4801025390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.startsWith( '| ') ) {",
            "score": 99.4801025390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.startsWith( ' ') ) {",
            "score": 99.4801025390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.startsWith( '  ') ) {",
            "score": 99.4801025390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.startsWith( 'bar') ) {",
            "score": 99.4801025390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno != sourceExcerpt.length( ) ) )",
            "score": 99.46832830255681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.46036987304687,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) continue ;",
            "score": 99.43807373046874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno )",
            "score": 99.52315848214286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && excerpt.equals( '\\n') ) {",
            "score": 99.490966796875,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && excerpt.equals( '| ') ) {",
            "score": 99.490966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && excerpt.equals( ' ') ) {",
            "score": 99.490966796875,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && excerpt.equals( '  ') ) {",
            "score": 99.490966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && excerpt.equals( 'bar') ) {",
            "score": 99.490966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <0) { {",
            "score": 99.48235212053571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < 0 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno > sourceExcerpt.lineNumber ) {",
            "score": 99.46814546130952,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return true ;",
            "score": 99.43769666883681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return true ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) &&0< sourceExcerpt.length( ) ) {",
            "score": 99.57912868923611,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < charno ) { b.append( '\\n') ;",
            "score": 99.5511807528409,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno ) { b.append( '| ') ;",
            "score": 99.5511807528409,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno ) { b.append( ' ') ;",
            "score": 99.5511807528409,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno ) { b.append( '  ') ;",
            "score": 99.5511807528409,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno ) { b.append( 'bar') ;",
            "score": 99.5511807528409,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length1( ) ) {",
            "score": 99.54805131392045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length 1 ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.equals( LINE ) )",
            "score": 99.52274753736413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.49072265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { )",
            "score": 99.4821418313419,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=.0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.47939918154762,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= . 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( ) ; }",
            "score": 99.46792457217262,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==1) ;",
            "score": 99.46019897460937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 1 ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno || charno < sourceExcerpt.length( ) )",
            "score": 99.43728637695312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) && excerpt.equals( LINE ) ) {",
            "score": 99.54796875,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno &&0<= charno < sourceExcerpt.length( ) )",
            "score": 99.52262015964673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) *1) {",
            "score": 99.47903575067934,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length( ) - ) {",
            "score": 99.46776234019886,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) - ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&(0< sourceExcerpt.length ) ) {",
            "score": 99.4597900390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( 0 < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) b.append( '\\n') ;",
            "score": 99.57814534505208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) b.append( '| ') ;",
            "score": 99.57814534505208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) b.append( ' ') ;",
            "score": 99.57814534505208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) b.append( '  ') ;",
            "score": 99.57814534505208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) b.append( 'bar') ;",
            "score": 99.57814534505208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt != null ) {",
            "score": 99.48955743963069,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt != null ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( ) )",
            "score": 99.46768008961396,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ;",
            "score": 99.45970961626838,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return sourceExcerpt.length( ) ;",
            "score": 99.57772122896634,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && ! sourceExcerpt.length( ) ) {",
            "score": 99.549609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { }",
            "score": 99.52210190716912,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length >1) {",
            "score": 99.4817127046131,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length > 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno , charno < sourceExcerpt.length( ) ) {",
            "score": 99.47879464285714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no , char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( sourceExcerpt ) ; } else {",
            "score": 99.46757368607955,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno <1) {",
            "score": 99.43612510279605,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) ==0) {",
            "score": 99.57761548913044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '\\n') ; }",
            "score": 99.54959716796876,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '| ') ; }",
            "score": 99.54959716796876,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( ' ') ; }",
            "score": 99.54959716796876,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '  ') ; }",
            "score": 99.54959716796876,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( 'bar') ; }",
            "score": 99.54959716796876,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < sourceExcerpt )",
            "score": 99.5220438639323,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) + ) {",
            "score": 99.478759765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno < sourceExcerpt.length )",
            "score": 99.45918104383681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno || charno < sourceExcerpt.length( ) ) {",
            "score": 99.57744683159723,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { } }",
            "score": 99.54933763586956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( '\\n') )",
            "score": 99.52183024088542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( '| ') )",
            "score": 99.52183024088542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( ' ') )",
            "score": 99.52183024088542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( '  ') )",
            "score": 99.52183024088542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.equals( 'bar') )",
            "score": 99.52183024088542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.48143920898437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( false ) ) {",
            "score": 99.47859330610795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( false ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt2) {",
            "score": 99.46724446614583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt11) {",
            "score": 99.46724446614583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt10) {",
            "score": 99.46724446614583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt9) {",
            "score": 99.46724446614583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt2007) {",
            "score": 99.46724446614583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= true && charno < sourceExcerpt.length ) {",
            "score": 99.45905897352431,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= true && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno( source.length( ) ) ) {",
            "score": 99.43604678199405,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ( source . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) < charno && sourceExcerpt.length( ) >0)",
            "score": 99.57720269097223,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt ) { {",
            "score": 99.549130859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>> charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.48881603422619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >> char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno ] < sourceExcerpt.length( ) ) {",
            "score": 99.48140092329545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no ] < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( )( ) >0) {",
            "score": 99.47777210582386,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.46722702752976,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <= && charno < sourceExcerpt.length( ) ) {",
            "score": 99.43602294921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0( charno < charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.547607421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno <0) {",
            "score": 99.488525390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& !0<= charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.4671297940341,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.45891723632812,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <2&& charno == sourceExcerpt.length( ) ) {",
            "score": 99.4360119047619,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <11&& charno == sourceExcerpt.length( ) ) {",
            "score": 99.4360119047619,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <10&& charno == sourceExcerpt.length( ) ) {",
            "score": 99.4360119047619,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <9&& charno == sourceExcerpt.length( ) ) {",
            "score": 99.4360119047619,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <2007&& charno == sourceExcerpt.length( ) ) {",
            "score": 99.4360119047619,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) && excerpt.equals( LINE ) )",
            "score": 99.5211690266927,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.charno < sourceExcerpt.length( ) ) {",
            "score": 99.48832872178819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno &&( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.47757090692934,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length -1) {",
            "score": 99.46697443181819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && sourceExcerpt.length( ) )",
            "score": 99.57650052584134,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == '\\n'&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.54355003720238,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no == $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno == '| '&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.54355003720238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == ' '&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.54355003720238,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no == $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno == '  '&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.54355003720238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == 'bar'&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.54355003720238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < charno ) )",
            "score": 99.48084077380952,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno *sourceExcerpt.length( ) ) {",
            "score": 99.46689181857639,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no * source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && false &&0<= sourceExcerpt.length ) {",
            "score": 99.458642578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false && 0 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2&& charno != sourceExcerpt.length( ) ) {",
            "score": 99.43500046502976,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <11&& charno != sourceExcerpt.length( ) ) {",
            "score": 99.43500046502976,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <10&& charno != sourceExcerpt.length( ) ) {",
            "score": 99.43500046502976,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <9&& charno != sourceExcerpt.length( ) ) {",
            "score": 99.43500046502976,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <2007&& charno != sourceExcerpt.length( ) ) {",
            "score": 99.43500046502976,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0&& charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.54679361979167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < error.length( ) ) {",
            "score": 99.5204547384511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno )",
            "score": 99.487548828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) !=0) { ) {",
            "score": 99.4808349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47665803328805,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.466796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length( ) ) ;",
            "score": 99.45841064453126,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno !=0) {",
            "score": 99.43487870065789,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no != 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) b.append( '\\n') ;",
            "score": 99.57600911458333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) b.append( '| ') ;",
            "score": 99.57600911458333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) b.append( ' ') ;",
            "score": 99.57600911458333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) b.append( '  ') ;",
            "score": 99.57600911458333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) b.append( 'bar') ;",
            "score": 99.57600911458333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.length )",
            "score": 99.52044122869319,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.sourceExcerpt.length ) {",
            "score": 99.48066638764881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ *&&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47658372961956,
            "correctness": "uncompilable",
            "tokenized_patch": "/ * && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= true &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.45795641447368,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= true && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.4347912016369,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <11|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.4347912016369,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <10|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.4347912016369,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <9|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.4347912016369,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <2007|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.4347912016369,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { {",
            "score": 99.546630859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < excerpt.length( ) ) {",
            "score": 99.54050903320312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno > sourceExcerpt ) {",
            "score": 99.4861727627841,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) <2) {",
            "score": 99.47634055397727,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) <11) {",
            "score": 99.47634055397727,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) <10) {",
            "score": 99.47634055397727,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) <9) {",
            "score": 99.47634055397727,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) <2007) {",
            "score": 99.47634055397727,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno > sourceExcerpt.length( ) -1) {",
            "score": 99.46635298295455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno &&0< sourceExcerpt.length( ) ) {",
            "score": 99.45793071546052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= false && charno < sourceExcerpt.length( ) ) {",
            "score": 99.43473307291667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { int charno ;",
            "score": 99.575810546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { int char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( sourceExcerpt.length( ) ) ) {",
            "score": 99.54048828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && sourceExcerpt.length < sourceExcerpt.length ) {",
            "score": 99.48002485795455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < || charno < sourceExcerpt.length( ) )",
            "score": 99.4762471516927,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.trim( ) ) {",
            "score": 99.4663314819336,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . trim ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt < sourceExcerpt ) {",
            "score": 99.434716796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) return '\\n';",
            "score": 99.54579671223958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) return '| ';",
            "score": 99.54579671223958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) return ' ';",
            "score": 99.54579671223958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) return '  ';",
            "score": 99.54579671223958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) return 'bar';",
            "score": 99.54579671223958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno <0&& charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.54035750679348,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && Character.isWhitespace( sourceExcerpt ) ) {",
            "score": 99.484619140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && Character . is CaMeL Whitespace ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && || charno < sourceExcerpt.length ) {",
            "score": 99.4797607421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && || char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && sourceExcerpt.length( ) >0) {",
            "score": 99.4662841796875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno !=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.45782180059524,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no != 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& this.charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.54559326171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& this . char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length( ) ) ;",
            "score": 99.47966657366071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt.length( )( ) ) )",
            "score": 99.47603352864583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ; }",
            "score": 99.46612258184524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0&&0< charno && sourceExcerpt.length( ) ) {",
            "score": 99.45761253720238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( error.description ) ; }",
            "score": 99.5752734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '\\n') &&0<= sourceExcerpt.length( ) )",
            "score": 99.51798148777173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '| ') &&0<= sourceExcerpt.length( ) )",
            "score": 99.51798148777173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( ' ') &&0<= sourceExcerpt.length( ) )",
            "score": 99.51798148777173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '  ') &&0<= sourceExcerpt.length( ) )",
            "score": 99.51798148777173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( 'bar') &&0<= sourceExcerpt.length( ) )",
            "score": 99.51798148777173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno ) {",
            "score": 99.48291015625,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { b.append( '\\n') ; } else { b.append( ) ; }",
            "score": 99.46607055664063,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } else { b.append( ) ; }",
            "score": 99.46607055664063,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else { b.append( ) ; }",
            "score": 99.46607055664063,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } else { b.append( ) ; }",
            "score": 99.46607055664063,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else { b.append( ) ; }",
            "score": 99.46607055664063,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) !=0) { {",
            "score": 99.45757765997024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) >2) {",
            "score": 99.43401227678571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) >11) {",
            "score": 99.43401227678571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) >10) {",
            "score": 99.43401227678571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) >9) {",
            "score": 99.43401227678571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) >2007) {",
            "score": 99.43401227678571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) b.append( '\\n') ;",
            "score": 99.5752185639881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) b.append( '| ') ;",
            "score": 99.5752185639881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) b.append( ' ') ;",
            "score": 99.5752185639881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) b.append( '  ') ;",
            "score": 99.5752185639881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) b.append( 'bar') ;",
            "score": 99.5752185639881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { else {",
            "score": 99.545166015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) -1) {",
            "score": 99.53971354166667,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.length < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.51698811848958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ? charno",
            "score": 99.48178932883523,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ||0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4755526455966,
            "correctness": "uncompilable",
            "tokenized_patch": "&& || 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < options.length ) {",
            "score": 99.45756603422619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < options . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && code < sourceExcerpt.length( ) ) {",
            "score": 99.43395385742187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && code < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( error.description ) ;",
            "score": 99.57478841145833,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ?0: charno )",
            "score": 99.539599609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? 0 : char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '\\n') ; } else {",
            "score": 99.54430042613636,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '| ') ; } else {",
            "score": 99.54430042613636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( ' ') ; } else {",
            "score": 99.54430042613636,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( '  ') ; } else {",
            "score": 99.54430042613636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( 'bar') ; } else {",
            "score": 99.54430042613636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) throws RuntimeException {",
            "score": 99.539443359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) throws Runtime CaMeL Exception {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( '\\n') ;",
            "score": 99.5165682705966,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( '| ') ;",
            "score": 99.5165682705966,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( ' ') ;",
            "score": 99.5165682705966,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( '  ') ;",
            "score": 99.5165682705966,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.append( 'bar') ;",
            "score": 99.5165682705966,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { / ; }",
            "score": 99.47838245738636,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { / ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < sourceExcerpt.length ; ) {",
            "score": 99.47529933763587,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno >=0) {",
            "score": 99.43321010044643,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no >= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && ! charno && charno < sourceExcerpt.length ) {",
            "score": 99.54428498641305,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.lineNumber < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.538486328125,
            "correctness": "wrong",
            "tokenized_patch": "&& error . line CaMeL Number < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < charno < sourceExcerpt.length( ) )",
            "score": 99.51626188858695,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.47453507133152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != true ) {",
            "score": 99.45701904296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& &&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.43289184570312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { return ) ;",
            "score": 99.47800514914773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { return ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ).length( ) )",
            "score": 99.4742940266927,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.46409098307292,
            "correctness": "uncompilable",
            "tokenized_patch": "|| char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt )",
            "score": 99.4326400756836,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) b.append( '\\n') ;",
            "score": 99.57335844494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) b.append( '| ') ;",
            "score": 99.57335844494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) b.append( ' ') ;",
            "score": 99.57335844494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) b.append( '  ') ;",
            "score": 99.57335844494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) b.append( 'bar') ;",
            "score": 99.57335844494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt.length( ) ) { {",
            "score": 99.54361328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && excerpt.length( ) >0) {",
            "score": 99.53775024414062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >0&& charno < sourceExcerpt.length( ) )",
            "score": 99.51533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { {",
            "score": 99.48112407483552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) <= ) {",
            "score": 99.47781372070312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) <= ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { b.append( error.description ) ;",
            "score": 99.57322410300925,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { b.append( '\\n') ;",
            "score": 99.54355003720238,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { b.append( '| ') ;",
            "score": 99.54355003720238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { b.append( ' ') ;",
            "score": 99.54355003720238,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { b.append( '  ') ;",
            "score": 99.54355003720238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { b.append( 'bar') ;",
            "score": 99.54355003720238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) >0)",
            "score": 99.51517740885417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } else { b.append( source ) ; }",
            "score": 99.46363467261905,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( source ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } else { b.append( source ) ; }",
            "score": 99.46363467261905,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( source ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else { b.append( source ) ; }",
            "score": 99.46363467261905,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( source ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } else { b.append( source ) ; }",
            "score": 99.46363467261905,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( source ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else { b.append( source ) ; }",
            "score": 99.46363467261905,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( source ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno < sourceExcerpt.length( ) ) ;",
            "score": 99.455322265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) && true ) {",
            "score": 99.43240017361111,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) && true ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.543505859375,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '\\n') ; } else { b.append( ) ; } }",
            "score": 99.463623046875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } else { b.append( ) ; } }",
            "score": 99.463623046875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else { b.append( ) ; } }",
            "score": 99.463623046875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } else { b.append( ) ; } }",
            "score": 99.463623046875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else { b.append( ) ; } }",
            "score": 99.463623046875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= length ) {",
            "score": 99.43157348632812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt != null ) {",
            "score": 99.51495361328125,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) &&0<= charno ) {",
            "score": 99.47662062872024,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno &&2<= sourceExcerpt.length( ) ) {",
            "score": 99.43129185267857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno &&11<= sourceExcerpt.length( ) ) {",
            "score": 99.43129185267857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno &&10<= sourceExcerpt.length( ) ) {",
            "score": 99.43129185267857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno &&9<= sourceExcerpt.length( ) ) {",
            "score": 99.43129185267857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno &&2007<= sourceExcerpt.length( ) ) {",
            "score": 99.43129185267857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno < charno && charno < sourceExcerpt.length( ) ) ) { {",
            "score": 99.541904296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } if( sourceExcerpt.equals( LINE ) ) {",
            "score": 99.5344140625,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; } if( sourceExcerpt.equals( LINE ) ) {",
            "score": 99.5344140625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } if( sourceExcerpt.equals( LINE ) ) {",
            "score": 99.5344140625,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; } if( sourceExcerpt.equals( LINE ) ) {",
            "score": 99.5344140625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } if( sourceExcerpt.equals( LINE ) ) {",
            "score": 99.5344140625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || b.append( '\\n') ) {",
            "score": 99.5148288892663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || b . append ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || b.append( '| ') ) {",
            "score": 99.5148288892663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || b . append ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || b.append( ' ') ) {",
            "score": 99.5148288892663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || b . append ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || b.append( '  ') ) {",
            "score": 99.5148288892663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || b . append ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || b.append( 'bar') ) {",
            "score": 99.5148288892663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || b . append ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0== sourceExcerpt.length( ) ) {",
            "score": 99.45449989720395,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && 0 == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <2&& charno <0) {",
            "score": 99.43112521701389,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <11&& charno <0) {",
            "score": 99.43112521701389,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <10&& charno <0) {",
            "score": 99.43112521701389,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <9&& charno <0) {",
            "score": 99.43112521701389,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <2007&& charno <0) {",
            "score": 99.43112521701389,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= excerpt.length( ) ) {",
            "score": 99.54161487926136,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && sourceExcerpt.equals( LINE ) ) {",
            "score": 99.53357421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < source || charno < sourceExcerpt.length( ) ) {",
            "score": 99.47637648809524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && '\\n'.length( ) >0) {",
            "score": 99.47513253348214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && $STRING$ . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && '| '.length( ) >0) {",
            "score": 99.47513253348214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && $STRING$ . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && ' '.length( ) >0) {",
            "score": 99.47513253348214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && $STRING$ . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && '  '.length( ) >0) {",
            "score": 99.47513253348214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && $STRING$ . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && 'bar'.length( ) >0) {",
            "score": 99.47513253348214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && $STRING$ . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && sourceExcerpt.equals( sourceExcerpt ) ) {",
            "score": 99.47310014204545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( )( ) ) ) {",
            "score": 99.462158203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0|| charno < sourceExcerpt.length( ) )",
            "score": 99.57173213252315,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { } else",
            "score": 99.513916015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno < sourceExcerpt.lineNumber ) {",
            "score": 99.46135602678571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && false && charno < sourceExcerpt.length( ) ) {",
            "score": 99.54071044921875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.length( ) >= sourceExcerpt.length( ) ) {",
            "score": 99.47450474330357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ; charno ++ ) {",
            "score": 99.47297469429348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -1)",
            "score": 99.46099494485294,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != length( ) ) {",
            "score": 99.45362006293402,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= charno && charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.57095449942129,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < error.length( ) )",
            "score": 99.51303932883523,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < error . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { ) {",
            "score": 99.47596324573864,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ||0<= charno ) {",
            "score": 99.47392345610119,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&2< charno && sourceExcerpt.length( ) ) {",
            "score": 99.4728367017663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&11< charno && sourceExcerpt.length( ) ) {",
            "score": 99.4728367017663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&10< charno && sourceExcerpt.length( ) ) {",
            "score": 99.4728367017663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&9< charno && sourceExcerpt.length( ) ) {",
            "score": 99.4728367017663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2007< charno && sourceExcerpt.length( ) ) {",
            "score": 99.4728367017663,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { return ) ; }",
            "score": 99.46065063476563,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && matches < sourceExcerpt.length( ) ) {",
            "score": 99.43053588867187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && matches < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.570849609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && sourceExcerpt.length( ) ==0)",
            "score": 99.5127665201823,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < source.length( ) || charno < source.length( ) ) {",
            "score": 99.47369094122024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source . length ( ) || char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.length )",
            "score": 99.46021864149306,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && sourceExcerpt.length < charno ) {",
            "score": 99.4301513671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) || {",
            "score": 99.51276189630681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != sourceExcerpt ) {",
            "score": 99.47559814453125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno >2) {",
            "score": 99.47364443824405,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno >11) {",
            "score": 99.47364443824405,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno >10) {",
            "score": 99.47364443824405,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno >9) {",
            "score": 99.47364443824405,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno >2007) {",
            "score": 99.47364443824405,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) >2) {",
            "score": 99.47272283380681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) >11) {",
            "score": 99.47272283380681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) >10) {",
            "score": 99.47272283380681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) >9) {",
            "score": 99.47272283380681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) >2007) {",
            "score": 99.47272283380681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= '\\n'&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.45283203125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= '| '&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.45283203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= ' '&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.45283203125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= '  '&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.45283203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= 'bar'&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.45283203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno source.length( ) ) {",
            "score": 99.43014365748355,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt.equals( LINE ) ) {",
            "score": 99.53207795516305,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && ! charno < sourceExcerpt.length( ) )",
            "score": 99.51259543678977,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= ) { ) {",
            "score": 99.47553943452381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < this.getCharno( ) ) {",
            "score": 99.47339477539063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . get CaMeL Char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.equals( sourceExcerpt ) ) {",
            "score": 99.47265625,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0< charno && charno != sourceExcerpt.length( ) ) {",
            "score": 99.45970517113095,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<=0&& charno >= sourceExcerpt.length( ) ) {",
            "score": 99.45281982421875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ||0) {",
            "score": 99.56993036684783,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno ) {",
            "score": 99.53943401834239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ++ charno ) {",
            "score": 99.47548130580357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ++ char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( LINE ) &&0<= charno ) {",
            "score": 99.47336297286184,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ).length( ) ) {",
            "score": 99.45906372070313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= false || charno < sourceExcerpt.length( ) ) {",
            "score": 99.4528076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= false || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno( ) ) {",
            "score": 99.5387652853261,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( '\\n') ;",
            "score": 99.47320265997024,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( '| ') ;",
            "score": 99.47320265997024,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( ' ') ;",
            "score": 99.47320265997024,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( '  ') ;",
            "score": 99.47320265997024,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( 'bar') ;",
            "score": 99.47320265997024,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>> >= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47238991477273,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >> >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.45263061523437,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 != char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && true( sourceExcerpt.length( ) ) ) {",
            "score": 99.42937360491071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && true ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.56927490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && ! charno && charno < sourceExcerpt.length ) {",
            "score": 99.5387471516927,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.equals( LINE ) ) {",
            "score": 99.53150024414063,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0*charno && charno < sourceExcerpt.length( ) )",
            "score": 99.51234130859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 * char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length )",
            "score": 99.45863172743056,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=0&& charno <= sourceExcerpt.length( ) ) {",
            "score": 99.42902483258929,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= 0 && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.56925101902173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < sourceExcerpt ;",
            "score": 99.5380859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.51230003720238,
            "correctness": "uncompilable",
            "tokenized_patch": "|| char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= ) { ) ;",
            "score": 99.4750744047619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ; */",
            "score": 99.47199041193181,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; * /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -2) {",
            "score": 99.45749240451389,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -11) {",
            "score": 99.45749240451389,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -10) {",
            "score": 99.45749240451389,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -9) {",
            "score": 99.45749240451389,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -2007) {",
            "score": 99.45749240451389,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < end ) {",
            "score": 99.42900158110119,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < end ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else {",
            "score": 99.537841796875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno >0) {",
            "score": 99.47250705295139,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<=( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.47178344726562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.45235188802083,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0&& charno < charno ) {",
            "score": 99.42837042557566,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "if(0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5690585049716,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno ; charno ++ ) {",
            "score": 99.53714149876645,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= ) ;",
            "score": 99.47481496710526,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&02<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47129128196023,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&011<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47129128196023,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&010<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47129128196023,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "1"
        },
        {
            "patch": "&&09<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47129128196023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&02007<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47129128196023,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 $NUMBER$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0> charno && charno > sourceExcerpt.length( ) ) {",
            "score": 99.45721726190476,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 > char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0== charno && sourceExcerpt.length( ) ==0) {",
            "score": 99.4523193359375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) && excerpt.length( ) >0) )",
            "score": 99.56859447337963,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) > 0 ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length && charno < charno ) {",
            "score": 99.53638671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( charno ) ) {",
            "score": 99.53019913383152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno >0) {",
            "score": 99.47107514880952,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt && charno < sourceExcerpt ) {",
            "score": 99.45707775297619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < !0) {",
            "score": 99.45213681175595,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < ! 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56824669471153,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) != ) {",
            "score": 99.4743408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) != ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&1<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.4711277173913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 1 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno *charno *sourceExcerpt.length( ) ) {",
            "score": 99.4568103608631,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no * char@@ no * source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) return",
            "score": 99.4518978721217,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) return",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )2)",
            "score": 99.42808314732143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )11)",
            "score": 99.42808314732143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )10)",
            "score": 99.42808314732143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )9)",
            "score": 99.42808314732143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( )2007)",
            "score": 99.42808314732143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && charno < charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.56813401442308,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt.length ) { {",
            "score": 99.53575642903645,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < error.length && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52995499320652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < error . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! charno < sourceExcerpt.length( ) )",
            "score": 99.51037016369048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt [ length1] ) {",
            "score": 99.47401646205357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt [ length 1 ] ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno <1) {",
            "score": 99.46804470486111,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.sourceExcerpt( ) ) {",
            "score": 99.45665283203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . source CaMeL Ex@@ cer@@ pt ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < charno && charno < charno ) {",
            "score": 99.45186157226563,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && excerpt.equals( charno ) ) {",
            "score": 99.52968343098958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.51021144701087,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( ) -1) {",
            "score": 99.45644996279762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.451611328125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=0&& charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56795601222827,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( )",
            "score": 99.5097900390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && false < sourceExcerpt.length( ) ) {",
            "score": 99.47364443824405,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && false < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && false ) {",
            "score": 99.4674560546875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt + charno ) {",
            "score": 99.45641479492187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt + char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& true &&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.45160522460938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& true && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && default <= sourceExcerpt.length( ) ) {",
            "score": 99.42747192382812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && default <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.56776258680556,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < charno ;",
            "score": 99.53474564985795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( LINE ) ) {",
            "score": 99.52930501302083,
            "correctness": "plausible",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno < excerpt.length( ) )",
            "score": 99.5096499794408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno & charno < sourceExcerpt.length( ) ) {",
            "score": 99.47062174479167,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no & char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= excerpt.length( ) ) {",
            "score": 99.46714430588942,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && charno > sourceExcerpt.length( ) )",
            "score": 99.45564778645833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno( sourceExcerpt ) )",
            "score": 99.45144653320312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ( source CaMeL Ex@@ cer@@ pt ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charCount < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47057574728261,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char CaMeL Count < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( LINE ) &&0<= charno ) {",
            "score": 99.46708374023437,
            "correctness": "plausible",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0!= charno && charno > sourceExcerpt.length ) {",
            "score": 99.45559210526316,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt != null ) {",
            "score": 99.45136461759868,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2<= sourceExcerpt.length ) {",
            "score": 99.42728678385417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&11<= sourceExcerpt.length ) {",
            "score": 99.42728678385417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&10<= sourceExcerpt.length ) {",
            "score": 99.42728678385417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&9<= sourceExcerpt.length ) {",
            "score": 99.42728678385417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2007<= sourceExcerpt.length ) {",
            "score": 99.42728678385417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.56744140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( )( ) <= sourceExcerpt.length( ) ) {",
            "score": 99.50856615149456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) ( ) <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt.length( ) ) { )",
            "score": 99.47349330357143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt.length -1) ) {",
            "score": 99.47055451766305,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - 1 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && error.getCharno( ) < charno ) {",
            "score": 99.466845703125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && error . get CaMeL Char@@ no ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0> sourceExcerpt.length( ) ) {",
            "score": 99.45548502604167,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<0&& charno < sourceExcerpt.length ) {",
            "score": 99.45111762152777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno == sourceExcerpt.length( ) )",
            "score": 99.56712928185097,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '\\n') ; } else {",
            "score": 99.53314208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '| ') ; } else {",
            "score": 99.53314208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( ' ') ; } else {",
            "score": 99.53314208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( '  ') ; } else {",
            "score": 99.53314208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( 'bar') ; } else {",
            "score": 99.53314208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno &&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.52903150475544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<=0&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.45099198190789,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= 0 && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length length ) {",
            "score": 99.42576904296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0&& sourceExcerpt.length( ) >0) {",
            "score": 99.5670753761574,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) !=0) {",
            "score": 99.47269112723214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "? sourceExcerpt.length( ) : sourceExcerpt.length( ) ) {",
            "score": 99.46985394021739,
            "correctness": "uncompilable",
            "tokenized_patch": "? source CaMeL Ex@@ cer@@ pt . length ( ) : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0- charno < sourceExcerpt.length( ) ) {",
            "score": 99.46580674913194,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 - char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno / sourceExcerpt.length( ) ) {",
            "score": 99.45504421657986,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no / source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length( )(",
            "score": 99.45054931640625,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) (",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt.length( ) ) *",
            "score": 99.56692165798611,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && true < sourceExcerpt.length( ) ) { {",
            "score": 99.47262137276786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && true < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt.trim( ) ) {",
            "score": 99.45464797247024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . trim ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==1)",
            "score": 99.45051655016448,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0: sourceExcerpt.length( ) ) {",
            "score": 99.42540893554687,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && sourceExcerpt.length( ) >0) { b.append( '\\n') ;",
            "score": 99.5667578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && sourceExcerpt.length( ) >0) { b.append( '| ') ;",
            "score": 99.5667578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && sourceExcerpt.length( ) >0) { b.append( ' ') ;",
            "score": 99.5667578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && sourceExcerpt.length( ) >0) { b.append( '  ') ;",
            "score": 99.5667578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && sourceExcerpt.length( ) >0) { b.append( 'bar') ;",
            "score": 99.5667578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) break ;",
            "score": 99.53260869565217,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) break ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < ) { {",
            "score": 99.47229614257813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) /2)",
            "score": 99.4697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) /11)",
            "score": 99.4697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) /10)",
            "score": 99.4697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) /9)",
            "score": 99.4697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) /2007)",
            "score": 99.4697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) ) { {",
            "score": 99.46486529181985,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != null ) { b.append( '\\n') ; }",
            "score": 99.45414806547619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != null ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != null ) { b.append( '| ') ; }",
            "score": 99.45414806547619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != null ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != null ) { b.append( ' ') ; }",
            "score": 99.45414806547619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != null ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != null ) { b.append( '  ') ; }",
            "score": 99.45414806547619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != null ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != null ) { b.append( 'bar') ; }",
            "score": 99.45414806547619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != null ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) && true ) {",
            "score": 99.45017700195312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) && true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length <=0) {",
            "score": 99.42446560329861,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) > charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.56641529224537,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.53167724609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == sourceExcerpt.length( ) )",
            "score": 99.46962041440217,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.toString( ).length( ) >0) {",
            "score": 99.45408993675595,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=0) {",
            "score": 99.4244384765625,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.56619966947116,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length0) {",
            "score": 99.5309826078869,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && true < sourceExcerpt.length ) {",
            "score": 99.47195095486111,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && true < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charCount < sourceExcerpt.length( ) ) {",
            "score": 99.46954900568181,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char CaMeL Count < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && source != CheckLevel.ERROR ) {",
            "score": 99.46452985491071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source != Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno <0) {",
            "score": 99.44951923076923,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && type <= sourceExcerpt.length( ) ) {",
            "score": 99.42432861328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && type <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.53097401494566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { { }",
            "score": 99.47112165178571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( < charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.4693270596591,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? '\\n': '\\n') ;",
            "score": 99.46445922851562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? '| ': '| ') ;",
            "score": 99.46445922851562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? ' ': ' ') ;",
            "score": 99.46445922851562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? '  ': '  ') ;",
            "score": 99.46445922851562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? 'bar': 'bar') ;",
            "score": 99.46445922851562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? $STRING$ : $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == length ) {",
            "score": 99.44940185546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '\\n') ; } else {",
            "score": 99.566083984375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '| ') ; } else {",
            "score": 99.566083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( ' ') ; } else {",
            "score": 99.566083984375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( '  ') ; } else {",
            "score": 99.566083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { b.append( 'bar') ; } else {",
            "score": 99.566083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0&&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.44932338169643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) != ) {",
            "score": 99.42298583984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt.length( )( ) )",
            "score": 99.564892578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { ) {",
            "score": 99.52944548233695,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) <= sourceExcerpt.length( ) )",
            "score": 99.50655995244566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < charno && charno < sourceExcerpt ) {",
            "score": 99.46854831861413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno > count ) {",
            "score": 99.46407645089286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > count ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno > sourceExcerpt.length ) ) {",
            "score": 99.45303199404762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == '\\n') {",
            "score": 99.4489990234375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $STRING$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == '| ') {",
            "score": 99.4489990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == ' ') {",
            "score": 99.4489990234375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $STRING$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == '  ') {",
            "score": 99.4489990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) == 'bar') {",
            "score": 99.4489990234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length < charno )",
            "score": 99.42233758223684,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno &&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.56463153545673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { { {",
            "score": 99.5292460123698,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length2( ) ) {",
            "score": 99.52569025213069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length11( ) ) {",
            "score": 99.52569025213069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length10( ) ) {",
            "score": 99.52569025213069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length9( ) ) {",
            "score": 99.52569025213069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length2007( ) ) {",
            "score": 99.52569025213069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < -1&& charno < sourceExcerpt.length( ) )",
            "score": 99.50617327008929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < - 1 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) || charno < sourceExcerpt.length( ) ;",
            "score": 99.47071475074405,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno > length ) {",
            "score": 99.46396019345238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == sourceExcerpt ) {",
            "score": 99.44889526367187,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && options <= sourceExcerpt.length( ) ) {",
            "score": 99.42217407226562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && options <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && charno && charno < sourceExcerpt.length( ) )",
            "score": 99.56454702524039,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ? charno ;",
            "score": 99.52906334918478,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < null && charno < sourceExcerpt.length( ) )",
            "score": 99.50553588867187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < null && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) < ) {",
            "score": 99.47052001953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) < ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno & sourceExcerpt.length( ) >1) {",
            "score": 99.4677203634511,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no & source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno || sourceExcerpt.length( ) >0) {",
            "score": 99.4219482421875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no || source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) b.append( sourceExcerpt ) ;",
            "score": 99.564462890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno == '\\n') {",
            "score": 99.52509998139881,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == $STRING$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno == '| ') {",
            "score": 99.52509998139881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno == ' ') {",
            "score": 99.52509998139881,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == $STRING$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno == '  ') {",
            "score": 99.52509998139881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno == 'bar') {",
            "score": 99.52509998139881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( )( ) ) {",
            "score": 99.47017996651786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.get( ).length( ) )",
            "score": 99.46768188476562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . get ( ) . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno + charno < sourceExcerpt.length( ) ) {",
            "score": 99.4632504111842,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no + char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && source.sourceExcerpt.length( ) ) {",
            "score": 99.44840698242187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2&& charno < sourceExcerpt.length( ) )",
            "score": 99.42114868164063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <11&& charno < sourceExcerpt.length( ) )",
            "score": 99.42114868164063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <10&& charno < sourceExcerpt.length( ) )",
            "score": 99.42114868164063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <9&& charno < sourceExcerpt.length( ) )",
            "score": 99.42114868164063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2007&& charno < sourceExcerpt.length( ) )",
            "score": 99.42114868164063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ||0<= charno )",
            "score": 99.50504150390626,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno & sourceExcerpt.length( )( ) ) {",
            "score": 99.46739130434783,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no & source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.46205357142857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0!= sourceExcerpt.length ) {",
            "score": 99.44833034939236,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 != source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || charno <0) {",
            "score": 99.5640117938702,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < getCharno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52414957682292,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < get CaMeL Char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= ) { {",
            "score": 99.46959838867187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < / sourceExcerpt.length( ) ) {",
            "score": 99.46677468039773,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < / source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) < charno ) {",
            "score": 99.44800967261905,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <0|| charno < sourceExcerpt.length ) {",
            "score": 99.42082776521382,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.56381460336539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charAt( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.52688598632812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char CaMeL At ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) &&0<= charno",
            "score": 99.52408854166667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && excerpt.length( ) )",
            "score": 99.50210173233695,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) instanceof charno ) {",
            "score": 99.46918015252976,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) instanceof char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < CheckLevel.ERROR ) {",
            "score": 99.46128934972427,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) <0) {",
            "score": 99.44793701171875,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno < charno ) {",
            "score": 99.4208251953125,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno && sourceExcerpt.length( ) ) {",
            "score": 99.56380521334134,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) < ) {",
            "score": 99.4689453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno ) {",
            "score": 99.45981069711539,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno > charno ) {",
            "score": 99.44896240234375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no > char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0&&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.4478759765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno( sourceExcerpt.length( ) - ) ) {",
            "score": 99.42034301757812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ( source CaMeL Ex@@ cer@@ pt . length ( ) - ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && excerpt.length( ) <=0) {",
            "score": 99.52309163411458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0int charno < sourceExcerpt.length( ) ) {",
            "score": 99.45979817708333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 int char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& true( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.4478695518092,
            "correctness": "uncompilable",
            "tokenized_patch": "&& true ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0] < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.50059291294643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ] < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= , charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.46604225852273,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= , char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && sourceExcerpt.length( ) >0) {",
            "score": 99.45791015625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0> charno && charno < sourceExcerpt.length ) {",
            "score": 99.44804302014802,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt.length( )",
            "score": 99.56273304332386,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ) { }",
            "score": 99.52571244673295,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { if( charno <0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.52252197265625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.1( ) ) {",
            "score": 99.46585518973214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . 1 ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) ) { {",
            "score": 99.45768657483552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >1) ;",
            "score": 99.44712524414062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ? charno ;",
            "score": 99.52562459309895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ||0<= sourceExcerpt.length( ) )",
            "score": 99.4996921705163,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) || 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ; ) {",
            "score": 99.4656398607337,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.44749049136513,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length( ) && {",
            "score": 99.44711449032738,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno <0)",
            "score": 99.4193603515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || sourceExcerpt.length( ) )",
            "score": 99.5625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0- charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52528889973958,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 - char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && '\\n'.length( ) >0)",
            "score": 99.49954356317934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && $STRING$ . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && '| '.length( ) >0)",
            "score": 99.49954356317934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && $STRING$ . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ' '.length( ) >0)",
            "score": 99.49954356317934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && $STRING$ . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && '  '.length( ) >0)",
            "score": 99.49954356317934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && $STRING$ . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && 'bar'.length( ) >0)",
            "score": 99.49954356317934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && $STRING$ . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno < sourceExcerpt.length ) {",
            "score": 99.46802920386905,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) - length ) {",
            "score": 99.46554432744566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) length( ) ) {",
            "score": 99.44692847842262,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && mode < sourceExcerpt.length( ) ) {",
            "score": 99.41865844726563,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && mode < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno && charno < charno ) {",
            "score": 99.5248514811198,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno( sourceExcerpt ) )",
            "score": 99.49933733258929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ( source CaMeL Ex@@ cer@@ pt ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source.length( ) <= source.length( ) ) {",
            "score": 99.4184814453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length ( ) <= source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < source , charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5200907389323,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source , char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || error.isWhitespace( ) )",
            "score": 99.49878991168478,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || error . is CaMeL Whitespace ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0<= charno ) {",
            "score": 99.46762566817434,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) ==2) {",
            "score": 99.44617919921875,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) ==11) {",
            "score": 99.44617919921875,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) ==10) {",
            "score": 99.44617919921875,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) ==9) {",
            "score": 99.44617919921875,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) ==2007) {",
            "score": 99.44617919921875,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.lineNumber )",
            "score": 99.444580078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . line CaMeL Number )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= ! sourceExcerpt.length( ) ) {",
            "score": 99.41824340820312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno / sourceExcerpt.length( ) ) {",
            "score": 99.56155831473214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no / source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) { } }",
            "score": 99.52457682291667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno +0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.49874745244566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no + 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >> sourceExcerpt.length( ) >0) {",
            "score": 99.46504543138587,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >> source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno >= sourceExcerpt.length( ) ) ) {",
            "score": 99.45647515190973,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.intValue( ) ) {",
            "score": 99.44452582465277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . int CaMeL Value ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno < charno ) { {",
            "score": 99.52439371744792,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( )",
            "score": 99.49803577769886,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < '\\n'|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.46758742559524,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $STRING$ || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < '| '|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.46758742559524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < ' '|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.46758742559524,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $STRING$ || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < '  '|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.46758742559524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < 'bar'|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.46758742559524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<< charno < sourceExcerpt.length( ) ) {",
            "score": 99.45644124348958,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 << char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { &&0< charno && charno < sourceExcerpt.length ) {",
            "score": 99.44578915550595,
            "correctness": "uncompilable",
            "tokenized_patch": ") { && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( ) ;",
            "score": 99.44415283203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=0) { b.append( sourceExcerpt ) ;",
            "score": 99.56117600661058,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && sourceExcerpt.length( ) )",
            "score": 99.52412923177083,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ||0<= charno ) {",
            "score": 99.46734328497024,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && Character.isWhitespace( charno ) ) {",
            "score": 99.45522054036458,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && Character . is CaMeL Whitespace ( char@@ no ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "(0&& charno < sourceExcerpt.length ) ) {",
            "score": 99.44548483455883,
            "correctness": "uncompilable",
            "tokenized_patch": "( 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && charno < charno && sourceExcerpt.length( ) )",
            "score": 99.56094125600961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) >1) {",
            "score": 99.4646329012784,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) > 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") b.append( '\\n') ; b.append( sourceExcerpt ) ;",
            "score": 99.45501708984375,
            "correctness": "uncompilable",
            "tokenized_patch": ") b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") b.append( '| ') ; b.append( sourceExcerpt ) ;",
            "score": 99.45501708984375,
            "correctness": "uncompilable",
            "tokenized_patch": ") b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") b.append( ' ') ; b.append( sourceExcerpt ) ;",
            "score": 99.45501708984375,
            "correctness": "uncompilable",
            "tokenized_patch": ") b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") b.append( '  ') ; b.append( sourceExcerpt ) ;",
            "score": 99.45501708984375,
            "correctness": "uncompilable",
            "tokenized_patch": ") b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") b.append( 'bar') ; b.append( sourceExcerpt ) ;",
            "score": 99.45501708984375,
            "correctness": "uncompilable",
            "tokenized_patch": ") b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && sourceExcerpt.length( ) ==0) {",
            "score": 99.4454833984375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 != char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( ) ;",
            "score": 99.441162109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < || charno < sourceExcerpt.length( ) ) {",
            "score": 99.415380859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt && charno < charno ) {",
            "score": 99.5237528483073,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= charno ;",
            "score": 99.49613037109376,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { ;",
            "score": 99.46707763671876,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0/( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.454638671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 / ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( )( ) ) {",
            "score": 99.4453369140625,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0> charno && charno < sourceExcerpt.length( ) )",
            "score": 99.43975219726562,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= && charno < sourceExcerpt.length( ) ) {",
            "score": 99.41500693873355,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0< charno && charno < sourceExcerpt.length( ) )",
            "score": 99.56048583984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && charno <",
            "score": 99.52317212975544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && ! sourceExcerpt.length( ) ) {",
            "score": 99.51914469401042,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && this != sourceExcerpt.length( ) ) {",
            "score": 99.46707153320312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && this != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno > ) {",
            "score": 99.45419311523438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= < charno && charno < sourceExcerpt.length ) {",
            "score": 99.44522705078126,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.56048114483173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <=1) { {",
            "score": 99.46690150669643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 1 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.45386352539063,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0<= charno && charno != sourceExcerpt.length ) {",
            "score": 99.44522255345395,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.lineNumber )",
            "score": 99.43958129882813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length < sourceExcerpt.length( ) ) {",
            "score": 99.52292887369792,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno > charno < charno )",
            "score": 99.49528702445652,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no > char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) || charno < charno ) {",
            "score": 99.46683175223214,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.trim( ).length( ) >0) {",
            "score": 99.43942100123355,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . trim ( ) . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= excerpt.length && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5184326171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != ) ;",
            "score": 99.466796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { ) {",
            "score": 99.45344848632813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.null ) {",
            "score": 99.44502981085526,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == sourceExcerpt.toString( ) ) {",
            "score": 99.43932427300348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && sourceExcerpt.length( ) >0)",
            "score": 99.55997408353366,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno < charno ) { {",
            "score": 99.52176036005434,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0+ charno < sourceExcerpt.length( ) )",
            "score": 99.49416281960227,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 + char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) != ) { {",
            "score": 99.4667236328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < source.length( ) ) {",
            "score": 99.45331169577206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno != sourceExcerpt.length( ) ) {",
            "score": 99.44478149414063,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! charno && charno > sourceExcerpt.length( ) )",
            "score": 99.43929893092105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && annotation < sourceExcerpt.length( ) ) {",
            "score": 99.41370849609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && annotation < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.55997043185764,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < charno && charno < charno )",
            "score": 99.49382990056819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= ! sourceExcerpt.length( ) ) {",
            "score": 99.46664574032738,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( )( ) ) {",
            "score": 99.46264038085937,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != null ) {",
            "score": 99.43917142427884,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.5599365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.5599365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.5599365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.5599365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.5599365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < charno ) { {",
            "score": 99.46649169921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) < null ) {",
            "score": 99.44454956054688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) <=0) {",
            "score": 99.41355895996094,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt ) { {",
            "score": 99.5209248860677,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.44449013157895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& != 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2&& charno < charno ) {",
            "score": 99.41334935238487,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <11&& charno < charno ) {",
            "score": 99.41334935238487,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <10&& charno < charno ) {",
            "score": 99.41334935238487,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <9&& charno < charno ) {",
            "score": 99.41334935238487,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <2007&& charno < charno ) {",
            "score": 99.41334935238487,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( lineNumber ) ;",
            "score": 99.559345703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( line CaMeL Number ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && ! charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51627604166667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ==0) {",
            "score": 99.46165829613095,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! excerpt.equals( LINE ) &&0<= charno ) {",
            "score": 99.45165337456598,
            "correctness": "wrong",
            "tokenized_patch": "&& ! ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( ) >1) {",
            "score": 99.44443969726562,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<0|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.4379150390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { char charno = error.getCharno( ) ; if( charno <0) {",
            "score": 99.5161641438802,
            "correctness": "uncompilable",
            "tokenized_patch": ") { char char@@ no = error . get CaMeL Char@@ no ( ) ; if ( char@@ no < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < count && charno < sourceExcerpt.length( ) )",
            "score": 99.49285278320312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < count && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) { {",
            "score": 99.46622721354167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length(( ) ) {",
            "score": 99.4615811434659,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) >2) {",
            "score": 99.44427490234375,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) >11) {",
            "score": 99.44427490234375,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) >10) {",
            "score": 99.44427490234375,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) >9) {",
            "score": 99.44427490234375,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) >2007) {",
            "score": 99.44427490234375,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<=0|| charno > sourceExcerpt.length( ) ) {",
            "score": 99.43773193359375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= 0 || char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= charno )",
            "score": 99.4131591796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno *sourceExcerpt.length( ) ) {",
            "score": 99.55869838169643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no * source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.equals( LINE ) ) {",
            "score": 99.449951171875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= false && charno < sourceExcerpt.length ) {",
            "score": 99.44382731119792,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno *sourceExcerpt.length( ) ) {",
            "score": 99.43732010690789,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < char@@ no * source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <=2&& charno < sourceExcerpt.length ) {",
            "score": 99.41292531866776,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=11&& charno < sourceExcerpt.length ) {",
            "score": 99.41292531866776,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=10&& charno < sourceExcerpt.length ) {",
            "score": 99.41292531866776,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=9&& charno < sourceExcerpt.length ) {",
            "score": 99.41292531866776,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=2007&& charno < sourceExcerpt.length ) {",
            "score": 99.41292531866776,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && sourceExcerpt.length( ) )",
            "score": 99.55849609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && this.charno < sourceExcerpt.length( ) ) {",
            "score": 99.519775390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && this . char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && excerpt.equals( LINE ) ) {",
            "score": 99.5160495923913,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { /",
            "score": 99.46578979492188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && < charno < sourceExcerpt.length( ) ) {",
            "score": 99.46087091619319,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >1)",
            "score": 99.44375770970395,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0< charno && charno < sourceExcerpt.length ) {",
            "score": 99.41268310546874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( '\\n') )",
            "score": 99.49132719494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( '| ') )",
            "score": 99.49132719494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( ' ') )",
            "score": 99.49132719494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( '  ') )",
            "score": 99.49132719494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.equals( 'bar') )",
            "score": 99.49132719494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno || sourceExcerpt.length( ) < charno ) {",
            "score": 99.46543666294643,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no || source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt != false ) {",
            "score": 99.44330797697368,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt != false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) */",
            "score": 99.41222534179687,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) * /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <1&& charno < sourceExcerpt.length( ) )",
            "score": 99.49065551757812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 1 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno &&0<= charno &&0<= charno ) {",
            "score": 99.44586859809027,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && false &&0< sourceExcerpt.length ) {",
            "score": 99.44320068359374,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false && 0 < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.trim( ) )",
            "score": 99.43619384765626,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . trim ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=0&& charno < sourceExcerpt.length( ) )",
            "score": 99.41195678710938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno || charno < sourceExcerpt.length( ) )",
            "score": 99.5579144021739,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source < sourceExcerpt.length( ) ) {",
            "score": 99.46504516601563,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<=0|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.44302368164062,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno > sourceExcerpt.lineNumber( ) ) {",
            "score": 99.43590630425348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . line CaMeL Number ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && default < sourceExcerpt.length( ) ) {",
            "score": 99.41192626953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && default < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ; charno ++ )",
            "score": 99.51877848307292,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; char@@ no ++ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= isWhitespace && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4890469637784,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= is CaMeL Whitespace && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.min( ) ) {",
            "score": 99.46490187872024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . min ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= error.sourceName.length( ) ) {",
            "score": 99.44425659179687,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= error . source CaMeL Name . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno == sourceExcerpt.length ) {",
            "score": 99.44292891652961,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.43555908203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( '\\n') ; } }",
            "score": 99.51488196331522,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( '| ') ; } }",
            "score": 99.51488196331522,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( ' ') ; } }",
            "score": 99.51488196331522,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( '  ') ; } }",
            "score": 99.51488196331522,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; b.append( 'bar') ; } }",
            "score": 99.51488196331522,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0< charno && charno < sourceExcerpt.length( ) )",
            "score": 99.48885091145833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >= true ) {",
            "score": 99.46485595703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > LINE ) {",
            "score": 99.44388427734376,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0== sourceExcerpt.length ) {",
            "score": 99.44287109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 == source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >0) { b.append( error.description ) ; }",
            "score": 99.557548828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.5142489346591,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= isWhitespace && charno < sourceExcerpt.length( ) )",
            "score": 99.48800223214286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= is CaMeL Whitespace && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.length( )",
            "score": 99.44320518092105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt1) {",
            "score": 99.43548583984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno( sourceExcerpt.length( ) ) ) {",
            "score": 99.41150512695313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= char@@ no ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } if( excerpt.equals( LINE ) ) {",
            "score": 99.51419200067934,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; } if( excerpt.equals( LINE ) ) {",
            "score": 99.51419200067934,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } if( excerpt.equals( LINE ) ) {",
            "score": 99.51419200067934,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; } if( excerpt.equals( LINE ) ) {",
            "score": 99.51419200067934,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } if( excerpt.equals( LINE ) ) {",
            "score": 99.51419200067934,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { / /",
            "score": 99.46421595982143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { / /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0> charno ) {",
            "score": 99.44272189670139,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 > char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0<= charno && charno <= sourceExcerpt.length ) {",
            "score": 99.4421322471217,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno >= sourceExcerpt.length( ) )",
            "score": 99.43525390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno <2) {",
            "score": 99.41104125976562,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno <11) {",
            "score": 99.41104125976562,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno <10) {",
            "score": 99.41104125976562,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno <9) {",
            "score": 99.41104125976562,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno <2007) {",
            "score": 99.41104125976562,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0( charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.55741373697917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.contains( LINE ) ) {",
            "score": 99.51283957741477,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . contains ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) | charno ) {",
            "score": 99.46418108258929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) | char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source.length == sourceExcerpt.length( ) ) {",
            "score": 99.4587069424716,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < getCharno( ) ) {",
            "score": 99.44272189670139,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < get CaMeL Char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.43514211554276,
            "correctness": "uncompilable",
            "tokenized_patch": "|| char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length length( ) ) {",
            "score": 99.51512562144886,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } if( sourceExcerpt != null ) {",
            "score": 99.51261763139205,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; } if( sourceExcerpt != null ) {",
            "score": 99.51261763139205,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } if( sourceExcerpt != null ) {",
            "score": 99.51261763139205,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; } if( sourceExcerpt != null ) {",
            "score": 99.51261763139205,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } if( sourceExcerpt != null ) {",
            "score": 99.51261763139205,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& equals( charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.48611886160714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& equals ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) > ) {",
            "score": 99.464111328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt ) ;",
            "score": 99.44164321001838,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) &&0<= charno ) {",
            "score": 99.44155883789062,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt.length ) )",
            "score": 99.43494873046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.55692545572917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < charno ; charno ++ ) {",
            "score": 99.51502574573864,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& b.equals( '\\n') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51242994225544,
            "correctness": "wrong",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& b.equals( '| ') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51242994225544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& b.equals( ' ') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51242994225544,
            "correctness": "wrong",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& b.equals( '  ') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51242994225544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& b.equals( 'bar') && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51242994225544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=1&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.46409912109375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 1 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.int( ) ) {",
            "score": 99.45844959077381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . int ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==2) ;",
            "score": 99.44155883789062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==11) ;",
            "score": 99.44155883789062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==10) ;",
            "score": 99.44155883789062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==9) ;",
            "score": 99.44155883789062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==2007) ;",
            "score": 99.44155883789062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= LINE ) {",
            "score": 99.44140014648437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) b.append( error.lineNumber ) ;",
            "score": 99.55673452524039,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( error . line CaMeL Number ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && ! sourceExcerpt.equals( LINE ) ) {",
            "score": 99.51447405133929,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) ) ;",
            "score": 99.46393143503289,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt ==0) {",
            "score": 99.4410629272461,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( excerpt.equals( '\\n') &&0<= charno ) ) {",
            "score": 99.44089869449013,
            "correctness": "wrong",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( excerpt.equals( '| ') &&0<= charno ) ) {",
            "score": 99.44089869449013,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( excerpt.equals( ' ') &&0<= charno ) ) {",
            "score": 99.44089869449013,
            "correctness": "wrong",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( excerpt.equals( '  ') &&0<= charno ) ) {",
            "score": 99.44089869449013,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( excerpt.equals( 'bar') &&0<= charno ) ) {",
            "score": 99.44089869449013,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . equals ( $STRING$ ) && 0 <= char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.trim( ).length( ) >0) {",
            "score": 99.43416748046874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . trim ( ) . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < source ) {",
            "score": 99.41054815995066,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && excerpt.length( ) ) {",
            "score": 99.51402216372283,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.45761253720238,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( error.description ) ;",
            "score": 99.44060315583882,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( error.description ) ;",
            "score": 99.44060315583882,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( error.description ) ;",
            "score": 99.44060315583882,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( error.description ) ;",
            "score": 99.44060315583882,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( error.description ) ;",
            "score": 99.44060315583882,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > )",
            "score": 99.41022406684027,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < '\\n'&& charno < sourceExcerpt.length( ) )",
            "score": 99.48421020507813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < '| '&& charno < sourceExcerpt.length( ) )",
            "score": 99.48421020507813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < ' '&& charno < sourceExcerpt.length( ) )",
            "score": 99.48421020507813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < '  '&& charno < sourceExcerpt.length( ) )",
            "score": 99.48421020507813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < 'bar'&& charno < sourceExcerpt.length( ) )",
            "score": 99.48421020507813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) { / *",
            "score": 99.46387881324405,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { / *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt length( ) ) {",
            "score": 99.45750732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& sourceExcerpt.length( ) ==0) {",
            "score": 99.44089869449013,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > CheckLevel.ERROR ) {",
            "score": 99.43969008501838,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.408447265625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <11&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.408447265625,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <10&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.408447265625,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <9&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.408447265625,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <2007&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.408447265625,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.equals( LINE ) &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.5563495342548,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt ) {",
            "score": 99.46383231026786,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( ) ==1) {",
            "score": 99.440673828125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) - charno ) {",
            "score": 99.43269428453948,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && equals < sourceExcerpt.length( ) ) {",
            "score": 99.408154296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && equals < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( charno &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.55613199869792,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) { ) {",
            "score": 99.46375189887152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( true ) ) {",
            "score": 99.45747514204545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( true ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= false &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.44032046669408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= false && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) )",
            "score": 99.43802218967014,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno == sourceExcerpt.length( ) )",
            "score": 99.43212890625,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && false ) {",
            "score": 99.51111370584239,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno &&0<= charno && charno < charno )",
            "score": 99.48296797902961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { &&0<= charno && charno < sourceExcerpt.length )",
            "score": 99.43994140625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != sourceExcerpt.toString( ) ) {",
            "score": 99.43206787109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no != source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) )",
            "score": 99.40656280517578,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno && sourceExcerpt.length( ) >0) ) {",
            "score": 99.55588697350544,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) & charno ) {",
            "score": 99.46320452008929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) & char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) false ) {",
            "score": 99.45714222301136,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && excerpt.length( ) >0) {",
            "score": 99.43782552083333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ; else {",
            "score": 99.43195936414931,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ; else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) !=0) {",
            "score": 99.40567220052084,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <0) { b.append( sourceExcerpt ) ; b.append( '\\n') ;",
            "score": 99.55557016225961,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( sourceExcerpt ) ; b.append( '| ') ;",
            "score": 99.55557016225961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( sourceExcerpt ) ; b.append( ' ') ;",
            "score": 99.55557016225961,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( sourceExcerpt ) ; b.append( '  ') ;",
            "score": 99.55557016225961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( sourceExcerpt ) ; b.append( 'bar') ;",
            "score": 99.55557016225961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && {",
            "score": 99.51060267857143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno && charno < charno &&",
            "score": 99.50939410665761,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.46307663690476,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.max( ) ) {",
            "score": 99.45697312127976,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . max ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno &&0== sourceExcerpt.length( ) ) {",
            "score": 99.439599609375,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && 0 == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { b.append( '\\n') ; } b.append( error.description ) ;",
            "score": 99.43762817382813,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } b.append( error.description ) ;",
            "score": 99.43762817382813,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } b.append( error.description ) ;",
            "score": 99.43762817382813,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } b.append( error.description ) ;",
            "score": 99.43762817382813,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } b.append( error.description ) ;",
            "score": 99.43762817382813,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno && $STRING$",
            "score": 99.5085979959239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && $STRING$",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno && $STRING$",
            "score": 99.5085979959239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && $STRING$",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno && $STRING$",
            "score": 99.5085979959239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && $STRING$",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno && $STRING$",
            "score": 99.5085979959239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && $STRING$",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&0<= charno && $STRING$",
            "score": 99.5085979959239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no && $STRING$",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < sourceExcerpt )",
            "score": 99.48112182617187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < source CaMeL Ex@@ cer@@ pt )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0.< sourceExcerpt.length( ) ) {",
            "score": 99.46282087053571,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 . < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&01<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4566650390625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 1 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length( ) ||",
            "score": 99.43944702148437,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ||",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& sourceExcerpt.length < charno ) {",
            "score": 99.40530556126645,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && source CaMeL Ex@@ cer@@ pt . length < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < has && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51033528645833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < has && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.equals( '\\n') ) {",
            "score": 99.50858738111413,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.equals( '| ') ) {",
            "score": 99.50858738111413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.equals( ' ') ) {",
            "score": 99.50858738111413,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.equals( '  ') ) {",
            "score": 99.50858738111413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && b.equals( 'bar') ) {",
            "score": 99.50858738111413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && b . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.46250697544643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.45647321428571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt != null ) {",
            "score": 99.43892669677734,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < this.error.length( ) ) {",
            "score": 99.43683182565789,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno + sourceExcerpt.length( ) ) {",
            "score": 99.43126156455592,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < char@@ no + source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && true )",
            "score": 99.40515854779412,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && true )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= > charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51026500355114,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno >1) {",
            "score": 99.43623182508681,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )(2) ) {",
            "score": 99.43121016652961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( $NUMBER$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )(11) ) {",
            "score": 99.43121016652961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( $NUMBER$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )(10) ) {",
            "score": 99.43121016652961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( $NUMBER$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )(9) ) {",
            "score": 99.43121016652961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( $NUMBER$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )(2007) ) {",
            "score": 99.43121016652961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( $NUMBER$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >2)",
            "score": 99.40494577508224,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >11)",
            "score": 99.40494577508224,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >10)",
            "score": 99.40494577508224,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >9)",
            "score": 99.40494577508224,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) >2007)",
            "score": 99.40494577508224,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( '\\n') ) {",
            "score": 99.50702263327206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( '| ') ) {",
            "score": 99.50702263327206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( ' ') ) {",
            "score": 99.50702263327206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( '  ') ) {",
            "score": 99.50702263327206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( 'bar') ) {",
            "score": 99.50702263327206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( )( ) <= sourceExcerpt.length( ) )",
            "score": 99.47941450639205,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) ( ) <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '\\n') ) { b.append( '\\n') ;",
            "score": 99.43610582853618,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '| ') ) { b.append( '| ') ;",
            "score": 99.43610582853618,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( ' ') ) { b.append( ' ') ;",
            "score": 99.43610582853618,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '  ') ) { b.append( '  ') ;",
            "score": 99.43610582853618,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( 'bar') ) { b.append( 'bar') ;",
            "score": 99.43610582853618,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt ) {",
            "score": 99.43117388556985,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno != sourceExcerpt ) {",
            "score": 99.40454779730902,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.equals( '\\n') )",
            "score": 99.47900390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.equals( '| ') )",
            "score": 99.47900390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.equals( ' ') )",
            "score": 99.47900390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.equals( '  ') )",
            "score": 99.47900390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.equals( 'bar') )",
            "score": 99.47900390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0!= sourceExcerpt.length( ) ) {",
            "score": 99.43827739514802,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= 0 && 0 != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < '\\n'.length( ) ) {",
            "score": 99.43531709558823,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < '| '.length( ) ) {",
            "score": 99.43531709558823,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < ' '.length( ) ) {",
            "score": 99.43531709558823,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < '  '.length( ) ) {",
            "score": 99.43531709558823,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < 'bar'.length( ) ) {",
            "score": 99.43531709558823,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $STRING$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt ) {",
            "score": 99.43091538373162,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { System.err.println( '\\n') ;",
            "score": 99.5534765625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { System . err . println ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { System.err.println( '| ') ;",
            "score": 99.5534765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { System . err . println ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { System.err.println( ' ') ;",
            "score": 99.5534765625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { System . err . println ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { System.err.println( '  ') ;",
            "score": 99.5534765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { System . err . println ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { System.err.println( 'bar') ;",
            "score": 99.5534765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { System . err . println ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0& charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.455615234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 & char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0>= charno && charno < sourceExcerpt.length ) {",
            "score": 99.43814890008224,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < this.sourceExcerpt.length( ) ) {",
            "score": 99.43509928385417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < this . source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { int charno = error.getCharno( ) ;",
            "score": 99.55321326622597,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno &&0) {",
            "score": 99.5095745584239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < length && charno < sourceExcerpt.length( ) )",
            "score": 99.47893676757812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.46134643554687,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.charCount( ) )",
            "score": 99.45549982244319,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . char CaMeL Count ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.43804931640625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 != 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < true ) {",
            "score": 99.40352590460526,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno &&0< charno && sourceExcerpt.length( ) ) {",
            "score": 99.55296912560097,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0.< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.50560461956522,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 . < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < error.length( ) )",
            "score": 99.47815522693452,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < error . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) ||",
            "score": 99.43803967927632,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ||",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length( )",
            "score": 99.43397281044408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; }",
            "score": 99.4301424893466,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; }",
            "score": 99.4301424893466,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; }",
            "score": 99.4301424893466,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; }",
            "score": 99.4301424893466,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; }",
            "score": 99.4301424893466,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno < sourceExcerpt ) {",
            "score": 99.40323893229167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.55270385742188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( sourceExcerpt ) ;",
            "score": 99.50850246263587,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) , charno ) ;",
            "score": 99.46107700892857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) , char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.43795776367188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0> charno &&0<= charno ) {",
            "score": 99.43258327907986,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 > char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&( charno < charno && sourceExcerpt.length( ) ) ) {",
            "score": 99.55260291466347,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) !=0) {",
            "score": 99.5048191236413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && sourceExcerpt != null ) {",
            "score": 99.4547119140625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=0&& charno < sourceExcerpt.length( ) ) ;",
            "score": 99.43789672851562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<0&& charno > sourceExcerpt.length( ) ) {",
            "score": 99.42919921875,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < 0 && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <0) {",
            "score": 99.40214029947917,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length && excerpt.equals( LINE ) ) {",
            "score": 99.50460682744566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno <0)",
            "score": 99.47723067434211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( charno < charno ) ) {",
            "score": 99.45999145507812,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.4545665922619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ==0) {",
            "score": 99.43767346833882,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= end && charno < sourceExcerpt.length( ) ) {",
            "score": 99.43229370117187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= end && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ; else {",
            "score": 99.42903442382813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ; else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno ==0) {",
            "score": 99.40195826480263,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.55240885416667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno && ) {",
            "score": 99.50770152698864,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) charno < sourceExcerpt.length( ) ;",
            "score": 99.45997314453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt ) ;",
            "score": 99.43755425347223,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ;",
            "score": 99.43227251838235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( ) ;",
            "score": 99.42896118164063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt == sourceExcerpt.length( ) ) {",
            "score": 99.4018618935033,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ? ) {",
            "score": 99.50745159646739,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < length( ) ) {",
            "score": 99.43218994140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno <= sourceExcerpt.length ) {",
            "score": 99.4013607627467,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { b.append( sourceExcerpt ) ;",
            "score": 99.55015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ] )",
            "score": 99.47610909598214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ] )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0< charno ) {",
            "score": 99.45933131167763,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "|| !0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.45377974076705,
            "correctness": "uncompilable",
            "tokenized_patch": "|| ! 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno &&0>= sourceExcerpt.length( ) ) {",
            "score": 99.43712768554687,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && 0 >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0|| charno < sourceExcerpt.length( ) ) {",
            "score": 99.43181694878473,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < false && charno < sourceExcerpt.length ) {",
            "score": 99.40010793585526,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&&0< charno && charno < sourceExcerpt.length( ) )",
            "score": 99.550048828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.50687839673913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '\\n') && charno < sourceExcerpt.length ) {",
            "score": 99.50332243546195,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '| ') && charno < sourceExcerpt.length ) {",
            "score": 99.50332243546195,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( ' ') && charno < sourceExcerpt.length ) {",
            "score": 99.50332243546195,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '  ') && charno < sourceExcerpt.length ) {",
            "score": 99.50332243546195,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( 'bar') && charno < sourceExcerpt.length ) {",
            "score": 99.50332243546195,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( charno < sourceExcerpt.length( ) ) ;",
            "score": 99.45363547585227,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == sourceExcerpt ) ;",
            "score": 99.437060546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno <2) {",
            "score": 99.43159315321181,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno <11) {",
            "score": 99.43159315321181,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno <10) {",
            "score": 99.43159315321181,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno <9) {",
            "score": 99.43159315321181,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno <2007) {",
            "score": 99.43159315321181,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno <= sourceExcerpt.length ) {",
            "score": 99.42758018092105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.5494384765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < < sourceExcerpt.length( ) ) {",
            "score": 99.50628107244319,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& >=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.43666478207237,
            "correctness": "uncompilable",
            "tokenized_patch": "&& >= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && sourceExcerpt.length( ) >0) {",
            "score": 99.42720754523026,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { int charno = charno ;",
            "score": 99.54935886548913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { int char@@ no = char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >=0) {",
            "score": 99.4363544170673,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0> charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.43020629882812,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt != sourceExcerpt.length( ) ) {",
            "score": 99.4263916015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < && charno < charno ) {",
            "score": 99.39906141493056,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < error.length( ) )",
            "score": 99.4718017578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < error . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < sourceExcerpt.length ) {",
            "score": 99.45821380615234,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.endsWith( '\\n') ) {",
            "score": 99.45277622767857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . ends CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.endsWith( '| ') ) {",
            "score": 99.45277622767857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . ends CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.endsWith( ' ') ) {",
            "score": 99.45277622767857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . ends CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.endsWith( '  ') ) {",
            "score": 99.45277622767857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . ends CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.endsWith( 'bar') ) {",
            "score": 99.45277622767857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . ends CaMeL With ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& != charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.43626098632812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno &&0<= charno &&0<= charno ) ) {",
            "score": 99.430029296875,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return null ;",
            "score": 99.39889865451389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return null ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length ) { {",
            "score": 99.45814208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( ) !=0) {",
            "score": 99.43580322265625,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( charno ) ) {",
            "score": 99.42965698242188,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > sourceExcerpt.toString( ) ) {",
            "score": 99.42511664496527,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . to CaMeL String ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno <0) {",
            "score": 99.39838115985577,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno < charno ) {",
            "score": 99.50535753038194,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.50089164402173,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } else {",
            "score": 99.4248046875,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; } else {",
            "score": 99.4248046875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else {",
            "score": 99.4248046875,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; } else {",
            "score": 99.4248046875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else {",
            "score": 99.4248046875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || true ) {",
            "score": 99.39784071180556,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || true ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { ; }",
            "score": 99.50504203464673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length + ) {",
            "score": 99.45237426757812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length + ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < source != null ) {",
            "score": 99.42815551757812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < source != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && && charno < sourceExcerpt.length( ) ) { {",
            "score": 99.50476604959239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < type && charno < sourceExcerpt.length( ) ) {",
            "score": 99.49950009300595,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < type && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.43549262152777,
            "correctness": "plausible",
            "tokenized_patch": "|| ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& error.getCharno( ).equals( LINE ) ) {",
            "score": 99.4278205422794,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno >0) {",
            "score": 99.39617598684211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) sourceExcerpt.length( ) ;",
            "score": 99.54845703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( LINE ) &&0<= charno ) {",
            "score": 99.49906782670455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( )( ) ) {",
            "score": 99.42715793185764,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && excerpt.equals( LINE ) ) {",
            "score": 99.49823552911931,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) == ) {",
            "score": 99.4571044921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) == ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && length < sourceExcerpt.length ) {",
            "score": 99.43500434027777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && length < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < count ) {",
            "score": 99.42702229817708,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < count ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.type ) {",
            "score": 99.4224853515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . type ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) b.append( sourceExcerpt ) ;",
            "score": 99.548193359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { {",
            "score": 99.46961805555556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ; ) {",
            "score": 99.45174153645833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( error.description ) ; }",
            "score": 99.4269775390625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( error.description ) ; }",
            "score": 99.4269775390625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( error.description ) ; }",
            "score": 99.4269775390625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( error.description ) ; }",
            "score": 99.4269775390625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( error.description ) ; }",
            "score": 99.4269775390625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . description ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '\\n') ; } } else {",
            "score": 99.42179790296052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '| ') ; } } else {",
            "score": 99.42179790296052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( ' ') ; } } else {",
            "score": 99.42179790296052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '  ') ; } } else {",
            "score": 99.42179790296052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( 'bar') ; } } else {",
            "score": 99.42179790296052,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length <1) {",
            "score": 99.39542429070724,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length < 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno *0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.548095703125,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no * 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) || true ) {",
            "score": 99.4349365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) || true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& Character.isWhitespace( excerpt.length( ) ) ) {",
            "score": 99.42696804470486,
            "correctness": "uncompilable",
            "tokenized_patch": "&& Character . is CaMeL Whitespace ( ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno < sourceExcerpt ) ) {",
            "score": 99.42118755139802,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& '\\n'<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.46581420898437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& $STRING$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& '| '<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.46581420898437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& $STRING$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ' '<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.46581420898437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& $STRING$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& '  '<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.46581420898437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& $STRING$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& 'bar'<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.46581420898437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& $STRING$ <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0-- charno < sourceExcerpt.length( ) ) {",
            "score": 99.42580837673611,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 -- char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( ) >0)",
            "score": 99.42098838404605,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ) < sourceExcerpt.length( ) )",
            "score": 99.46533203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { {",
            "score": 99.45518493652344,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length - length ) {",
            "score": 99.4509509858631,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.43431181066177,
            "correctness": "wrong",
            "tokenized_patch": "&& false && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceName.length( ) ) {",
            "score": 99.42572985197368,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Name . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) <=1) {",
            "score": 99.43430786132812,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& b.charno < sourceExcerpt.length( ) ) {",
            "score": 99.42494032118056,
            "correctness": "uncompilable",
            "tokenized_patch": "&& b . char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno == sourceExcerpt.length ) {",
            "score": 99.42041015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < true && charno < sourceExcerpt.length ) {",
            "score": 99.39365748355263,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < true && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || excerpt.length( ) )",
            "score": 99.54594089673913,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && excerpt.length( ) >0) {",
            "score": 99.49736993963069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno == sourceExcerpt.length( ) )",
            "score": 99.46442522321429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > -1&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.4507168856534,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > - 1 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) && ! charno ) {",
            "score": 99.43392141241776,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.2) {",
            "score": 99.42006964432566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.11) {",
            "score": 99.42006964432566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.10) {",
            "score": 99.42006964432566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.9) {",
            "score": 99.42006964432566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.2007) {",
            "score": 99.42006964432566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno !=0) {",
            "score": 99.39280941611842,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no != 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) )",
            "score": 99.54579467773438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < excerpt.length( ) ) {",
            "score": 99.49169049944196,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <<0) {",
            "score": 99.43390502929688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) << 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { continue ; }",
            "score": 99.41999254728618,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { continue ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <=1) {",
            "score": 99.39208984375,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( '\\n') ; b.append( '\\n') ;",
            "score": 99.54554332386364,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( '| ') ; b.append( '| ') ;",
            "score": 99.54554332386364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( ' ') ; b.append( ' ') ;",
            "score": 99.54554332386364,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( '  ') ; b.append( '  ') ;",
            "score": 99.54554332386364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( 'bar') ; b.append( 'bar') ;",
            "score": 99.54554332386364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < sourceExcerpt ;",
            "score": 99.49632679332386,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length -0) {",
            "score": 99.4501720610119,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= sourceExcerpt.length ) {",
            "score": 99.43368869357639,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno &&0<= charno &&0<= charno ) {",
            "score": 99.42319064670139,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt ) {",
            "score": 99.41957720588235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && sourceExcerpt.length( ) >0) {",
            "score": 99.54519992404514,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length( ) {",
            "score": 99.49534970238095,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && excerpt.equals( LINE ) )",
            "score": 99.46266479492188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && short < sourceExcerpt.length( ) ) {",
            "score": 99.453515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && short < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& &&0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.45009068080357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt != ) {",
            "score": 99.43346489800348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt != ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && excerpt.equals( '\\n') ) {",
            "score": 99.42295209099265,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && excerpt.equals( '| ') ) {",
            "score": 99.42295209099265,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && excerpt.equals( ' ') ) {",
            "score": 99.42295209099265,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && excerpt.equals( '  ') ) {",
            "score": 99.42295209099265,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && excerpt.equals( 'bar') ) {",
            "score": 99.42295209099265,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < true ) {",
            "score": 99.39161095252403,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < error.length( ) )",
            "score": 99.46253159466912,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < error . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { ) ;",
            "score": 99.45335388183594,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { && charno < sourceExcerpt.length ) {",
            "score": 99.43231964111328,
            "correctness": "uncompilable",
            "tokenized_patch": ") { && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno || charno < sourceExcerpt.length( ) ) {",
            "score": 99.42253032483552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ==0) {",
            "score": 99.41819932725694,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length ) { {",
            "score": 99.45249633789062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.44834681919643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < null && charno < sourceExcerpt.length ) {",
            "score": 99.39036800986842,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < null && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) ==0)",
            "score": 99.54484419389205,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && && charno < sourceExcerpt.length ) {",
            "score": 99.49394298735119,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || charno < charno )",
            "score": 99.46103050595238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < - sourceExcerpt.length ) {",
            "score": 99.4524169921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < - source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.44804077148437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length ) ) {",
            "score": 99.4307861328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= error.length( ) ) {",
            "score": 99.42185974121094,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >2) {",
            "score": 99.41730205829327,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno >11) {",
            "score": 99.41730205829327,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >10) {",
            "score": 99.41730205829327,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >9) {",
            "score": 99.41730205829327,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >2007) {",
            "score": 99.41730205829327,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno &&0<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.48920232599431,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= ) /",
            "score": 99.45218056126645,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= ) /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt( ) ) {",
            "score": 99.44764468544408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >> < sourceExcerpt.length( ) ) {",
            "score": 99.42165958180146,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no >> < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append ) ; } else { b.append( '\\n') ; }",
            "score": 99.41620836759868,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append ) ; } else { b.append( '| ') ; }",
            "score": 99.41620836759868,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append ) ; } else { b.append( ' ') ; }",
            "score": 99.41620836759868,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append ) ; } else { b.append( '  ') ; }",
            "score": 99.41620836759868,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append ) ; } else { b.append( 'bar') ; }",
            "score": 99.41620836759868,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ) ; } else { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length <2) {",
            "score": 99.38991185238487,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length <11) {",
            "score": 99.38991185238487,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length <10) {",
            "score": 99.38991185238487,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length <9) {",
            "score": 99.38991185238487,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length <2007) {",
            "score": 99.38991185238487,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length < $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && ! charno < charno ) {",
            "score": 99.49373002485795,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && ! char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { ;",
            "score": 99.46031996783088,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "|| charno <0&& charno < sourceExcerpt.length ) {",
            "score": 99.429931640625,
            "correctness": "uncompilable",
            "tokenized_patch": "|| char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno + sourceExcerpt.length( ) >0) {",
            "score": 99.42144775390625,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no + source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length < charno && charno <0) {",
            "score": 99.38959703947368,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length < char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( ) ) { b.append( '\\n') ;",
            "score": 99.54408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( ) ) { b.append( '| ') ;",
            "score": 99.54408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( ) ) { b.append( ' ') ;",
            "score": 99.54408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( ) ) { b.append( '  ') ;",
            "score": 99.54408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( ) ) { b.append( 'bar') ;",
            "score": 99.54408203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.48861839657738,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt != null && charno < sourceExcerpt.length( ) )",
            "score": 99.46025158110119,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt != null && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.2( ) ) {",
            "score": 99.44670758928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.11( ) ) {",
            "score": 99.44670758928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.10( ) ) {",
            "score": 99.44670758928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.9( ) ) {",
            "score": 99.44670758928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.2007( ) ) {",
            "score": 99.44670758928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && ! sourceExcerpt.length( ) ) {",
            "score": 99.42966822574013,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno < sourceExcerpt.length( )",
            "score": 99.42123894942434,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { { b.append( '\\n') ; }",
            "score": 99.4143425436581,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno ) { { b.append( '| ') ; }",
            "score": 99.4143425436581,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { { b.append( ' ') ; }",
            "score": 99.4143425436581,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno ) { { b.append( '  ') ; }",
            "score": 99.4143425436581,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { { b.append( 'bar') ; }",
            "score": 99.4143425436581,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno &&0<= sourceExcerpt.length( ) )",
            "score": 99.54404518821023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && && charno < charno && charno < charno ) {",
            "score": 99.4927090731534,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >1&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.48847888764881,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > 1 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0+ charno && charno < sourceExcerpt.length( ) )",
            "score": 99.46007690429687,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 + char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! charno ) {",
            "score": 99.45045979817708,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length +1) {",
            "score": 99.44648670014881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length + 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0>= sourceExcerpt.length( ) ) {",
            "score": 99.42874948601974,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= 0 && 0 >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& CheckLevel.ERROR < sourceExcerpt.length( ) ) {",
            "score": 99.42106548108552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& Check CaMeL Level . ERROR < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < b.length( ) ) {",
            "score": 99.38949764476104,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < b . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno &&0<= sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.543935546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.543935546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.543935546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.543935546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0<= sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.543935546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.equals( LINE ) ) {",
            "score": 99.4884366122159,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && level < sourceExcerpt.length( ) ) {",
            "score": 99.44955444335938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && level < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0< sourceExcerpt.length ) {",
            "score": 99.42839219835069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno != sourceExcerpt.length ) {",
            "score": 99.41280324835526,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0> sourceExcerpt.length ) {",
            "score": 99.38912624782986,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 > source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& equals( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.49228737571023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& equals ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.equals( LINE ) )",
            "score": 99.45936414930556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.MIN( ) ) {",
            "score": 99.44535900297619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . MIN ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && ! sourceExcerpt.length( ) ) {",
            "score": 99.4283511513158,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0++ charno < sourceExcerpt.length( ) ) {",
            "score": 99.41925048828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ++ char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == sourceExcerpt.charValue( ) ) {",
            "score": 99.41227891710069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == source CaMeL Ex@@ cer@@ pt . char CaMeL Value ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) break ;",
            "score": 99.45835966222427,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) break ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && short != sourceExcerpt.length( ) ) {",
            "score": 99.44867553710938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && short != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(0|| charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.42805561266448,
            "correctness": "uncompilable",
            "tokenized_patch": "( 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno ++ < sourceExcerpt.length( ) ) {",
            "score": 99.41791130514706,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no ++ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "|| charno > sourceExcerpt.length( ) ) {",
            "score": 99.41133880615234,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.getCharno( ) ) {",
            "score": 99.48646304481908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . get CaMeL Char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0|| charno < sourceExcerpt.length( ) )",
            "score": 99.45791625976562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && success < sourceExcerpt.length( ) ) {",
            "score": 99.44862060546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && success < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ||0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.44487072172619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& || 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length ) ;",
            "score": 99.42796566611842,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno < source.length( ) ) {",
            "score": 99.41781455592105,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) ==0) {",
            "score": 99.41133117675781,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <=2) {",
            "score": 99.38824869791667,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <=11) {",
            "score": 99.38824869791667,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <=10) {",
            "score": 99.38824869791667,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <=9) {",
            "score": 99.38824869791667,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <=2007) {",
            "score": 99.38824869791667,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno ||0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.54296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no || 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE2< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4864169034091,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE $NUMBER$ < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE11< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4864169034091,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE $NUMBER$ < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE10< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4864169034091,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE $NUMBER$ < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE9< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4864169034091,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE $NUMBER$ < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE2007< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4864169034091,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE $NUMBER$ < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ) { {",
            "score": 99.44796413845486,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length - ; ) {",
            "score": 99.44353376116071,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length - ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ).length( ) >0) {",
            "score": 99.41742621527777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno == sourceExcerpt.length ) {",
            "score": 99.4108822471217,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno <=0) {",
            "score": 99.38765033922698,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && charno <0) {",
            "score": 99.48595081676136,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { ) ; }",
            "score": 99.44698293585526,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.42672568873355,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno ) { {",
            "score": 99.41691080729167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= sourceExcerpt.length )",
            "score": 99.41078694661458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno == sourceExcerpt.length( ) ) {",
            "score": 99.3873291015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ) <= sourceExcerpt.length( ) )",
            "score": 99.45741489955357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && abs < sourceExcerpt.length( ) ) {",
            "score": 99.44697265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && abs < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source.length( ) > source.length( ) ) {",
            "score": 99.44315185546876,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length ( ) > source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < length ) {",
            "score": 99.41676161024306,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt.type ) {",
            "score": 99.40835731907895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . type ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length && charno <0) {",
            "score": 99.38663058810764,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length && char@@ no < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && name < sourceExcerpt.length( ) ) {",
            "score": 99.44683837890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && name < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0( charno < sourceExcerpt.length ) ) {",
            "score": 99.4252068014706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { '\\n') ;",
            "score": 99.41628546463816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { '| ') ;",
            "score": 99.41628546463816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { ' ') ;",
            "score": 99.41628546463816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { '  ') ;",
            "score": 99.41628546463816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { 'bar') ;",
            "score": 99.41628546463816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > charno ) {",
            "score": 99.40788922991071,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.48366477272727,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt )",
            "score": 99.453857421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) ) ;",
            "score": 99.44669189453126,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length +2) {",
            "score": 99.44305710565476,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length + $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length +11) {",
            "score": 99.44305710565476,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length + $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length +10) {",
            "score": 99.44305710565476,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length + $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length +9) {",
            "score": 99.44305710565476,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length + $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length +2007) {",
            "score": 99.44305710565476,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length + $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { &&0<= sourceExcerpt.length( ) ; }",
            "score": 99.42341164981617,
            "correctness": "uncompilable",
            "tokenized_patch": ") { && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < false ) {",
            "score": 99.3861835186298,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.54173743206522,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.54173743206522,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.54173743206522,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.54173743206522,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.54173743206522,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno ==0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.4826892671131,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no == 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < source ) {",
            "score": 99.42307692307692,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno == sourceExcerpt ) {",
            "score": 99.4066162109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < false && charno < sourceExcerpt.length( ) )",
            "score": 99.45300903320313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < sourceExcerpt.length( ) ) { {",
            "score": 99.4462954872533,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno && charno < charno ) {",
            "score": 99.41455078125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno ) { b.append( '\\n') ; } }",
            "score": 99.40639361213235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '| ') ; } }",
            "score": 99.40639361213235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( ' ') ; } }",
            "score": 99.40639361213235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '  ') ; } }",
            "score": 99.40639361213235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( 'bar') ; } }",
            "score": 99.40639361213235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int charno && charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.541201171875,
            "correctness": "uncompilable",
            "tokenized_patch": "int char@@ no && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno( ) ) {",
            "score": 99.48713822798295,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno )",
            "score": 99.4524917602539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) /",
            "score": 99.42121967516448,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.lineNumber == sourceExcerpt.length( ) ) {",
            "score": 99.41425524259868,
            "correctness": "wrong",
            "tokenized_patch": "&& error . line CaMeL Number == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > {",
            "score": 99.40635850694444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno <1) {",
            "score": 99.38565224095395,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <( charno < sourceExcerpt.length( ) ) )",
            "score": 99.45223999023438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( '\\n') ;",
            "score": 99.41385904947917,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno ) { b.append( '| ') ;",
            "score": 99.41385904947917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( ' ') ;",
            "score": 99.41385904947917,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno ) { b.append( '  ') ;",
            "score": 99.41385904947917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( 'bar') ;",
            "score": 99.41385904947917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno < sourceExcerpt.length( ) -1) {",
            "score": 99.40592876233552,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < charno ) {",
            "score": 99.48662651909723,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ) continue ;",
            "score": 99.48185591264205,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < charno )",
            "score": 99.45215561810662,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& < charno && charno < sourceExcerpt.length ) {",
            "score": 99.42083062065973,
            "correctness": "uncompilable",
            "tokenized_patch": "&& < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= error.getCharno( ) ) {",
            "score": 99.41350354646382,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= error . get CaMeL Char@@ no ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "|| charno < sourceExcerpt.length( ) -1) {",
            "score": 99.40585666232639,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "int charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.53987844366776,
            "correctness": "uncompilable",
            "tokenized_patch": "int char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ?0: charno ;",
            "score": 99.45205688476562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? 0 : char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0*charno < sourceExcerpt.length( ) ) {",
            "score": 99.44177924262152,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 * char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ) throws",
            "score": 99.42075066817434,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) throws",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= excerpt.length( ) ) {",
            "score": 99.4132080078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < charno ) {",
            "score": 99.40535191127232,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && charno ;",
            "score": 99.48628373579545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > false ) {",
            "score": 99.4432373046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && null < sourceExcerpt.length ) {",
            "score": 99.42072211371527,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && null < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< excerpt.length( ) ) {",
            "score": 99.41302490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt( sourceExcerpt ) ) {",
            "score": 99.40508069490132,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno < source.length( ) ) {",
            "score": 99.38242594401042,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno < charno && sourceExcerpt.length( ) ) {",
            "score": 99.5398479959239,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } else",
            "score": 99.45113118489583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.double( ) ) {",
            "score": 99.44084821428571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . double ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ",0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.42011176215277,
            "correctness": "uncompilable",
            "tokenized_patch": ", 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != sourceExcerpt.length( ) -1) {",
            "score": 99.40471055772569,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && null <= sourceExcerpt.length ) {",
            "score": 99.38233778211806,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && null <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno &&0< sourceExcerpt.length( ) )",
            "score": 99.53972833806819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) { ) ;",
            "score": 99.44201049804687,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& true <= charno && charno < sourceExcerpt.length ) {",
            "score": 99.41960706208882,
            "correctness": "uncompilable",
            "tokenized_patch": "&& true <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno &&0<= charno &&0<= charno ) {",
            "score": 99.41021050347223,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno && charno == sourceExcerpt.length( ) ) {",
            "score": 99.4046630859375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length <=0) {",
            "score": 99.38150185032895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0& charno < sourceExcerpt.length( ) )",
            "score": 99.4503532858456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 & char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt [0] ) {",
            "score": 99.44195556640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt [ 0 ] ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno > sourceExcerpt.length ) {",
            "score": 99.40424262152777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && charno > sourceExcerpt.length( ) )",
            "score": 99.53965692934783,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false != charno && charno < sourceExcerpt.length ) {",
            "score": 99.41940789473684,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) {",
            "score": 99.40906700721153,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno ) { b.append( '\\n') ; }",
            "score": 99.40397374770221,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno ) { b.append( '| ') ; }",
            "score": 99.40397374770221,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno ) { b.append( ' ') ; }",
            "score": 99.40397374770221,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno ) { b.append( '  ') ; }",
            "score": 99.40397374770221,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno ) { b.append( 'bar') ; }",
            "score": 99.40397374770221,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno <0)",
            "score": 99.37953694661458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return b.toString( ) ;",
            "score": 99.53921508789062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return b . to CaMeL String ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { if( charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.48035777698864,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0& charno && charno < sourceExcerpt.length( ) )",
            "score": 99.45010986328126,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 & char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) < charno ) {",
            "score": 99.44024658203125,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.43908081054687,
            "correctness": "uncompilable",
            "tokenized_patch": "&& <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) { {",
            "score": 99.40845598493304,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.mode ) {",
            "score": 99.40385356702302,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . mode ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& index < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.48351469494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& index < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { && charno < sourceExcerpt.length( ) ) {",
            "score": 99.41936577690973,
            "correctness": "uncompilable",
            "tokenized_patch": ") { && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) +2) {",
            "score": 99.40311686197917,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) +11) {",
            "score": 99.40311686197917,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) +10) {",
            "score": 99.40311686197917,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) +9) {",
            "score": 99.40311686197917,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) +2007) {",
            "score": 99.40311686197917,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& error.charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4800037202381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) > ) ;",
            "score": 99.43728798314145,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno >=0) {",
            "score": 99.41891318873355,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no >= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < -1) {",
            "score": 99.40801038240132,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0&& charno >= sourceExcerpt.length ) {",
            "score": 99.37936240748355,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.538427734375,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<=0) {",
            "score": 99.47996826171875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.length( ) >= sourceExcerpt.length( ) )",
            "score": 99.44823608398437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) >= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) { ) ;",
            "score": 99.43690321180556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= !0&& charno < sourceExcerpt.length ) {",
            "score": 99.41884894120066,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ! 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && error.getCharno( ) != LINE ) {",
            "score": 99.40717516447368,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && error . get CaMeL Char@@ no ( ) != LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && true ) {",
            "score": 99.37910461425781,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && true ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < ! charno && charno < sourceExcerpt.length ) {",
            "score": 99.48258463541667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno <0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.47978071732955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0- charno < sourceExcerpt.length( ) )",
            "score": 99.4475959329044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 - char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno && charno >= sourceExcerpt.length( ) ) {",
            "score": 99.43815104166667,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==2)",
            "score": 99.41811651932566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==11)",
            "score": 99.41811651932566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==10)",
            "score": 99.41811651932566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==9)",
            "score": 99.41811651932566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ==2007)",
            "score": 99.41811651932566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < getLevelName( sourceExcerpt ) ) {",
            "score": 99.40702097039474,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < get CaMeL Level CaMeL Name ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0|| charno < sourceExcerpt.length( ) )",
            "score": 99.4022152549342,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno *charno < sourceExcerpt.length( ) )",
            "score": 99.53801163383152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no * char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && ! charno < sourceExcerpt.length ) {",
            "score": 99.48213123139881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < ) ;",
            "score": 99.43503705193015,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno && charno < sourceExcerpt.length )",
            "score": 99.41763644748264,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==0) {",
            "score": 99.37620442708334,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& LINE <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.48199172247024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<=0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.4792712983631,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ;",
            "score": 99.446484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ; ) {",
            "score": 99.43775576636905,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < count ) {",
            "score": 99.40627817007211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < count ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && charno < sourceExcerpt.length )",
            "score": 99.40174624794408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < excerpt.length( ) )",
            "score": 99.44609239366319,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ; charno < sourceExcerpt.length( ) ) {",
            "score": 99.43729073660714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ; char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0&0charno < sourceExcerpt.length( ) ) {",
            "score": 99.40603155838816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 & 0 char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno > sourceExcerpt ) {",
            "score": 99.40151638454861,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return 0;",
            "score": 99.37580023871527,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return 0 ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && && charno < charno && charno < charno ) {",
            "score": 99.48181733630952,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < charno < charno ) {",
            "score": 99.47910378196023,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.equals( LINE ) )",
            "score": 99.44529965049342,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < charno ) {",
            "score": 99.43352194393383,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0== charno && charno < sourceExcerpt.length ) {",
            "score": 99.41661312705592,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < isWhitespace ) {",
            "score": 99.40602213541666,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < is CaMeL Whitespace ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && charno < sourceExcerpt ) {",
            "score": 99.40064154730902,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && length <= sourceExcerpt.length ) {",
            "score": 99.37404378255208,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && length <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { b.append( error.description ) ;",
            "score": 99.48167782738095,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < error.getCharno( ) ) {",
            "score": 99.44524739583333,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < error . get CaMeL Char@@ no ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "*charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.43277138157895,
            "correctness": "uncompilable",
            "tokenized_patch": "* char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& true &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.41660443474265,
            "correctness": "plausible",
            "tokenized_patch": "&& true && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < length ) {",
            "score": 99.40567720853366,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt.trim( ) ) ; }",
            "score": 99.39985737047698,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt . trim ( ) ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) >=0) {",
            "score": 99.53517747961956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ] ) {",
            "score": 99.47869318181819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ] ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < error.length( ) ) {",
            "score": 99.44523790147569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2&& charno > sourceExcerpt.length( ) ) {",
            "score": 99.43634905133929,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <11&& charno > sourceExcerpt.length( ) ) {",
            "score": 99.43634905133929,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <10&& charno > sourceExcerpt.length( ) ) {",
            "score": 99.43634905133929,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <9&& charno > sourceExcerpt.length( ) ) {",
            "score": 99.43634905133929,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <2007&& charno > sourceExcerpt.length( ) ) {",
            "score": 99.43634905133929,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < code.length( ) ) {",
            "score": 99.3736931295956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < code . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) >1) {",
            "score": 99.53452997622283,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length &&0<= charno ) {",
            "score": 99.4292056435033,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false < charno && charno < sourceExcerpt.length ) {",
            "score": 99.41655530427632,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno & charno < sourceExcerpt.length( ) ) {",
            "score": 99.40545333059211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no & char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == sourceExcerpt.lineNumber( ) ) {",
            "score": 99.39919704861111,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == source CaMeL Ex@@ cer@@ pt . line CaMeL Number ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& this.charno < sourceExcerpt.length( ) ) {",
            "score": 99.37349446614583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& this . char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < has < sourceExcerpt.length( ) ) {",
            "score": 99.53451936141305,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < has < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && ! excerpt.equals( LINE ) ) {",
            "score": 99.48103471235795,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && ! ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < source , charno ) {",
            "score": 99.42853546142578,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source , char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt != ) ;",
            "score": 99.4161376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt != ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno ) { }",
            "score": 99.40422620271382,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return {",
            "score": 99.39914838005515,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length < ) {",
            "score": 99.37331814236111,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length < ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| charno <2&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.43548874627976,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "|| charno <11&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.43548874627976,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "|| charno <10&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.43548874627976,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "|| charno <9&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.43548874627976,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "|| charno <2007&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.43548874627976,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no < $NUMBER$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt [ ) ;",
            "score": 99.42820909288194,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt [ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno !=0) {",
            "score": 99.41519869290866,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "|| charno == sourceExcerpt.length( ) ) {",
            "score": 99.3989486694336,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return '\\n';",
            "score": 99.37278747558594,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return '| ';",
            "score": 99.37278747558594,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return ' ';",
            "score": 99.37278747558594,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return '  ';",
            "score": 99.37278747558594,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return 'bar';",
            "score": 99.37278747558594,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& length( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.4808349609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& length ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < next && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47570219494048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < next && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0< charno && sourceExcerpt.length( ) ) {",
            "score": 99.41463894314236,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno : charno < sourceExcerpt.length( ) ) {",
            "score": 99.4034359580592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no : char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( '\\n') ;",
            "score": 99.53356323242187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( '| ') ;",
            "score": 99.53356323242187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( ' ') ;",
            "score": 99.53356323242187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( '  ') ;",
            "score": 99.53356323242187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( 'bar') ;",
            "score": 99.53356323242187,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( ) ) { {",
            "score": 99.40301513671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.lineNumber ) {",
            "score": 99.39864349365234,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.equals( LINE ) ) {",
            "score": 99.47453002929687,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt != null )",
            "score": 99.43842909071181,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0^ charno < sourceExcerpt.length( ) ) {",
            "score": 99.43460422092014,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ^ char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) ) ;",
            "score": 99.41343858506944,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == CheckLevel.ERROR ) {",
            "score": 99.40281767003677,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) continue ;",
            "score": 99.3708984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '\\n') ; b.append( error.description ) ;",
            "score": 99.53307088216145,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( '| ') ; b.append( error.description ) ;",
            "score": 99.53307088216145,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( ' ') ; b.append( error.description ) ;",
            "score": 99.53307088216145,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( '  ') ; b.append( error.description ) ;",
            "score": 99.53307088216145,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( 'bar') ; b.append( error.description ) ;",
            "score": 99.53307088216145,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; b . append ( error . description ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( sourceExcerpt ) ; }",
            "score": 99.47992498224431,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( sourceExcerpt ) ; }",
            "score": 99.47992498224431,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( sourceExcerpt ) ; }",
            "score": 99.47992498224431,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( sourceExcerpt ) ; }",
            "score": 99.47992498224431,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( sourceExcerpt ) ; }",
            "score": 99.47992498224431,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( source CaMeL Ex@@ cer@@ pt ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) >0)",
            "score": 99.43417503720238,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < source ) {",
            "score": 99.42474365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < source ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < charno ) {",
            "score": 99.412841796875,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < -1) {",
            "score": 99.40196881975446,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return ) ;",
            "score": 99.39852566189236,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&1<= sourceExcerpt.length ) {",
            "score": 99.37082926432292,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 1 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false <= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.43790283203126,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0^ charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.43359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ^ char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno.length( ) ) {",
            "score": 99.40177648207721,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno <2) {",
            "score": 99.3704833984375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno <11) {",
            "score": 99.3704833984375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno <10) {",
            "score": 99.3704833984375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno <9) {",
            "score": 99.3704833984375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno <2007) {",
            "score": 99.3704833984375,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length( ) )",
            "score": 99.41253662109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& Character.isWhitespace( warning.getCharno( ) ) ) {",
            "score": 99.40155350534539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& Character . is CaMeL Whitespace ( warning . get CaMeL Char@@ no ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ;",
            "score": 99.39730072021484,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <1&& charno <0) {",
            "score": 99.37006293402777,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 1 && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno / charno < sourceExcerpt.length( ) ) {",
            "score": 99.53249104817708,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no / char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ) { ) {",
            "score": 99.42364180715461,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno >2) {",
            "score": 99.40132649739583,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno >11) {",
            "score": 99.40132649739583,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno >10) {",
            "score": 99.40132649739583,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno >9) {",
            "score": 99.40132649739583,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno >2007) {",
            "score": 99.40132649739583,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) -1) {",
            "score": 99.39720243566177,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& LINE != charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47123790922619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == '\\n'&& charno < sourceExcerpt.length( ) )",
            "score": 99.4357421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == '| '&& charno < sourceExcerpt.length( ) )",
            "score": 99.4357421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == ' '&& charno < sourceExcerpt.length( ) )",
            "score": 99.4357421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == '  '&& charno < sourceExcerpt.length( ) )",
            "score": 99.4357421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == 'bar'&& charno < sourceExcerpt.length( ) )",
            "score": 99.4357421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length ; {",
            "score": 99.43246941817434,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ; {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<0&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.41183953536184,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < 0 && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0== charno &&0<= charno ) {",
            "score": 99.40081787109375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 == char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt ) {",
            "score": 99.39670697380515,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( sourceExcerpt ) ;",
            "score": 99.53212483723958,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno ; ) {",
            "score": 99.47820490056819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) )",
            "score": 99.43534633091518,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { ) {",
            "score": 99.42315673828125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(0&& charno <= sourceExcerpt.length( ) ) ) {",
            "score": 99.41155684621711,
            "correctness": "uncompilable",
            "tokenized_patch": "( 0 && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < source.length( ) ) {",
            "score": 99.40062459309895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47738826976104,
            "correctness": "uncompilable",
            "tokenized_patch": "&& && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0.( charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.46942429315476,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 . ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno < charno )",
            "score": 99.43523092830883,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&.length < sourceExcerpt.length( ) ) {",
            "score": 99.43171037946429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= ) *",
            "score": 99.4227294921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= ) *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= != charno && sourceExcerpt.length( ) ) {",
            "score": 99.41116493626645,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= != char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno > charno ) {",
            "score": 99.40057051809211,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno != sourceExcerpt.lineNumber( ) ) {",
            "score": 99.39519585503473,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no != source CaMeL Ex@@ cer@@ pt . line CaMeL Number ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < n.length( ) ) {",
            "score": 99.36748190487133,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < n . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= < charno && sourceExcerpt.length( ) ) {",
            "score": 99.41085012335526,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >1) {",
            "score": 99.40024038461539,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno + sourceExcerpt.length( ) ) {",
            "score": 99.39380560980902,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no + source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { */",
            "score": 99.36732991536458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { * /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0- charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47537667410714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 - char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <( sourceExcerpt.length( ) -1) ) {",
            "score": 99.46868286132812,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < ( source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || {",
            "score": 99.4329605102539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && sourceExcerpt.length( ) >0) {",
            "score": 99.43024553571429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&1<= charno && charno < sourceExcerpt.length ) {",
            "score": 99.42235043174342,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 1 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt..length( ) ) {",
            "score": 99.36696490119485,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno &&0< charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.53094482421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < charno && charno ) {",
            "score": 99.47529529389881,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < char@@ no && char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( sourceExcerpt ) )",
            "score": 99.43186645507812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.42229903371711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length ) *",
            "score": 99.41043893914474,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && excerpt.length( ) < charno ) {",
            "score": 99.39936266447368,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == sourceExcerpt.length( ) -1) {",
            "score": 99.39252387152777,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length <=1) {",
            "score": 99.36641438802083,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length <= 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < key && charno < sourceExcerpt.length( ) ) {",
            "score": 99.47424897693452,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < key && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.contains( LINE ) ) {",
            "score": 99.46617216222427,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . contains ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= charno &&",
            "score": 99.43173217773438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length( ) ; {",
            "score": 99.42964099702381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& Math.isWhitespace( error.getCharno( ) ) ) {",
            "score": 99.39925344366776,
            "correctness": "uncompilable",
            "tokenized_patch": "&& Math . is CaMeL Whitespace ( error . get CaMeL Char@@ no ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.charValue( ) ) {",
            "score": 99.39232042100694,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . char CaMeL Value ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { b.append( LINE ) ;",
            "score": 99.53042204483695,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( LINE ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < source , charno < sourceExcerpt.length( ) ) {",
            "score": 99.46564592633929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source , char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < && charno < sourceExcerpt.length( ) )",
            "score": 99.431396484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0[ charno < sourceExcerpt.length( ) ) {",
            "score": 99.42963324652777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 [ char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < false ) {",
            "score": 99.40993780838816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < node.length( ) ) {",
            "score": 99.39919864430146,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < node . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return false ;",
            "score": 99.36524115668402,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return false ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > charno && sourceExcerpt.length( ) ) {",
            "score": 99.53018188476562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) b.append( '\\n') ;",
            "score": 99.47261555989583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) b.append( '| ') ;",
            "score": 99.47261555989583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) b.append( ' ') ;",
            "score": 99.47261555989583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) b.append( '  ') ;",
            "score": 99.47261555989583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) b.append( 'bar') ;",
            "score": 99.47261555989583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? charno : '\\n')",
            "score": 99.46453857421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no : $STRING$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? charno : '| ')",
            "score": 99.46453857421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no : $STRING$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? charno : ' ')",
            "score": 99.46453857421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no : $STRING$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? charno : '  ')",
            "score": 99.46453857421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no : $STRING$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? charno : 'bar')",
            "score": 99.46453857421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no : $STRING$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& null <= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.431201171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& null <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length ; ) {",
            "score": 99.42946166992188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) <= )",
            "score": 99.42041015625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )(",
            "score": 99.4080451516544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) (",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= sourceExcerpt.length( )",
            "score": 99.39907355057566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno < sourceExcerpt ) {",
            "score": 99.39129997702206,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ) { }",
            "score": 99.47256324404762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno ==0&& charno < sourceExcerpt.length( ) )",
            "score": 99.43076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= [ charno < sourceExcerpt.length( ) ) {",
            "score": 99.42886513157895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= [ char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.charno ) {",
            "score": 99.42013549804688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno < sourceExcerpt.length )",
            "score": 99.40738932291667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt length ) {",
            "score": 99.3897705078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) private < sourceExcerpt.length( ) ) {",
            "score": 99.52998860677083,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) private < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { if( sourceExcerpt.equals( LINE ) ) {",
            "score": 99.46373793658088,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != ) {",
            "score": 99.40719401041666,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < l.length( ) ) {",
            "score": 99.39690085018383,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < l . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { return {",
            "score": 99.38913981119792,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( charno < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.52987007472827,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno &&",
            "score": 99.47175903320313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && charno >0)",
            "score": 99.42957763671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && char@@ no > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= type && charno < sourceExcerpt.length( ) ) {",
            "score": 99.42813110351562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= type && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= null && charno < sourceExcerpt.length ) {",
            "score": 99.40717230902777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= null && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0== charno ) {",
            "score": 99.39510091145833,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 == char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) > length( ) ) {",
            "score": 99.38852826286765,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < n && charno < sourceExcerpt.length( ) ) {",
            "score": 99.46297200520833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < n && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno < sourceExcerpt.length( ) ) {",
            "score": 99.39112006293402,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !( charno < sourceExcerpt.length( ) ) )",
            "score": 99.42837185329861,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length1) {",
            "score": 99.46954055059524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0: charno < sourceExcerpt.length( ) )",
            "score": 99.42815803079044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 : char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { ) {",
            "score": 99.41792297363281,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= LINE ) {",
            "score": 99.38963407628677,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt ) {",
            "score": 99.38636016845703,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( error.lineNumber ) ;",
            "score": 99.46918015252976,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . line CaMeL Number ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( error.lineNumber ) ;",
            "score": 99.46918015252976,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . line CaMeL Number ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( error.lineNumber ) ;",
            "score": 99.46918015252976,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . line CaMeL Number ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( error.lineNumber ) ;",
            "score": 99.46918015252976,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . line CaMeL Number ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( error.lineNumber ) ;",
            "score": 99.46918015252976,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( error . line CaMeL Number ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < error.length( ) && excerpt.equals( LINE ) )",
            "score": 99.4269287109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < error . length ( ) && ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < source.length( ) ) {",
            "score": 99.40297564338235,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && error.description.length( ) >0) {",
            "score": 99.38926866319444,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && error . description . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno / sourceExcerpt.length( ) ) {",
            "score": 99.38627794053819,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no / source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= length && charno < sourceExcerpt.length( ) ) {",
            "score": 99.42627563476563,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= length && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false < charno && charno < charno ) {",
            "score": 99.4169921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( {",
            "score": 99.40291341145833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && LINE ) {",
            "score": 99.38861762152777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) - ) {",
            "score": 99.38567756204044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.52811863111413,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < error.getCharno( ) ) {",
            "score": 99.42639770507813,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < error . get CaMeL Char@@ no ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0<= charno && charno < sourceExcerpt.length ; ) {",
            "score": 99.42614135742187,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) ;",
            "score": 99.41639709472656,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0float charno < sourceExcerpt.length( ) ) {",
            "score": 99.38850233289931,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 float char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; } }",
            "score": 99.38557434082031,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <= charno ) {",
            "score": 99.3628158569336,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( '\\n') ;",
            "score": 99.4678093405331,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( '| ') ;",
            "score": 99.4678093405331,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( ' ') ;",
            "score": 99.4678093405331,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( '  ') ;",
            "score": 99.4678093405331,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( 'bar') ;",
            "score": 99.4678093405331,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& true <= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.42568359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& true <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0< sourceExcerpt.length ) {",
            "score": 99.416259765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "?0: sourceExcerpt.length( ) ) {",
            "score": 99.402197265625,
            "correctness": "uncompilable",
            "tokenized_patch": "? 0 : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno *sourceExcerpt.length( ) ) {",
            "score": 99.38546413845486,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no * source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( sourceExcerpt ) ) {",
            "score": 99.45853097098214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0, charno && charno < sourceExcerpt.length( ) )",
            "score": 99.42531127929688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 , char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { ) ;",
            "score": 99.41521253083882,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&&0< sourceExcerpt.length ) {",
            "score": 99.40203498391544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && 0 < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno != sourceExcerpt ) {",
            "score": 99.38454302619485,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2< sourceExcerpt.length ) {",
            "score": 99.36050075954861,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&11< sourceExcerpt.length ) {",
            "score": 99.36050075954861,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&10< sourceExcerpt.length ) {",
            "score": 99.36050075954861,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&9< sourceExcerpt.length ) {",
            "score": 99.36050075954861,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&2007< sourceExcerpt.length ) {",
            "score": 99.36050075954861,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno < sourceExcerpt ) {",
            "score": 99.46470424107143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt.length( ) ] ) {",
            "score": 99.45849609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ] ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.booleanValue( ) ) {",
            "score": 99.42490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . boolean CaMeL Value ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < '\\n') {",
            "score": 99.41510009765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < '| ') {",
            "score": 99.41510009765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < ' ') {",
            "score": 99.41510009765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < '  ') {",
            "score": 99.41510009765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < 'bar') {",
            "score": 99.41510009765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt.length ;",
            "score": 99.38365342881944,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& warning.charno < sourceExcerpt.length( ) ) {",
            "score": 99.38277180989583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& warning . char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ||0<= charno ;",
            "score": 99.42469482421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 <= char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length >2) {",
            "score": 99.41497124565973,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length >11) {",
            "score": 99.41497124565973,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length >10) {",
            "score": 99.41497124565973,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length >9) {",
            "score": 99.41497124565973,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length >2007) {",
            "score": 99.41497124565973,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length > $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < options.length( ) ) {",
            "score": 99.40074965533088,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < options . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source != null ) {",
            "score": 99.38256022135417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno ) { {",
            "score": 99.46388244628906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& end < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.45714750744048,
            "correctness": "uncompilable",
            "tokenized_patch": "&& end < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno : charno < sourceExcerpt.length( ) )",
            "score": 99.42439100477431,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no : char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= || charno < sourceExcerpt.length( ) ) {",
            "score": 99.41453150699013,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| false && charno < sourceExcerpt.length( ) ) {",
            "score": 99.40056016710069,
            "correctness": "plausible",
            "tokenized_patch": "|| false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <0) { b.append( '\\n') ; }",
            "score": 99.38288879394531,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '| ') ; }",
            "score": 99.38288879394531,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( ' ') ; }",
            "score": 99.38288879394531,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '  ') ; }",
            "score": 99.38288879394531,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( 'bar') ; }",
            "score": 99.38288879394531,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= warning.length( ) ) {",
            "score": 99.3818588256836,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= warning . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ||0)",
            "score": 99.52607865767045,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& && charno < charno && charno < sourceExcerpt.length ) {",
            "score": 99.46354166666667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& && char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt.length( )( ) ) {",
            "score": 99.45691499255952,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < sourceExcerpt ) {",
            "score": 99.42412719726562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) || false ) {",
            "score": 99.41428629557292,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& error.description < sourceExcerpt.length( ) ) {",
            "score": 99.38139073988971,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . description < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < true ) {",
            "score": 99.36010064019098,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) <0) {",
            "score": 99.52595320991848,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ) { }",
            "score": 99.46329752604167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < error.length( ) && excerpt.equals( LINE ) ) {",
            "score": 99.4565197172619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < error . length ( ) && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) &&",
            "score": 99.3999382467831,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno > sourceExcerpt ) {",
            "score": 99.38208725873162,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0% charno < sourceExcerpt.length( ) ) {",
            "score": 99.38087972005208,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 % char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==0) { b.append( '\\n') ;",
            "score": 99.52592329545455,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==0) { b.append( '| ') ;",
            "score": 99.52592329545455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==0) { b.append( ' ') ;",
            "score": 99.52592329545455,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==0) { b.append( '  ') ;",
            "score": 99.52592329545455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==0) { b.append( 'bar') ;",
            "score": 99.52592329545455,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno + charno < sourceExcerpt.length( ) )",
            "score": 99.42314995659723,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no + char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false < charno ) {",
            "score": 99.41224083533653,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0&& charno < sourceExcerpt.length ) {",
            "score": 99.39983367919922,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != sourceExcerpt.charValue( ) ) {",
            "score": 99.38191053602431,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no != source CaMeL Ex@@ cer@@ pt . char CaMeL Value ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0>= charno &&0<= charno ) {",
            "score": 99.38015407986111,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 >= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) && false ) {",
            "score": 99.35861385569854,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length2) {",
            "score": 99.41223862591912,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length11) {",
            "score": 99.41223862591912,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length10) {",
            "score": 99.41223862591912,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length9) {",
            "score": 99.41223862591912,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length2007) {",
            "score": 99.41223862591912,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno > sourceExcerpt.length )",
            "score": 99.38155788845486,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < length( ) ) {",
            "score": 99.3799560546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )1) {",
            "score": 99.3585564108456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && warning.lineNumber >0) {",
            "score": 99.52552286783855,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && warning . line CaMeL Number > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ?0: charno )",
            "score": 99.45406494140624,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? 0 : char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false < charno && charno < sourceExcerpt.length( ) )",
            "score": 99.42210693359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.index( ) )",
            "score": 99.4203369140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . index ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < source , sourceExcerpt.length( ) ) {",
            "score": 99.41011555989583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source , source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno &&0< sourceExcerpt.length ) {",
            "score": 99.39853244357639,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ).equals( '\\n') ) {",
            "score": 99.3798469094669,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ).equals( '| ') ) {",
            "score": 99.3798469094669,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ).equals( ' ') ) {",
            "score": 99.3798469094669,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ).equals( '  ') ) {",
            "score": 99.3798469094669,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ).equals( 'bar') ) {",
            "score": 99.3798469094669,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && key < sourceExcerpt.length( ) ) {",
            "score": 99.46096801757812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && key < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { if( excerpt.equals( LINE ) ) {",
            "score": 99.45313313802083,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { ) ; }",
            "score": 99.40956025965073,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( ) ) ;",
            "score": 99.39848497178819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) { ) {",
            "score": 99.37923177083333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && true( charno < charno ) ) {",
            "score": 99.35796042049633,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && true ( char@@ no < char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ charno &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5243631998698,
            "correctness": "uncompilable",
            "tokenized_patch": "/ char@@ no && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) {0",
            "score": 99.45281623391544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { 0",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( '\\n') )",
            "score": 99.42137145996094,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( '| ') )",
            "score": 99.42137145996094,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( ' ') )",
            "score": 99.42137145996094,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( '  ') )",
            "score": 99.42137145996094,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( 'bar') )",
            "score": 99.42137145996094,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0: charno && charno < sourceExcerpt.length( ) )",
            "score": 99.41975708007813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 : char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||( charno <= sourceExcerpt.length( ) ) ) {",
            "score": 99.39773220486111,
            "correctness": "plausible",
            "tokenized_patch": "|| ( char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length - charno ) {",
            "score": 99.38005514705883,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length - char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < value.length( ) ) {",
            "score": 99.37775017233456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < value . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt ) {",
            "score": 99.35780962775735,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && && charno < sourceExcerpt.length( ) )",
            "score": 99.46057710193452,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && excerpt.equals( LINE ) )",
            "score": 99.4191535500919,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source instanceof sourceExcerpt.length( ) ) {",
            "score": 99.41912231445312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source instanceof source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) ?",
            "score": 99.39627414279514,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) ?",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; }",
            "score": 99.37896321614583,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0>= charno ) {",
            "score": 99.37589518229167,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 >= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& LINE , charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4604724702381,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE , char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.indexOf( '\\n') ) {",
            "score": 99.45224480879934,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . index CaMeL Of ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.indexOf( '| ') ) {",
            "score": 99.45224480879934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . index CaMeL Of ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.indexOf( ' ') ) {",
            "score": 99.45224480879934,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . index CaMeL Of ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.indexOf( '  ') ) {",
            "score": 99.45224480879934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . index CaMeL Of ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.indexOf( 'bar') ) {",
            "score": 99.45224480879934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . index CaMeL Of ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0( charno < sourceExcerpt.length( ) ) )",
            "score": 99.41715494791667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { ) {",
            "score": 99.40840418198529,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) return",
            "score": 99.39613172743056,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) return",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0)",
            "score": 99.37606811523438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < n ) {",
            "score": 99.37514919704861,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < n ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false <= sourceExcerpt.length ) {",
            "score": 99.35730658637152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0<= charno && sourceExcerpt.length( ) )",
            "score": 99.52331012228261,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( '\\n') ;",
            "score": 99.46023720189145,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( '| ') ;",
            "score": 99.46023720189145,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( ' ') ;",
            "score": 99.46023720189145,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( '  ') ;",
            "score": 99.46023720189145,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt ) { b.append( 'bar') ;",
            "score": 99.46023720189145,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { int charno = error.getCharno( ) ;",
            "score": 99.45182800292969,
            "correctness": "uncompilable",
            "tokenized_patch": ") { int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < sourceExcerpt.length )",
            "score": 99.3760627297794,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < null ) {",
            "score": 99.35714956430289,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& length < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.45968191964286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& length < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { ) ;",
            "score": 99.40782973345588,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< sourceExcerpt.length ) ;",
            "score": 99.39497205946181,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) >0)",
            "score": 99.37587076822916,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && true && charno < charno ) {",
            "score": 99.35702514648438,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && true && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno has < sourceExcerpt.length( ) ) {",
            "score": 99.5228271484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no has < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && key < sourceExcerpt.length( ) ) {",
            "score": 99.45946103050595,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && key < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && excerpt.equals( LINE ) ) {",
            "score": 99.45086669921875,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& false <= charno &&0< sourceExcerpt.length ) {",
            "score": 99.39472791883681,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false <= char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& lineNumber < sourceExcerpt.length( ) ) {",
            "score": 99.37472713694854,
            "correctness": "uncompilable",
            "tokenized_patch": "&& line CaMeL Number < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < LINE ) {",
            "score": 99.37262641059027,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < ) {",
            "score": 99.35672336154514,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && ! charno < charno ) {",
            "score": 99.45939127604167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && ! char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno < sourceExcerpt.length( ) )",
            "score": 99.41600126378677,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) >0) {",
            "score": 99.37472195095486,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno > count ) {",
            "score": 99.37250434027777,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > count ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ; charno ++ ) {",
            "score": 99.45917426215277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ] )",
            "score": 99.41576385498047,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ] )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && == sourceExcerpt.length( ) ) {",
            "score": 99.41498766447368,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno( charno ) ) {",
            "score": 99.40376551011029,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0< charno && charno < sourceExcerpt.length )",
            "score": 99.39303249782986,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt.length ;",
            "score": 99.37364366319444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt . length ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) )",
            "score": 99.37016296386719,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < && charno < sourceExcerpt.length ) {",
            "score": 99.35533311631944,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& end <= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.5209728422619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& end <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != && charno < sourceExcerpt.length( ) ) {",
            "score": 99.44945068359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no != && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno & charno < sourceExcerpt.length( ) )",
            "score": 99.41535101996527,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no & char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <= charno ) {",
            "score": 99.40373011997768,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& <0&& charno < sourceExcerpt.length ) {",
            "score": 99.39280072380515,
            "correctness": "uncompilable",
            "tokenized_patch": "&& < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( )( ) ) {",
            "score": 99.37326947380515,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= charno &&0< charno ) {",
            "score": 99.36992051866319,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= char@@ no && 0 < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) return '\\n';",
            "score": 99.35480095358456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) return '| ';",
            "score": 99.35480095358456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) return ' ';",
            "score": 99.35480095358456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) return '  ';",
            "score": 99.35480095358456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) return 'bar';",
            "score": 99.35480095358456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=0) { b.append( '\\n') ;",
            "score": 99.52056329900569,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=0) { b.append( '| ') ;",
            "score": 99.52056329900569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=0) { b.append( ' ') ;",
            "score": 99.52056329900569,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=0) { b.append( '  ') ;",
            "score": 99.52056329900569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=0) { b.append( 'bar') ;",
            "score": 99.52056329900569,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length(( ) ) {",
            "score": 99.4146369485294,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) ;",
            "score": 99.39212472098214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno.length( ) >0) {",
            "score": 99.37296788832721,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& && charno <= sourceExcerpt.length( ) ) {",
            "score": 99.35456399356617,
            "correctness": "uncompilable",
            "tokenized_patch": "&& && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && charno < sourceExcerpt.length( )",
            "score": 99.52030806107955,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno > charno ) {",
            "score": 99.45765904017857,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no > char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { return '\\n'; }",
            "score": 99.41287231445312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return $STRING$ ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { return '| '; }",
            "score": 99.41287231445312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return $STRING$ ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { return ' '; }",
            "score": 99.41287231445312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return $STRING$ ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { return '  '; }",
            "score": 99.41287231445312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return $STRING$ ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { return 'bar'; }",
            "score": 99.41287231445312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { return $STRING$ ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= sourceExcerpt.length( ) ) {",
            "score": 99.40343475341797,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&&0< sourceExcerpt.length ) {",
            "score": 99.39130316840277,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && 0 < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == charno ) {",
            "score": 99.37285505022321,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < error.length( ) ) {",
            "score": 99.36879475911458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno || sourceExcerpt.length( ) ) {",
            "score": 99.35453965928819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no || source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) ==0)",
            "score": 99.52012329101562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) == 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } else { b.append( '\\n') ;",
            "score": 99.45753784179688,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; } else { b.append( '| ') ;",
            "score": 99.45753784179688,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } else { b.append( ' ') ;",
            "score": 99.45753784179688,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; } else { b.append( '  ') ;",
            "score": 99.45753784179688,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } else { b.append( 'bar') ;",
            "score": 99.45753784179688,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } else { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.equals( LINE ) ) {",
            "score": 99.44590454101562,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno &0charno < sourceExcerpt.length( ) )",
            "score": 99.413330078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no & 0 char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) < charno ) {",
            "score": 99.40314797794117,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! excerpt.equals( LINE ) ) {",
            "score": 99.36826735276442,
            "correctness": "wrong",
            "tokenized_patch": "&& ! ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=0&& charno && charno < sourceExcerpt.length( ) )",
            "score": 99.5199307528409,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) b.append( '\\n') ;",
            "score": 99.45740356445313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) b.append( '| ') ;",
            "score": 99.45740356445313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) b.append( ' ') ;",
            "score": 99.45740356445313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) b.append( '  ') ;",
            "score": 99.45740356445313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) b.append( 'bar') ;",
            "score": 99.45740356445313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(0) &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.39070638020833,
            "correctness": "uncompilable",
            "tokenized_patch": "( 0 ) && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.longValue( ) ) {",
            "score": 99.37061903211806,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . long CaMeL Value ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno && sourceExcerpt.length( ) >0) )",
            "score": 99.5190762606534,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ; ) {",
            "score": 99.45733351934524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0, charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.41160278320312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 , char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < error.getCharno( ) )",
            "score": 99.40986713610198,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < error . get CaMeL Char@@ no ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false( charno < sourceExcerpt.length ) ) {",
            "score": 99.39023006663604,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.doubleValue( ) ) {",
            "score": 99.37049018012152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . double CaMeL Value ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ) < charno ) {",
            "score": 99.3680419921875,
            "correctness": "wrong",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) return true ;",
            "score": 99.35386827256944,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) return true ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { append( '\\n') ;",
            "score": 99.45682198660714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { append( '| ') ;",
            "score": 99.45682198660714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { append( ' ') ;",
            "score": 99.45682198660714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { append( '  ') ;",
            "score": 99.45682198660714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { append( 'bar') ;",
            "score": 99.45682198660714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < charno && charno < charno )",
            "score": 99.4091732627467,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( ) )",
            "score": 99.38997156479779,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < length ) {",
            "score": 99.35385470920139,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) { )",
            "score": 99.39806410845588,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno ) { b.append( '\\n') ; }",
            "score": 99.3693618774414,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno ) { b.append( '| ') ; }",
            "score": 99.3693618774414,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno ) { b.append( ' ') ; }",
            "score": 99.3693618774414,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno ) { b.append( '  ') ; }",
            "score": 99.3693618774414,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno ) { b.append( 'bar') ; }",
            "score": 99.3693618774414,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length < false ) {",
            "score": 99.35368516710069,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length < false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno &&0<= sourceExcerpt.length( ) )",
            "score": 99.4086978310033,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) return true ;",
            "score": 99.35355870863971,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) return true ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int0&&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51814070991848,
            "correctness": "uncompilable",
            "tokenized_patch": "int 0 && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= '\\n'&& charno < sourceExcerpt.length( ) )",
            "score": 99.40708521792763,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= '| '&& charno < sourceExcerpt.length( ) )",
            "score": 99.40708521792763,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= ' '&& charno < sourceExcerpt.length( ) )",
            "score": 99.40708521792763,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= '  '&& charno < sourceExcerpt.length( ) )",
            "score": 99.40708521792763,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= 'bar'&& charno < sourceExcerpt.length( ) )",
            "score": 99.40708521792763,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= $STRING$ && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length ==1) {",
            "score": 99.39722357855902,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length == 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0&&0<= sourceExcerpt.length( ) ) {",
            "score": 99.38933967141544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.getType( ) ) {",
            "score": 99.36907958984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . get CaMeL Type ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > source.length( ) ) {",
            "score": 99.36484662224265,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno == sourceExcerpt ) {",
            "score": 99.35302734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source = sourceExcerpt.length( ) ) {",
            "score": 99.51809825067934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source = source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) {",
            "score": 99.45580037434895,
            "correctness": "plausible",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { b.append( '\\n') ; } b.append( '\\n') ; }",
            "score": 99.44069952713816,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } b.append( '| ') ; }",
            "score": 99.44069952713816,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } b.append( ' ') ; }",
            "score": 99.44069952713816,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } b.append( '  ') ; }",
            "score": 99.44069952713816,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } b.append( 'bar') ; }",
            "score": 99.44069952713816,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length == ) {",
            "score": 99.39712344898896,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length == ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "(0&&0<= sourceExcerpt.length( ) ) ) {",
            "score": 99.38765462239583,
            "correctness": "uncompilable",
            "tokenized_patch": "( 0 && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >= sourceExcerpt.length( ) ) { {",
            "score": 99.36471737132354,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length ) {",
            "score": 99.35284830729167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno / sourceExcerpt.length( ) )",
            "score": 99.5171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no / source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno , sourceExcerpt.length( ) ) {",
            "score": 99.40995279947917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no , source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ).length( ) )",
            "score": 99.40531198601974,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt != null ) {",
            "score": 99.38764953613281,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && error.getCharno( ) ) {",
            "score": 99.36455939797794,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && error . get CaMeL Char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < out.length( ) ) {",
            "score": 99.35138298483456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < out . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.51614512567934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length2) {",
            "score": 99.45440383184524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length11) {",
            "score": 99.45440383184524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length10) {",
            "score": 99.45440383184524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length9) {",
            "score": 99.45440383184524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length2007) {",
            "score": 99.45440383184524,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) throws RuntimeException {",
            "score": 99.43911743164062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) throws Runtime CaMeL Exception {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { ; }",
            "score": 99.40330674913194,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt ) ;",
            "score": 99.3875373391544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length /2) {",
            "score": 99.36817932128906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length / $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length /11) {",
            "score": 99.36817932128906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length / $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length /10) {",
            "score": 99.36817932128906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length / $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length /9) {",
            "score": 99.36817932128906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length / $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length /2007) {",
            "score": 99.36817932128906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length / $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.indexOf( LINE ) ) {",
            "score": 99.43720446134868,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . index CaMeL Of ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) +",
            "score": 99.40880126953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) +",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length1)",
            "score": 99.40179122121711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=( charno < sourceExcerpt.length ) ) {",
            "score": 99.38695610894098,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<=0) {",
            "score": 99.36424345128677,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno != source.length( ) ) {",
            "score": 99.35093778722427,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& key < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.45338076636905,
            "correctness": "uncompilable",
            "tokenized_patch": "&& key < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { if( excerpt.equals( LINE ) &&0<= charno ) {",
            "score": 99.43626098632812,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno <= sourceExcerpt.length( ) )",
            "score": 99.40869750976563,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) &&0<= charno )",
            "score": 99.40177194695724,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno >= sourceExcerpt.length )",
            "score": 99.38692220052083,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no >= source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0< charno ) {",
            "score": 99.3636833639706,
            "correctness": "plausible",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { */",
            "score": 99.35087585449219,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { * /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < charno ; charno ++ ) {",
            "score": 99.45322963169643,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < char@@ no ; char@@ no ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != false ) {",
            "score": 99.38627624511719,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '\\n') ; } else {",
            "score": 99.36532931857639,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <0) { b.append( '| ') ; } else {",
            "score": 99.36532931857639,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( ' ') ; } else {",
            "score": 99.36532931857639,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <0) { b.append( '  ') ; } else {",
            "score": 99.36532931857639,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( 'bar') ; } else {",
            "score": 99.36532931857639,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno -- < sourceExcerpt.length( ) ) {",
            "score": 99.35997817095588,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no -- < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) && false ) {",
            "score": 99.35053168402777,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >= sourceExcerpt.length( ) )",
            "score": 99.51535866477273,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )2) {",
            "score": 99.36302274816177,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )11) {",
            "score": 99.36302274816177,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )10) {",
            "score": 99.36302274816177,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )9) {",
            "score": 99.36302274816177,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )2007) {",
            "score": 99.36302274816177,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && source != '\\n') {",
            "score": 99.35857077205883,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source != $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && source != '| ') {",
            "score": 99.35857077205883,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source != $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && source != ' ') {",
            "score": 99.35857077205883,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source != $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && source != '  ') {",
            "score": 99.35857077205883,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source != $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && source != 'bar') {",
            "score": 99.35857077205883,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source != $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& sourceExcerpt.length( ) ) {",
            "score": 99.35021294487848,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )( ) )",
            "score": 99.51528448807566,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0< charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.4078857421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno < charno ) {",
            "score": 99.3930892944336,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length ==0) {",
            "score": 99.38576931423611,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == null ) {",
            "score": 99.36038912259616,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return '\\n'{",
            "score": 99.34922960069444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return '| '{",
            "score": 99.34922960069444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return ' '{",
            "score": 99.34922960069444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return '  '{",
            "score": 99.34922960069444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) return 'bar'{",
            "score": 99.34922960069444,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno += sourceExcerpt.length( ) ) {",
            "score": 99.51463681175595,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no += source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2&& charno <2) {",
            "score": 99.40737575954861,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <11&& charno <11) {",
            "score": 99.40737575954861,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <10&& charno <10) {",
            "score": 99.40737575954861,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <9&& charno <9) {",
            "score": 99.40737575954861,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <2007&& charno <2007) {",
            "score": 99.40737575954861,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ) )",
            "score": 99.39279354319854,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false != sourceExcerpt.length ) {",
            "score": 99.38557264539931,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false != source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( )( charno ) ) {",
            "score": 99.35936781939338,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno ;",
            "score": 99.39870733963816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno &&",
            "score": 99.35596421185662,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >1) {",
            "score": 99.34774576822916,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length <= ) {",
            "score": 99.39130715762867,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length <= ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& [0] < sourceExcerpt.length( ) ) {",
            "score": 99.35667509191177,
            "correctness": "uncompilable",
            "tokenized_patch": "&& [ 0 ] < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && error.lineNumber >0) {",
            "score": 99.35594177246094,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && error . line CaMeL Number > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno ) {",
            "score": 99.34743365119485,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.equals( LINE ) ) {",
            "score": 99.43062097886029,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno & sourceExcerpt.length( ) ) {",
            "score": 99.40607367621527,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no & source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno || charno < sourceExcerpt.length )",
            "score": 99.3851318359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && excerpt.equals( LINE ) ) {",
            "score": 99.3545783547794,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <0)",
            "score": 99.3470458984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno || sourceExcerpt.length( ) >0) {",
            "score": 99.5137249490489,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no || source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno && charno < sourceExcerpt ) {",
            "score": 99.40601196289063,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { else",
            "score": 99.39734604779412,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && true < charno ) {",
            "score": 99.3905498798077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && true < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno <= sourceExcerpt.length ) ) {",
            "score": 99.3847885131836,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no <= source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno >0) {",
            "score": 99.35576923076923,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( '\\n') ) {",
            "score": 99.3524658203125,
            "correctness": "plausible",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( '| ') ) {",
            "score": 99.3524658203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( ' ') ) {",
            "score": 99.3524658203125,
            "correctness": "plausible",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( '  ') ) {",
            "score": 99.3524658203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( 'bar') ) {",
            "score": 99.3524658203125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& true &&0<= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.51365064538044,
            "correctness": "wrong",
            "tokenized_patch": "&& true && 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && source.length( ) >0) {",
            "score": 99.40594482421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.39733208550348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt ) { )",
            "score": 99.38903130425348,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0&&0< sourceExcerpt.length( ) ) {",
            "score": 99.38456217447917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno > ) {",
            "score": 99.3524169921875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno( ) ) {",
            "score": 99.34535217285156,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -0) {",
            "score": 99.43020968967014,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0> charno && charno < sourceExcerpt.length ; ) {",
            "score": 99.40559692382813,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != charno ) {",
            "score": 99.3888801125919,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ) ; b.append( '\\n') ; }",
            "score": 99.35282628676471,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ) ; b.append( '| ') ; }",
            "score": 99.35282628676471,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ) ; b.append( ' ') ; }",
            "score": 99.35282628676471,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ) ; b.append( '  ') ; }",
            "score": 99.35282628676471,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ) ; b.append( 'bar') ; }",
            "score": 99.35282628676471,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < error.length( ) ) {",
            "score": 99.35200051700367,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= ! sourceExcerpt.length( ) ) {",
            "score": 99.3429314108456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= ! source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length -2) {",
            "score": 99.35125732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length - $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length -11) {",
            "score": 99.35125732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length - $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length -10) {",
            "score": 99.35125732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length - $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length -9) {",
            "score": 99.35125732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length - $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length -2007) {",
            "score": 99.35125732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length - $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < source.length( ) ) {",
            "score": 99.35065056295956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && false ) {",
            "score": 99.34113311767578,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<=( charno && charno < sourceExcerpt.length( ) ) )",
            "score": 99.5100985440341,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt.length ;",
            "score": 99.39377955386513,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& true || charno < sourceExcerpt.length( ) ) {",
            "score": 99.38446044921875,
            "correctness": "plausible",
            "tokenized_patch": "&& true || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno != charno ) {",
            "score": 99.35096086774554,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < list.length( ) ) {",
            "score": 99.35021254595588,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < list . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2.length( ) ) {",
            "score": 99.34030330882354,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <11.length( ) ) {",
            "score": 99.34030330882354,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <10.length( ) ) {",
            "score": 99.34030330882354,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <9.length( ) ) {",
            "score": 99.34030330882354,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2007.length( ) ) {",
            "score": 99.34030330882354,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && sourceExcerpt.length( ) >0) ) {",
            "score": 99.50945434570312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.startsWith( ) ) {",
            "score": 99.40379638671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . starts CaMeL With ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == charno < sourceExcerpt.length( ) )",
            "score": 99.39251030815973,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! charno < charno ) {",
            "score": 99.38435872395833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <1.length( ) ) {",
            "score": 99.34906364889706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 1 . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < source.length( ) )",
            "score": 99.33899643841912,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno && charno < charno ) ) {",
            "score": 99.44111184512867,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no < char@@ no && char@@ no < char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) )",
            "score": 99.3924560546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>=0&& charno < sourceExcerpt.length ) {",
            "score": 99.38383653428819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >= 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt",
            "score": 99.34943033854167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= ! sourceExcerpt.equals( LINE ) ) {",
            "score": 99.34894157858456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno *sourceExcerpt.length( ) )",
            "score": 99.5085205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no * source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < charno && charno < charno ) {",
            "score": 99.4402587890625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.get( ) )",
            "score": 99.40360717773437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . get ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>> charno < sourceExcerpt.length( ) )",
            "score": 99.39226217830883,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >> char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && this.charno < charno ) {",
            "score": 99.38430786132812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && this . char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& sourceExcerpt.length( ) ) {",
            "score": 99.38373161764706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != sourceExcerpt.trim( ) ) {",
            "score": 99.3472671508789,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no != source CaMeL Ex@@ cer@@ pt . trim ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ||0<= charno ) {",
            "score": 99.34698127297794,
            "correctness": "plausible",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) || 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length ) {",
            "score": 99.33770751953125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0<= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.50845191592262,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) !=0) {",
            "score": 99.42325168185764,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0&&0<= charno ) {",
            "score": 99.38385009765625,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0< charno && charno <0) {",
            "score": 99.38370090060764,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.type( ) ) {",
            "score": 99.34710693359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . type ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < -2) {",
            "score": 99.34641810825893,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < -11) {",
            "score": 99.34641810825893,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < -10) {",
            "score": 99.34641810825893,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < -9) {",
            "score": 99.34641810825893,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < -2007) {",
            "score": 99.34641810825893,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < - $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { true",
            "score": 99.33679917279412,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { true",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( charno ) ) {",
            "score": 99.4215087890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& Character.isWhitespace( sourceExcerpt.length( ) ) )",
            "score": 99.39104903371711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& Character . is CaMeL Whitespace ( source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false - charno < sourceExcerpt.length( ) ) {",
            "score": 99.383056640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false - char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| ! charno < sourceExcerpt.length( ) ) {",
            "score": 99.34624167049633,
            "correctness": "uncompilable",
            "tokenized_patch": "|| ! char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && false ) {",
            "score": 99.3442626953125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >2) {",
            "score": 99.3361328125,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >11) {",
            "score": 99.3361328125,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >10) {",
            "score": 99.3361328125,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >9) {",
            "score": 99.3361328125,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >2007) {",
            "score": 99.3361328125,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.length < sourceExcerpt.length( ) ) {",
            "score": 99.42082776521382,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno &&0<= charno )",
            "score": 99.39089483963816,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false ) {",
            "score": 99.38298950195312,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && ! charno && charno < charno ) {",
            "score": 99.38136121961806,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) break ;",
            "score": 99.335400390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) break ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < this.sourceExcerpt.length( ) )",
            "score": 99.50794566761364,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0|| charno < sourceExcerpt.length ) {",
            "score": 99.38280531939338,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno !=0) {",
            "score": 99.33455113002232,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ++ ) {",
            "score": 99.42061121323529,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ++ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.4008853310033,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt != null )",
            "score": 99.38974480879934,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < Math.length( ) ) {",
            "score": 99.38280531939338,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < Math . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno > charno ) {",
            "score": 99.34488932291667,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no > char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& error.getCharno( ) < LINE ) {",
            "score": 99.34258161272321,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) < LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ) {",
            "score": 99.33399155560662,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { int charno = error.getCharno( ) ;",
            "score": 99.50723121279762,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < ) {",
            "score": 99.43806537828948,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !( sourceExcerpt.equals( LINE ) ) ) {",
            "score": 99.42015165441177,
            "correctness": "plausible",
            "tokenized_patch": "&& ! ( source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.40072970920139,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ) {",
            "score": 99.38937557444854,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false == sourceExcerpt.length ) {",
            "score": 99.38267008463542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false == source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == sourceExcerpt.trim( ) ) {",
            "score": 99.34375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == source CaMeL Ex@@ cer@@ pt . trim ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < warning.length( ) ) {",
            "score": 99.34214154411765,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < warning . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length < charno ) {",
            "score": 99.332763671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == excerpt.length( ) ) {",
            "score": 99.41925370065789,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno < sourceExcerpt.length( ) ) )",
            "score": 99.3892758018092,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0&& charno >= sourceExcerpt.length ) {",
            "score": 99.38229031032986,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 && char@@ no >= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno && charno < sourceExcerpt ) {",
            "score": 99.34265854779412,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) { &&",
            "score": 99.33237591911765,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } if( charno <0) {",
            "score": 99.41922157689145,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; } if( charno <0) {",
            "score": 99.41922157689145,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( char@@ no < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } if( charno <0) {",
            "score": 99.41922157689145,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; } if( charno <0) {",
            "score": 99.41922157689145,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( char@@ no < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } if( charno <0) {",
            "score": 99.41922157689145,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } if ( char@@ no < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) || )",
            "score": 99.50684756324405,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) || )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno( charno ) ) {",
            "score": 99.43746145148026,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !( charno <= sourceExcerpt.length( ) ) ) {",
            "score": 99.41789165296052,
            "correctness": "wrong",
            "tokenized_patch": "&& ! ( char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ) &&",
            "score": 99.38172064887152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno < charno ) ) {",
            "score": 99.34228515625,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > -1) {",
            "score": 99.34087262834821,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&( charno == sourceExcerpt.length( ) ) ) {",
            "score": 99.39674207899306,
            "correctness": "wrong",
            "tokenized_patch": "&& ( char@@ no == source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0++ charno < sourceExcerpt.length( ) )",
            "score": 99.38872931985294,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ++ char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? charno",
            "score": 99.34062643612133,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( sourceExcerpt ) ; } else {",
            "score": 99.3397575827206,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( source CaMeL Ex@@ cer@@ pt ) ; } else {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno && {",
            "score": 99.43475952148438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no && {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && !0) {",
            "score": 99.41619551809211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ! 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno &&0<= sourceExcerpt.length( ) )",
            "score": 99.38870399876645,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) )",
            "score": 99.37887752757354,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && source != null ) {",
            "score": 99.34025304457721,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && source != null ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )( {",
            "score": 99.33975219726562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ( {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno < charno )",
            "score": 99.38424682617188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >0) { b.append( '\\n') ;",
            "score": 99.3400634765625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno >0) { b.append( '| ') ;",
            "score": 99.3400634765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >0) { b.append( ' ') ;",
            "score": 99.3400634765625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno >0) { b.append( '  ') ;",
            "score": 99.3400634765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >0) { b.append( 'bar') ;",
            "score": 99.3400634765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno == sourceExcerpt ) {",
            "score": 99.33955652573529,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length(1) ) {",
            "score": 99.32818962545956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( 1 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( charno ) ;",
            "score": 99.43426513671875,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( charno ) ;",
            "score": 99.43426513671875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( charno ) ;",
            "score": 99.43426513671875,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( charno ) ;",
            "score": 99.43426513671875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( charno ) ;",
            "score": 99.43426513671875,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno ++ <= sourceExcerpt.length( ) ) {",
            "score": 99.41421329273896,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no ++ <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "|| charno != sourceExcerpt.length( ) ) {",
            "score": 99.33946228027344,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && charno <0)",
            "score": 99.381103515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno <0.length( ) ) {",
            "score": 99.37771426930146,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < 0 . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < ! charno ) {",
            "score": 99.37030436197917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno &&0<= charno ) {",
            "score": 99.33736478365384,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < false ) {",
            "score": 99.4335205078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt ) ;",
            "score": 99.37709673713235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno > sourceExcerpt ) {",
            "score": 99.33624626608456,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && false( charno < charno ) ) {",
            "score": 99.3250373391544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false ( char@@ no < char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >=0)",
            "score": 99.50381469726562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno < sourceExcerpt.length( ) )",
            "score": 99.37930118336396,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length( ) {",
            "score": 99.37450453814338,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length(( ) ) )",
            "score": 99.5035733309659,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& &&0<= charno < sourceExcerpt.length( ) ) {",
            "score": 99.38889674136513,
            "correctness": "uncompilable",
            "tokenized_patch": "&& && 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno <= sourceExcerpt.length( ) ) {",
            "score": 99.37342026654412,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < n ) {",
            "score": 99.33302659254808,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < n ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < mode.length( ) ) {",
            "score": 99.32368738511029,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < mode . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& >= charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.42989501953124,
            "correctness": "uncompilable",
            "tokenized_patch": "&& >= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.equals( LINE ) ) {",
            "score": 99.40882065716912,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( charno < sourceExcerpt ) ) {",
            "score": 99.38784950657895,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( -1) )",
            "score": 99.37884880514706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( - 1 ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'.length( ) >0) {",
            "score": 99.3730697631836,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '| '.length( ) >0) {",
            "score": 99.3730697631836,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '.length( ) >0) {",
            "score": 99.3730697631836,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '  '.length( ) >0) {",
            "score": 99.3730697631836,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'.length( ) >0) {",
            "score": 99.3730697631836,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < Character.length( ) ) {",
            "score": 99.36341768152573,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < Character . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( ) ; } else {",
            "score": 99.33440085018383,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )",
            "score": 99.33036586216518,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && true ) {",
            "score": 99.32357967601104,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && true ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno &&0<= charno && sourceExcerpt.length( ) )",
            "score": 99.50352172851562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { } }",
            "score": 99.42918565538194,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno < sourceExcerpt.length ) {",
            "score": 99.3627570657169,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno && charno < charno ) {",
            "score": 99.33389718191964,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 > char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& end < sourceExcerpt.length( ) ) {",
            "score": 99.32993977864584,
            "correctness": "uncompilable",
            "tokenized_patch": "&& end < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.charCount( ) ) {",
            "score": 99.38742404513889,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . char CaMeL Count ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >= sourceExcerpt.length( ) )",
            "score": 99.3767333984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >= charno ) {",
            "score": 99.36238316127232,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") b.append( '\\n') ; else b.append( '\\n') ;",
            "score": 99.33362534466912,
            "correctness": "uncompilable",
            "tokenized_patch": ") b . append ( $STRING$ ) ; else b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") b.append( '| ') ; else b.append( '| ') ;",
            "score": 99.33362534466912,
            "correctness": "uncompilable",
            "tokenized_patch": ") b . append ( $STRING$ ) ; else b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") b.append( ' ') ; else b.append( ' ') ;",
            "score": 99.33362534466912,
            "correctness": "uncompilable",
            "tokenized_patch": ") b . append ( $STRING$ ) ; else b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") b.append( '  ') ; else b.append( '  ') ;",
            "score": 99.33362534466912,
            "correctness": "uncompilable",
            "tokenized_patch": ") b . append ( $STRING$ ) ; else b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") b.append( 'bar') ; else b.append( 'bar') ;",
            "score": 99.33362534466912,
            "correctness": "uncompilable",
            "tokenized_patch": ") b . append ( $STRING$ ) ; else b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno &&0<= charno )",
            "score": 99.32204302619485,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( )",
            "score": 99.50210571289062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && value < sourceExcerpt.length( ) ) {",
            "score": 99.42886962890626,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && value < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) &&0<= charno",
            "score": 99.4053890830592,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && 0 <= char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length ) {",
            "score": 99.3675537109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == charno ) {",
            "score": 99.36166561351104,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( lineNumber ) ; } else {",
            "score": 99.33307291666667,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( line CaMeL Number ) ; } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ) <= LINE ) {",
            "score": 99.32747105189732,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) <= LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno( source ) ) {",
            "score": 99.32073615579044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ( source ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( '\\n') ;",
            "score": 99.50177408854167,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( '| ') ;",
            "score": 99.50177408854167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( ' ') ;",
            "score": 99.50177408854167,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0) { b.append( '  ') ;",
            "score": 99.50177408854167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( 'bar') ;",
            "score": 99.50177408854167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) - -1) {",
            "score": 99.40512566817434,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<< charno < sourceExcerpt.length( ) )",
            "score": 99.37537339154412,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 << char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= sourceExcerpt.length( ) ) {",
            "score": 99.36678059895833,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < source.0) {",
            "score": 99.35917154947917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && false )",
            "score": 99.32031968060662,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && false )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) true ;",
            "score": 99.50164240056819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) true ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length( ) )",
            "score": 99.37347005208333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && <= sourceExcerpt.length ) {",
            "score": 99.3661750344669,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length != ) {",
            "score": 99.3588508157169,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length != ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( ) ; } }",
            "score": 99.33275604248047,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ) != null ) {",
            "score": 99.32589285714286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < filter.length( ) ) {",
            "score": 99.31939338235294,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < filter . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? charno ;",
            "score": 99.37339274088542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.35814711626838,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.mode( ) ) {",
            "score": 99.33198547363281,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . mode ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < charno ) {",
            "score": 99.31904820033482,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno &&0<= sourceExcerpt.length( ) )",
            "score": 99.49999281939338,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno < sourceExcerpt.length( ) )",
            "score": 99.37099322150735,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false && charno < sourceExcerpt.length ) {",
            "score": 99.36498260498047,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0> charno ) {",
            "score": 99.32558969350961,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 > char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( '\\n') ; } b.append( '\\n') ;",
            "score": 99.42715115017361,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } b.append( '| ') ;",
            "score": 99.42715115017361,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } b.append( ' ') ;",
            "score": 99.42715115017361,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } b.append( '  ') ;",
            "score": 99.42715115017361,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } b.append( 'bar') ;",
            "score": 99.42715115017361,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& || charno < sourceExcerpt.length( ) ) {",
            "score": 99.38191492417279,
            "correctness": "uncompilable",
            "tokenized_patch": "&& || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| !0&& charno < sourceExcerpt.length ) {",
            "score": 99.36474609375,
            "correctness": "uncompilable",
            "tokenized_patch": "|| ! 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == sourceExcerpt )",
            "score": 99.33108520507812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == source CaMeL Ex@@ cer@@ pt )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && true ) {",
            "score": 99.318701171875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && true ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( '\\n') ; }",
            "score": 99.49930245535714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( '| ') ; }",
            "score": 99.49930245535714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( ' ') ; }",
            "score": 99.49930245535714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( '  ') ; }",
            "score": 99.49930245535714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) { b.append( 'bar') ; }",
            "score": 99.49930245535714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno < charno",
            "score": 99.4235775596217,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no < char@@ no",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno == '\\n') {",
            "score": 99.39979312294408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno == '| ') {",
            "score": 99.39979312294408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno == ' ') {",
            "score": 99.39979312294408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno == '  ') {",
            "score": 99.39979312294408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && charno == 'bar') {",
            "score": 99.39979312294408,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0/ charno < sourceExcerpt.length( ) ) {",
            "score": 99.38174099392361,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 / char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( -1) ) {",
            "score": 99.36941189236111,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( - 1 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) { {",
            "score": 99.35548618861607,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.end( ) ) {",
            "score": 99.33084869384766,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . end ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno &&0<= charno ) ) {",
            "score": 99.32344563802083,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 <= char@@ no && 0 <= char@@ no ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt == null ) {",
            "score": 99.39971602590461,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt == null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno < sourceExcerpt.length( ) )",
            "score": 99.36916934742646,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.count( ) ) {",
            "score": 99.32865142822266,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . count ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < in.length( ) ) {",
            "score": 99.31705968520221,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < in . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && { {",
            "score": 99.36736701516544,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= sourceExcerpt.length ) ) {",
            "score": 99.3635498046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0] < sourceExcerpt.length( ) ) {",
            "score": 99.35462951660156,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ] < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == null ) {",
            "score": 99.36306762695312,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == null ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > sourceExcerpt.trim( ) ) {",
            "score": 99.32582092285156,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . trim ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( excerpt.equals( LINE ) ) ) {",
            "score": 99.32174246651786,
            "correctness": "plausible",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . equals ( LINE ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno - charno < sourceExcerpt.length( ) ) {",
            "score": 99.38114206414474,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no - char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno < charno && charno < charno )",
            "score": 99.36716595818015,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2) { b.append( '\\n') ; }",
            "score": 99.3226089477539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2) { b.append( '| ') ; }",
            "score": 99.3226089477539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2) { b.append( ' ') ; }",
            "score": 99.3226089477539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2) { b.append( '  ') ; }",
            "score": 99.3226089477539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2) { b.append( 'bar') ; }",
            "score": 99.3226089477539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < $NUMBER$ ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= error.getCharno( ) ) {",
            "score": 99.31965855189732,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= error . get CaMeL Char@@ no ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return ) ;",
            "score": 99.3133316040039,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length( ) >=0)",
            "score": 99.49653764204545,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) >= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt.length( ) ] ) ) {",
            "score": 99.39785927220395,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ] ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && excerpt.equals( LINE ) )",
            "score": 99.36631774902344,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > sourceExcerpt )",
            "score": 99.32202911376953,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > source CaMeL Ex@@ cer@@ pt )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) && )",
            "score": 99.49567522321429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt ) { {",
            "score": 99.42112972861842,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == false ) {",
            "score": 99.36251831054688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && && charno < charno ) {",
            "score": 99.35315755208333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt [ charno ] ) {",
            "score": 99.32183837890625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt [ char@@ no ] ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno &&0<= charno ) {",
            "score": 99.31800255408653,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) <= ) {",
            "score": 99.31099446614583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) <= ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length( ) ) { else",
            "score": 99.49480646306819,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { else",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) <=0)",
            "score": 99.36626790364583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < '\\n') {",
            "score": 99.3212139423077,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $STRING$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < '| ') {",
            "score": 99.3212139423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < ' ') {",
            "score": 99.3212139423077,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $STRING$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < '  ') {",
            "score": 99.3212139423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < 'bar') {",
            "score": 99.3212139423077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > length ) {",
            "score": 99.31783353365384,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) )",
            "score": 99.49460177951389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <2) {",
            "score": 99.31966145833333,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <11) {",
            "score": 99.31966145833333,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <10) {",
            "score": 99.31966145833333,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <9) {",
            "score": 99.31966145833333,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <2007) {",
            "score": 99.31966145833333,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& false <= sourceExcerpt.length( ) ) {",
            "score": 99.3177734375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) */",
            "score": 99.30802408854167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) * /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( '\\n') ; }",
            "score": 99.417724609375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( '| ') ; }",
            "score": 99.417724609375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( ' ') ; }",
            "score": 99.417724609375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( '  ') ; }",
            "score": 99.417724609375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( 'bar') ; }",
            "score": 99.417724609375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && || charno < charno ) {",
            "score": 99.3495849609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && || char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != sourceExcerpt )",
            "score": 99.31868743896484,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != source CaMeL Ex@@ cer@@ pt )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= CheckLevel.ERROR ) {",
            "score": 99.31686401367188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno && false ) {",
            "score": 99.41696006373355,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0*charno < sourceExcerpt.length( ) )",
            "score": 99.36357565487133,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 * char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < options.length ) {",
            "score": 99.35911458333334,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < options . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( source ) ; }",
            "score": 99.31756591796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( source ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source.length( ) <=0) {",
            "score": 99.3067855834961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && charno < charno &&",
            "score": 99.41676089638158,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && char@@ no < char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < sourceExcerpt ) ;",
            "score": 99.35873592601104,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) - {",
            "score": 99.31730651855469,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< error.length( ) ) {",
            "score": 99.31346893310547,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < error . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno - sourceExcerpt.length( ) ) {",
            "score": 99.49028087797619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no - source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno &&0<= charno )",
            "score": 99.36213514539931,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length - ) {",
            "score": 99.34820915670956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length - ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } } else {",
            "score": 99.31666782924107,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } } else {",
            "score": 99.31666782924107,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } } else {",
            "score": 99.31666782924107,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } } else {",
            "score": 99.31666782924107,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } } else {",
            "score": 99.31666782924107,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && ) {",
            "score": 99.31089564732143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno <0) {",
            "score": 99.30551583426339,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno < charno && sourceExcerpt.length( ) ) ) {",
            "score": 99.48967633928571,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >= sourceExcerpt.equals( LINE ) ) {",
            "score": 99.39375574448529,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no >= source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0>= sourceExcerpt.length )",
            "score": 99.3570556640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 >= source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { *",
            "score": 99.34774959788604,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { *",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { { b.append( '\\n') ;",
            "score": 99.31071472167969,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { { b.append( '| ') ;",
            "score": 99.31071472167969,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { { b.append( ' ') ;",
            "score": 99.31071472167969,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { { b.append( '  ') ;",
            "score": 99.31071472167969,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { { b.append( 'bar') ;",
            "score": 99.31071472167969,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno !=2) {",
            "score": 99.30372971754808,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno !=11) {",
            "score": 99.30372971754808,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno !=10) {",
            "score": 99.30372971754808,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno !=9) {",
            "score": 99.30372971754808,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno !=2007) {",
            "score": 99.30372971754808,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno && sourceExcerpt.length( ) >0)",
            "score": 99.48948759191177,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < < sourceExcerpt.length( ) ) {",
            "score": 99.41257611443015,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= this.sourceExcerpt.length( ) ) {",
            "score": 99.37410242417279,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= this . source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0, charno < sourceExcerpt.length( ) )",
            "score": 99.36077521829044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 , char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < end ) {",
            "score": 99.3025371844952,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < end ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { else {",
            "score": 99.41213650173611,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno -- <= sourceExcerpt.length( ) ) {",
            "score": 99.39348288143383,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no -- <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0!= charno < sourceExcerpt.length( ) )",
            "score": 99.36069623161765,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && < sourceExcerpt.length ) {",
            "score": 99.35595703125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < sourceExcerpt.length( )",
            "score": 99.30929565429688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && && charno < charno ) {",
            "score": 99.30158996582031,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0<= sourceExcerpt.length( ) ) {",
            "score": 99.48874918619792,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno &&0< sourceExcerpt.length ) {",
            "score": 99.3551887063419,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno( charno ) ) {",
            "score": 99.3467658547794,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>> < sourceExcerpt.length( ) ) {",
            "score": 99.3089370727539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >> < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2&& charno <0) {",
            "score": 99.30150428185097,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <11&& charno <0) {",
            "score": 99.30150428185097,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <10&& charno <0) {",
            "score": 99.30150428185097,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <9&& charno <0) {",
            "score": 99.30150428185097,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <2007&& charno <0) {",
            "score": 99.30150428185097,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <2|| charno <2) {",
            "score": 99.37152777777777,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ || char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <11|| charno <11) {",
            "score": 99.37152777777777,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ || char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <10|| charno <10) {",
            "score": 99.37152777777777,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ || char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <9|| charno <9) {",
            "score": 99.37152777777777,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ || char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno <2007|| charno <2007) {",
            "score": 99.37152777777777,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ || char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length( ) ||",
            "score": 99.35495174632354,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ||",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0] <= sourceExcerpt.length( ) ) {",
            "score": 99.3449935913086,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ] <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno == sourceExcerpt.lineNumber ) {",
            "score": 99.31441497802734,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > count ) {",
            "score": 99.30887545072116,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > count ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length < charno ) {",
            "score": 99.30099923270089,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.3702456825658,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0&& charno < sourceExcerpt.length( ) )",
            "score": 99.35884363511029,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||(0<= sourceExcerpt.length( ) ) ) {",
            "score": 99.3524528952206,
            "correctness": "plausible",
            "tokenized_patch": "|| ( 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno &&0<= charno ) {",
            "score": 99.34477887834821,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) }",
            "score": 99.31379699707031,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && error.sourceName != null ) {",
            "score": 99.30880737304688,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && error . source CaMeL Name != null ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return false ;",
            "score": 99.30001068115234,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return false ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/( charno && charno < sourceExcerpt.length( ) ) ) {",
            "score": 99.48761858258929,
            "correctness": "uncompilable",
            "tokenized_patch": "/ ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { {",
            "score": 99.40872896634616,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ,0) {",
            "score": 99.38876003689236,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) , 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "? charno : charno < sourceExcerpt.length( ) )",
            "score": 99.35881212022569,
            "correctness": "uncompilable",
            "tokenized_patch": "? char@@ no : char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { ) ;",
            "score": 99.34415435791016,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= b.length( ) ) {",
            "score": 99.30864715576172,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= b . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && this.sourceExcerpt.length( ) ) {",
            "score": 99.48709106445312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && this . source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.has( LINE ) ) {",
            "score": 99.38795381433823,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . has ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) + '\\n') {",
            "score": 99.35831027560764,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $STRING$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) + '| ') {",
            "score": 99.35831027560764,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) + ' ') {",
            "score": 99.35831027560764,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $STRING$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) + '  ') {",
            "score": 99.35831027560764,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) + 'bar') {",
            "score": 99.35831027560764,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt.length ) {",
            "score": 99.35240263097427,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt , charno ) {",
            "score": 99.34405876608456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt , char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno ) { b.append( '\\n') ; }",
            "score": 99.31230926513672,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno ) { b.append( '| ') ; }",
            "score": 99.31230926513672,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno ) { b.append( ' ') ; }",
            "score": 99.31230926513672,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno ) { b.append( '  ') ; }",
            "score": 99.31230926513672,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0> charno ) { b.append( 'bar') ; }",
            "score": 99.31230926513672,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 > char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < this.LINE ) {",
            "score": 99.30799967447916,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( error.description ) ; b.append( '\\n') ;",
            "score": 99.40586451480263,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( error.description ) ; b.append( '| ') ;",
            "score": 99.40586451480263,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( error.description ) ; b.append( ' ') ;",
            "score": 99.40586451480263,
            "correctness": "wrong",
            "tokenized_patch": ") { b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( error.description ) ; b.append( '  ') ;",
            "score": 99.40586451480263,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( error.description ) ; b.append( 'bar') ;",
            "score": 99.40586451480263,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( error . description ) ; b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno ==0) {",
            "score": 99.35210712139423,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && source.length( ) < charno ) {",
            "score": 99.34348431755515,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . length ( ) < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source.length( )",
            "score": 99.30548502604167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return '\\n'{",
            "score": 99.29835510253906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return '| '{",
            "score": 99.29835510253906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return ' '{",
            "score": 99.29835510253906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return '  '{",
            "score": 99.29835510253906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return 'bar'{",
            "score": 99.29835510253906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return $STRING$ {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) /1) {",
            "score": 99.38576931423611,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) / 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& short <= sourceExcerpt.length( ) ) {",
            "score": 99.368994140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& short <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0int charno < sourceExcerpt.length( ) )",
            "score": 99.35749368106617,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 int char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& true && charno < sourceExcerpt.length ) {",
            "score": 99.35186767578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& true && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt.length > ) ;",
            "score": 99.34340533088235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length > ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno( sourceExcerpt ) ) {",
            "score": 99.29631042480469,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE < charno && charno < sourceExcerpt.length( ) ) {",
            "score": 99.48443312872024,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; b.append( charno ) ; }",
            "score": 99.40288342927632,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( char@@ no ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; b.append( charno ) ; }",
            "score": 99.40288342927632,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( char@@ no ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; b.append( charno ) ; }",
            "score": 99.40288342927632,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( char@@ no ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; b.append( charno ) ; }",
            "score": 99.40288342927632,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( char@@ no ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; b.append( charno ) ; }",
            "score": 99.40288342927632,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; b . append ( char@@ no ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno &&0<= sourceExcerpt.length ) {",
            "score": 99.35184972426471,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) { b.append( ) ; }",
            "score": 99.3086181640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) { b . append ( ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > isWhitespace ) {",
            "score": 99.30350748697917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > is CaMeL Whitespace ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2)",
            "score": 99.29624430338542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <11)",
            "score": 99.29624430338542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <10)",
            "score": 99.29624430338542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <9)",
            "score": 99.29624430338542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2007)",
            "score": 99.29624430338542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( sourceExcerpt.length( ) >0) )",
            "score": 99.484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ( source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < '\\n') {",
            "score": 99.38484700520833,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $STRING$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < '| ') {",
            "score": 99.38484700520833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < ' ') {",
            "score": 99.38484700520833,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $STRING$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < '  ') {",
            "score": 99.38484700520833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno < 'bar') {",
            "score": 99.38484700520833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0< sourceExcerpt.length ) ) {",
            "score": 99.35183919270834,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= sourceExcerpt ) {",
            "score": 99.34297943115234,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno( sourceExcerpt ) ) {",
            "score": 99.30314127604167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length length( ) ) {",
            "score": 99.40158260569854,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < names.length( ) ) {",
            "score": 99.36606014476104,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < names . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != null )",
            "score": 99.35171712239584,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno && charno < charno ) {",
            "score": 99.34288832720588,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.length -1) {",
            "score": 99.30653381347656,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length - 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= description.length( ) ) {",
            "score": 99.30281829833984,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= description . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno &&0<= sourceExcerpt.length( ) ) ) {",
            "score": 99.48396606445313,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ++( ) ) {",
            "score": 99.38374597886029,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ++ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < CheckLevel.ERROR )",
            "score": 99.3548943014706,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < Check CaMeL Level . ERROR )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno <0) {",
            "score": 99.3485576923077,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt , charno ) {",
            "score": 99.30340983072917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt , char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>> isWhitespace( sourceExcerpt ) ) {",
            "score": 99.30270385742188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >> is CaMeL Whitespace ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) <0) {",
            "score": 99.29344177246094,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < <= sourceExcerpt.length( ) ) {",
            "score": 99.39839441636029,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== charno < sourceExcerpt.length( ) ) {",
            "score": 99.35486518012152,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 == char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0&&0<= sourceExcerpt.length ) {",
            "score": 99.34758758544922,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 && 0 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.lineNumber ) {",
            "score": 99.30294036865234,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && true ) {",
            "score": 99.29267120361328,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < getLevelName( sourceExcerpt ) )",
            "score": 99.35483805338542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < get CaMeL Level CaMeL Name ( source CaMeL Ex@@ cer@@ pt ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == length ) {",
            "score": 99.34707641601562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) > charno ) {",
            "score": 99.30201721191406,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) > char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) && true )",
            "score": 99.29254150390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) && true )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <0)",
            "score": 99.48234252929687,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.contains( LINE ) )",
            "score": 99.35354614257812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . contains ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && sourceExcerpt.length( ) {",
            "score": 99.34567440257354,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { { ) ;",
            "score": 99.34089929917279,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) <=1) {",
            "score": 99.29241943359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) <= 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { { }",
            "score": 99.39546034071181,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { { }",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < getCharno( sourceExcerpt ) )",
            "score": 99.35314223345588,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < get CaMeL Char@@ no ( source CaMeL Ex@@ cer@@ pt ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& count <= sourceExcerpt.length( ) ) {",
            "score": 99.30107421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& count <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno ) {",
            "score": 99.30049896240234,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& warning && charno < sourceExcerpt.length( ) ) {",
            "score": 99.38031005859375,
            "correctness": "wrong",
            "tokenized_patch": "&& warning && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( charno <= sourceExcerpt.length( ) ) )",
            "score": 99.35279756433823,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >=0.length( ) ) {",
            "score": 99.34486299402573,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= 0 . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >0) { b.append( '\\n') ; }",
            "score": 99.29957580566406,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >0) { b.append( '| ') ; }",
            "score": 99.29957580566406,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >0) { b.append( ' ') ; }",
            "score": 99.29957580566406,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >0) { b.append( '  ') ; }",
            "score": 99.29957580566406,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >0) { b.append( 'bar') ; }",
            "score": 99.29957580566406,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno <= charno ) {",
            "score": 99.29146321614583,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&( sourceExcerpt.length( ) >0) ) {",
            "score": 99.48156020220588,
            "correctness": "plausible",
            "tokenized_patch": "&& ( source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "? excerpt.equals( LINE ) : CheckLevel.ERROR ) {",
            "score": 99.39067247178819,
            "correctness": "uncompilable",
            "tokenized_patch": "? ex@@ cer@@ pt . equals ( LINE ) : Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( LINE ) ) { {",
            "score": 99.37887912326389,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <.length( ) ) {",
            "score": 99.36055755615234,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt !=2) {",
            "score": 99.33915710449219,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt !=11) {",
            "score": 99.33915710449219,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt !=10) {",
            "score": 99.33915710449219,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt !=9) {",
            "score": 99.33915710449219,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt !=2007) {",
            "score": 99.33915710449219,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= isWhitespace( sourceExcerpt ) ) {",
            "score": 99.29972839355469,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= is CaMeL Whitespace ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <1) { b.append( '\\n') ; }",
            "score": 99.29933166503906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 1 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <1) { b.append( '| ') ; }",
            "score": 99.29933166503906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 1 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <1) { b.append( ' ') ; }",
            "score": 99.29933166503906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 1 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <1) { b.append( '  ') ; }",
            "score": 99.29933166503906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 1 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <1) { b.append( 'bar') ; }",
            "score": 99.29933166503906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 1 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.48076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.48076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.48076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.48076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.48076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { if( charno < sourceExcerpt.length ) {",
            "score": 99.37762810202206,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && }",
            "score": 99.3515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'.length( ) <=0) {",
            "score": 99.34113311767578,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '| '.length( ) <=0) {",
            "score": 99.34113311767578,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '.length( ) <=0) {",
            "score": 99.34113311767578,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '  '.length( ) <=0) {",
            "score": 99.34113311767578,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'.length( ) <=0) {",
            "score": 99.34113311767578,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno != sourceExcerpt.lineNumber ) {",
            "score": 99.29700469970703,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no != source CaMeL Ex@@ cer@@ pt . line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= source.length( ) ) {",
            "score": 99.29598236083984,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && ! charno && charno < charno ) {",
            "score": 99.38774671052632,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && ! char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno && charno <0)",
            "score": 99.35005457261029,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && char@@ no < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0) { b.append( '\\n') ; }",
            "score": 99.29667154947917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0) { b.append( '| ') ; }",
            "score": 99.29667154947917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0) { b.append( ' ') ; }",
            "score": 99.29667154947917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0) { b.append( '  ') ; }",
            "score": 99.29667154947917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0) { b.append( 'bar') ; }",
            "score": 99.29667154947917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > -2) {",
            "score": 99.29576764787946,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > - $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > -11) {",
            "score": 99.29576764787946,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > - $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > -10) {",
            "score": 99.29576764787946,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > - $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > -9) {",
            "score": 99.29576764787946,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > - $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno > -2007) {",
            "score": 99.29576764787946,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > - $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && ! excerpt.equals( LINE ) ) {",
            "score": 99.37647840711806,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ! ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "||0&& charno < sourceExcerpt.length ) {",
            "score": 99.33883666992188,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno < charno ) {",
            "score": 99.33248138427734,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) >1) {",
            "score": 99.29647064208984,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) > 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>> <= sourceExcerpt.length( ) ) {",
            "score": 99.2941665649414,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >> <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno != charno ) {",
            "score": 99.288916015625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { b.append( lineNumber ) ; }",
            "score": 99.29441481370192,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( line CaMeL Number ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE.length( ) ) ) {",
            "score": 99.29408264160156,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) !=0) {",
            "score": 99.28877258300781,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) != 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt ) ;",
            "score": 99.33796909877232,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) ;",
            "score": 99.3300311748798,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt + charno ) {",
            "score": 99.29375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt + char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno = sourceExcerpt.length( ) ) {",
            "score": 99.47642299107143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no = source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <( sourceExcerpt.length( ) ) ) {",
            "score": 99.37395562065973,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= < sourceExcerpt.length( ) ) {",
            "score": 99.33690643310547,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) { ) {",
            "score": 99.32982584635417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.description.length( ) >0) {",
            "score": 99.2915508563702,
            "correctness": "plausible",
            "tokenized_patch": "&& error . description . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno ) { b.append( '\\n') ; }",
            "score": 99.2911376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno ) { b.append( '| ') ; }",
            "score": 99.2911376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno ) { b.append( ' ') ; }",
            "score": 99.2911376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno ) { b.append( '  ') ; }",
            "score": 99.2911376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno ) { b.append( 'bar') ; }",
            "score": 99.2911376953125,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) { {",
            "score": 99.2871322631836,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "int charno && charno < sourceExcerpt.length( ) )",
            "score": 99.47615559895833,
            "correctness": "uncompilable",
            "tokenized_patch": "int char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !( charno < sourceExcerpt.length ) ) {",
            "score": 99.37321920955883,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0? charno < sourceExcerpt.length( ) ;",
            "score": 99.3466796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ? char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { &&0<= sourceExcerpt.length( ) {",
            "score": 99.33435821533203,
            "correctness": "uncompilable",
            "tokenized_patch": ") { && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length ) { { {",
            "score": 99.32913208007812,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ) { { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( lineNumber ) ; } } else {",
            "score": 99.29014587402344,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( line CaMeL Number ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length ) {",
            "score": 99.286865234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) *1) {",
            "score": 99.37232801649306,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) * 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0.equals( sourceExcerpt.length( ) ) ) {",
            "score": 99.35498046875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 . equals ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( excerpt.length( ) >0) ) {",
            "score": 99.29070638020833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( ex@@ cer@@ pt . length ( ) > 0 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < ! sourceExcerpt.length( ) )",
            "score": 99.3441390991211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ! source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { &&0<= sourceExcerpt.length( ) ;",
            "score": 99.33321380615234,
            "correctness": "uncompilable",
            "tokenized_patch": ") { && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0< charno ) {",
            "score": 99.32747977120536,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0>= charno &&0<= charno ) {",
            "score": 99.29053673377403,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt ) {",
            "score": 99.28964233398438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno )",
            "score": 99.28509521484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0) { b.append( sourceExcerpt ) ;",
            "score": 99.47536749588816,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 ) { b . append ( source CaMeL Ex@@ cer@@ pt ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno < charno && false ) {",
            "score": 99.37843951056985,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length1( ) ) {",
            "score": 99.3691765280331,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length 1 ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>> > sourceExcerpt.length( ) ) {",
            "score": 99.35456085205078,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >> > source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < max ) {",
            "score": 99.29021747295673,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < max ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0< sourceExcerpt.length( ) ) {",
            "score": 99.28457641601562,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ==0)",
            "score": 99.34334070542279,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) == 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0.length ) {",
            "score": 99.33101399739583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= != sourceExcerpt.length( ) ) {",
            "score": 99.32630157470703,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno ;",
            "score": 99.28895568847656,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) > ) {",
            "score": 99.28705240885417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= <= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.47499302455357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) + '\\n')",
            "score": 99.34236414292279,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $STRING$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) + '| ')",
            "score": 99.34236414292279,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $STRING$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) + ' ')",
            "score": 99.34236414292279,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $STRING$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) + '  ')",
            "score": 99.34236414292279,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $STRING$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) + 'bar')",
            "score": 99.34236414292279,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) + $STRING$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) { ) ;",
            "score": 99.325732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| sourceExcerpt.length( ) <=0) {",
            "score": 99.28394368489583,
            "correctness": "plausible",
            "tokenized_patch": "|| source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! error.sourceExcerpt.equals( LINE ) ) {",
            "score": 99.36565803079044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! error . source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( )( ) <=0)",
            "score": 99.34201049804688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) ( ) <= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length ) { ) {",
            "score": 99.3253402709961,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'.equals( charno ) ) {",
            "score": 99.2865982055664,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . equals ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '| '.equals( charno ) ) {",
            "score": 99.2865982055664,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . equals ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '.equals( charno ) ) {",
            "score": 99.2865982055664,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . equals ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '  '.equals( charno ) ) {",
            "score": 99.2865982055664,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . equals ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'.equals( charno ) ) {",
            "score": 99.2865982055664,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . equals ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '\\n') ; } }",
            "score": 99.28564453125,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '| ') ; } }",
            "score": 99.28564453125,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ' ') ; } }",
            "score": 99.28564453125,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( '  ') ; } }",
            "score": 99.28564453125,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( 'bar') ; } }",
            "score": 99.28564453125,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( $STRING$ ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno <1) {",
            "score": 99.28315080915179,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "int charno &&0<= charno && sourceExcerpt.length( ) ) {",
            "score": 99.4745861235119,
            "correctness": "uncompilable",
            "tokenized_patch": "int char@@ no && 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( )( ) ) {",
            "score": 99.36034478081598,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno >= sourceExcerpt.length( ) ) )",
            "score": 99.34142348345588,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no >= source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= sourceExcerpt.length( ) ) {",
            "score": 99.33008626302083,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { )",
            "score": 99.3239013671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ) != LINE ) {",
            "score": 99.28506905691964,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) != LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && true ) {",
            "score": 99.28253173828125,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && true ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno && sourceExcerpt.length >0) {",
            "score": 99.47416759672619,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no && source CaMeL Ex@@ cer@@ pt . length > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE && charno < sourceExcerpt.length( ) ) {",
            "score": 99.36971028645833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0] < sourceExcerpt.length( ) )",
            "score": 99.33848470052084,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 ] < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { { {",
            "score": 99.32342529296875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno < charno ) {",
            "score": 99.28497314453125,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) { }",
            "score": 99.28467668805804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < source.length ) {",
            "score": 99.28112030029297,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno <",
            "score": 99.36822868795956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no <",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= excerpt.length( ) )",
            "score": 99.33814194623162,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno ) {",
            "score": 99.3213778409091,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt != null ) {",
            "score": 99.28397042410714,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno ) continue ;",
            "score": 99.28022766113281,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno *charno < sourceExcerpt.length( ) ) {",
            "score": 99.47377415707237,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no * char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno < charno && charno < charno ) {",
            "score": 99.36802164713542,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length2( ) ) {",
            "score": 99.35880773207721,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length11( ) ) {",
            "score": 99.35880773207721,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length10( ) ) {",
            "score": 99.35880773207721,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length9( ) ) {",
            "score": 99.35880773207721,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length2007( ) ) {",
            "score": 99.35880773207721,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length $NUMBER$ ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= ! sourceExcerpt.length( ) )",
            "score": 99.33802083333333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ! source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt !=1) {",
            "score": 99.32054901123047,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ) <= charno ) {",
            "score": 99.28388671875,
            "correctness": "plausible",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno == '\\n') {",
            "score": 99.2827617938702,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == $STRING$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno == '| ') {",
            "score": 99.2827617938702,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == ' ') {",
            "score": 99.2827617938702,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == $STRING$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno == '  ') {",
            "score": 99.2827617938702,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == 'bar') {",
            "score": 99.2827617938702,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno == charno ) {",
            "score": 99.27860514322917,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no == char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&(0< charno && charno < charno ) ) {",
            "score": 99.32637023925781,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 < char@@ no && char@@ no < char@@ no ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) { )",
            "score": 99.32000732421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) { )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= charno && charno < charno ) {",
            "score": 99.28216145833333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( excerpt.length( ) ) ) {",
            "score": 99.36695014105902,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source ) ;",
            "score": 99.32632211538461,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < source , charno ) ;",
            "score": 99.31942749023438,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source , char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0== charno ) {",
            "score": 99.28323129507211,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 == char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno > sourceExcerpt.length ) {",
            "score": 99.27489362444196,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) <=0)",
            "score": 99.4707275390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0== sourceExcerpt.length( ) ) {",
            "score": 99.335693359375,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 == source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != ) ;",
            "score": 99.32591145833334,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) ;",
            "score": 99.3188247680664,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0-- charno < sourceExcerpt.length( ) )",
            "score": 99.3351189108456,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 -- char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt != true ) {",
            "score": 99.31761169433594,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt != true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < source.length( ) ) {",
            "score": 99.28218296595982,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < locale.length ) {",
            "score": 99.27630208333333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < locale . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && sourceExcerpt.length( ) ) )",
            "score": 99.4681396484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno ) charno ++ ;",
            "score": 99.36329481336806,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) char@@ no ++ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length && LINE ) {",
            "score": 99.35589599609375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length && LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= sourceExcerpt.length( ) ) )",
            "score": 99.334716796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno( charno ) ) {",
            "score": 99.31736246744792,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( charno && charno < sourceExcerpt.length( ) )",
            "score": 99.46783768503289,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length",
            "score": 99.34475528492646,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) <=0) {",
            "score": 99.33460411658653,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0&& charno < sourceExcerpt.length )",
            "score": 99.31869506835938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > error.getCharno( ) ) {",
            "score": 99.28006998697917,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > error . get CaMeL Char@@ no ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=1) {",
            "score": 99.27569173177083,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { b.append( lineNumber ) ; } }",
            "score": 99.27068219866071,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( line CaMeL Number ) ; } }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt.length(",
            "score": 99.34430609809027,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length (",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno <0) ) {",
            "score": 99.31866048177083,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < 0 ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < source ,0) {",
            "score": 99.31443684895834,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source , 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) ==0) {",
            "score": 99.27950345552884,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno !=2) {",
            "score": 99.27566964285714,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno !=11) {",
            "score": 99.27566964285714,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno !=10) {",
            "score": 99.27566964285714,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno !=9) {",
            "score": 99.27566964285714,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno !=2007) {",
            "score": 99.27566964285714,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& ! charno ) { b.append( '\\n') ; }",
            "score": 99.26529134114584,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno ) { b.append( '| ') ; }",
            "score": 99.26529134114584,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno ) { b.append( ' ') ; }",
            "score": 99.26529134114584,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno ) { b.append( '  ') ; }",
            "score": 99.26529134114584,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno ) { b.append( 'bar') ; }",
            "score": 99.26529134114584,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no ) { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( charno ) )",
            "score": 99.33356789981617,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( char@@ no ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno <1) {",
            "score": 99.3143310546875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) continue ;",
            "score": 99.275634765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) continue ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt == null ) {",
            "score": 99.26425606863839,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt == null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= excerpt.length( ) ) { b.append( '\\n') ;",
            "score": 99.46663818359374,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= excerpt.length( ) ) { b.append( '| ') ;",
            "score": 99.46663818359374,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= excerpt.length( ) ) { b.append( ' ') ;",
            "score": 99.46663818359374,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= excerpt.length( ) ) { b.append( '  ') ;",
            "score": 99.46663818359374,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= excerpt.length( ) ) { b.append( 'bar') ;",
            "score": 99.46663818359374,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . length ( ) ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& excerpt.equals( LINE ) ) {",
            "score": 99.34932215073529,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0!= charno < sourceExcerpt.length( ) ) {",
            "score": 99.34292263454861,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 != char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0|| charno < sourceExcerpt.length( ) )",
            "score": 99.33317296645221,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= LINE ) {",
            "score": 99.278076171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) <=2) {",
            "score": 99.27433013916016,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) <=11) {",
            "score": 99.27433013916016,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) <=10) {",
            "score": 99.27433013916016,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) <=9) {",
            "score": 99.27433013916016,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) <=2007) {",
            "score": 99.27433013916016,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) <= $NUMBER$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& end <= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.46630249023437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& end <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < NaN ) {",
            "score": 99.34058430989583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < Na CaMeL N ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -0)",
            "score": 99.33294318704044,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= error.sourceName.length( ) ) {",
            "score": 99.2772216796875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= error . source CaMeL Name . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && false && charno < charno ) {",
            "score": 99.27363586425781,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && false && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < sourceExcerpt != length( ) )",
            "score": 99.46585693359376,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt != length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < excerpt.length ) {",
            "score": 99.34731876148896,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.equals( LINE ) )",
            "score": 99.33177083333334,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'.length( ) ==0) {",
            "score": 99.314208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '| '.length( ) ==0) {",
            "score": 99.314208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '.length( ) ==0) {",
            "score": 99.314208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '  '.length( ) ==0) {",
            "score": 99.314208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'.length( ) ==0) {",
            "score": 99.314208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) == 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < this.charno ) ;",
            "score": 99.30854797363281,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.equals( LINE ) ) {",
            "score": 99.27667236328125,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < charno ) return null ;",
            "score": 99.27276611328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) return null ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno != null ) {",
            "score": 99.25619741586539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && charno ) {",
            "score": 99.35970052083333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& < charno < sourceExcerpt.length( ) ) {",
            "score": 99.33972886029412,
            "correctness": "uncompilable",
            "tokenized_patch": "&& < char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& false && charno < sourceExcerpt.length( ) )",
            "score": 99.3297119140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& false && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.sourceName.length( ) >0) {",
            "score": 99.27605794270833,
            "correctness": "plausible",
            "tokenized_patch": "&& error . source CaMeL Name . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <=0) { {",
            "score": 99.27266693115234,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= 0 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && charno < sourceExcerpt ) {",
            "score": 99.2557861328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& sourceExcerpt.length( ) >0)",
            "score": 99.4655825966283,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno ) { ) {",
            "score": 99.35890826056985,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) { ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && LINE )",
            "score": 99.32875689338235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && LINE )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < true ) {",
            "score": 99.27229527064732,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| charno < sourceExcerpt.length( ) )",
            "score": 99.25552571614584,
            "correctness": "uncompilable",
            "tokenized_patch": "|| char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno && sourceExcerpt.length( ) >0) )",
            "score": 99.46380293996711,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno ) { b.append( '\\n') ;",
            "score": 99.35832977294922,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno ) { b.append( '| ') ;",
            "score": 99.35832977294922,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno ) { b.append( ' ') ;",
            "score": 99.35832977294922,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno ) { b.append( '  ') ;",
            "score": 99.35832977294922,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno ) { b.append( 'bar') ;",
            "score": 99.35832977294922,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0< sourceExcerpt.length( ) ) {",
            "score": 99.3103271484375,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno || charno < charno ) {",
            "score": 99.27173723493304,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no || char@@ no < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& excerpt.length( ) >0) b.append( '\\n') ;",
            "score": 99.4637451171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) b.append( '| ') ;",
            "score": 99.4637451171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) b.append( ' ') ;",
            "score": 99.4637451171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) b.append( '  ') ;",
            "score": 99.4637451171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >0) b.append( 'bar') ;",
            "score": 99.4637451171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) > 0 ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { private",
            "score": 99.33952062270221,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { private",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0<= charno && charno <2) ) {",
            "score": 99.33734537760417,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < $NUMBER$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&(0<= charno && charno <11) ) {",
            "score": 99.33734537760417,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < $NUMBER$ ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&(0<= charno && charno <10) ) {",
            "score": 99.33734537760417,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < $NUMBER$ ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&(0<= charno && charno <9) ) {",
            "score": 99.33734537760417,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < $NUMBER$ ) ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&(0<= charno && charno <2007) ) {",
            "score": 99.33734537760417,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no < $NUMBER$ ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -2)",
            "score": 99.32816808363971,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -11)",
            "score": 99.32816808363971,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -10)",
            "score": 99.32816808363971,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -9)",
            "score": 99.32816808363971,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) -2007)",
            "score": 99.32816808363971,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) - $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { charno = error.getCharno( ) ;",
            "score": 99.27272135416666,
            "correctness": "plausible",
            "tokenized_patch": ") { char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) >1)",
            "score": 99.46366577148437,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) > 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && ! charno < charno ) {",
            "score": 99.35514831542969,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && ! char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length.length( ) ) {",
            "score": 99.33624267578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) )",
            "score": 99.3269375887784,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt ==1) {",
            "score": 99.30921173095703,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == 1 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno >2) {",
            "score": 99.25233811598558,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno >11) {",
            "score": 99.25233811598558,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno >10) {",
            "score": 99.25233811598558,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno >9) {",
            "score": 99.25233811598558,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno >2007) {",
            "score": 99.25233811598558,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "if( charno < sourceExcerpt.length( ) ) {",
            "score": 99.46338608685662,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno ) { }",
            "score": 99.353271484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < LINE ) {",
            "score": 99.33710186298077,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno < sourceExcerpt.length( ) ) {",
            "score": 99.33525933159723,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 >= char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ).length( ) >0)",
            "score": 99.32566923253677,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) . length ( ) > 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=2) {",
            "score": 99.268310546875,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=11) {",
            "score": 99.268310546875,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=10) {",
            "score": 99.268310546875,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=9) {",
            "score": 99.268310546875,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) >=2007) {",
            "score": 99.268310546875,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) >= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno != -1) {",
            "score": 99.25230189732143,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != - 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { int charno ;",
            "score": 99.4629638671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { int char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals(0) ) {",
            "score": 99.33547794117646,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( 0 ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { ) /",
            "score": 99.29893493652344,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { ) /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < this.'\\n') {",
            "score": 99.271240234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < this.'| ') {",
            "score": 99.271240234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < this.' ') {",
            "score": 99.271240234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < this.'  ') {",
            "score": 99.271240234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < this.'bar') {",
            "score": 99.271240234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < this . $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno > charno ) {",
            "score": 99.25186593191964,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno ;",
            "score": 99.2705586751302,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <1) {",
            "score": 99.26393229166666,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) < 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&(0<= charno && charno >0) ) {",
            "score": 99.25140787760417,
            "correctness": "plausible",
            "tokenized_patch": "&& ( 0 <= char@@ no && char@@ no > 0 ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length , charno ) {",
            "score": 99.33386948529412,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length , char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno( sourceExcerpt ) )",
            "score": 99.32517903645834,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ( source CaMeL Ex@@ cer@@ pt ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == ) {",
            "score": 99.30568033854166,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= sourceExcerpt.length( ) ) )",
            "score": 99.29754638671875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< excerpt.length( ) ) {",
            "score": 99.27001014122597,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < lineNumber ) {",
            "score": 99.24951985677083,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < line CaMeL Number ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE || charno < sourceExcerpt.length( ) ) {",
            "score": 99.35059950086806,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ] ) ) {",
            "score": 99.33375459558823,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ] ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == true ) {",
            "score": 99.30555725097656,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == true ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < source ) {",
            "score": 99.26207624162946,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) b.append( '\\n') ; }",
            "score": 99.24646809895833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) b.append( '| ') ; }",
            "score": 99.24646809895833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) b.append( ' ') ; }",
            "score": 99.24646809895833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) b.append( '  ') ; }",
            "score": 99.24646809895833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) b.append( 'bar') ; }",
            "score": 99.24646809895833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( )( ) <=0)",
            "score": 99.32296316964286,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) ( ) <= 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source.0< charno ) {",
            "score": 99.29674479166667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source . 0 < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "|| charno < charno && charno < charno ) {",
            "score": 99.261669921875,
            "correctness": "plausible",
            "tokenized_patch": "|| char@@ no < char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt length( ) ) {",
            "score": 99.2453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < declarations.length( ) ) {",
            "score": 99.32847684972427,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < declarations . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= <= sourceExcerpt.length( ) ) {",
            "score": 99.30523681640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno ? charno : CheckLevel.ERROR ) {",
            "score": 99.26520182291667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no ? char@@ no : Check CaMeL Level . ERROR ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < ) {",
            "score": 99.26094563802083,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.length( ) ==0)",
            "score": 99.2450439453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) == 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && isWhitespace( sourceExcerpt ) ) {",
            "score": 99.45907432154605,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && is CaMeL Whitespace ( source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '\\n'.length( ) >=0) {",
            "score": 99.30445861816406,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '| '.length( ) >=0) {",
            "score": 99.30445861816406,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ' '.length( ) >=0) {",
            "score": 99.30445861816406,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && '  '.length( ) >=0) {",
            "score": 99.30445861816406,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && 'bar'.length( ) >=0) {",
            "score": 99.30445861816406,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && $STRING$ . length ( ) >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) <= length ) {",
            "score": 99.26028645833334,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) <= length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( source ) ) {",
            "score": 99.24436848958334,
            "correctness": "plausible",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( source ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) *int charno ;",
            "score": 99.45740966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) * int char@@ no ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno < charno && charno < charno )",
            "score": 99.3196792602539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no < char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) !=2) {",
            "score": 99.26021321614583,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) !=11) {",
            "score": 99.26021321614583,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) !=10) {",
            "score": 99.26021321614583,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) != $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) !=9) {",
            "score": 99.26021321614583,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& sourceExcerpt.length( ) !=2007) {",
            "score": 99.26021321614583,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) != $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && false <= charno ) {",
            "score": 99.29443359375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && false <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > length( ) ) {",
            "score": 99.26201171875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& true <= sourceExcerpt.length( ) ) {",
            "score": 99.258984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& true <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno &&0< sourceExcerpt.length( ) )",
            "score": 99.45689086914062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && 0 < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno >> <= sourceExcerpt.length( ) ) {",
            "score": 99.33040125229779,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no >> <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length + charno ) {",
            "score": 99.31818704044117,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length + char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < CheckLevel.ERROR )",
            "score": 99.31562805175781,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < Check CaMeL Level . ERROR )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { &&0<= sourceExcerpt.length ) {",
            "score": 99.30294596354166,
            "correctness": "uncompilable",
            "tokenized_patch": ") { && 0 <= source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( '\\n') ) {",
            "score": 99.26080322265625,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '| ') ) {",
            "score": 99.26080322265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( ' ') ) {",
            "score": 99.26080322265625,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& excerpt.equals( '  ') ) {",
            "score": 99.26080322265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( 'bar') ) {",
            "score": 99.26080322265625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno !=1) {",
            "score": 99.2585918719952,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( line ) ) {",
            "score": 99.24156901041667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( line ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= & sourceExcerpt.length( ) ) {",
            "score": 99.31663513183594,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= & source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) ,",
            "score": 99.31489562988281,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) ,",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0: charno < sourceExcerpt.length ) {",
            "score": 99.30274963378906,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 : char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0>= charno && charno < charno ) {",
            "score": 99.29203578404018,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 >= char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& error.getCharno( )( ) ) {",
            "score": 99.2578125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0) { int charno = error.getCharno( ) ;",
            "score": 99.4564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 ) { int char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < -0) {",
            "score": 99.25571986607143,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < - 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==1) {",
            "score": 99.241162109375,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && byte < sourceExcerpt.length( ) ) {",
            "score": 99.4564453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && byte < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno - sourceExcerpt.equals( LINE ) ) {",
            "score": 99.330078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no - source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= *sourceExcerpt.length( ) ) {",
            "score": 99.31529998779297,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= * source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt [ ) ;",
            "score": 99.29134114583333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt [ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length( ) !=1) {",
            "score": 99.25655924479166,
            "correctness": "plausible",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) != 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno <1) {",
            "score": 99.25570913461539,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < sourceExcerpt.length )",
            "score": 99.24045034555289,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length( ) !=0)",
            "score": 99.4564208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) != 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < sourceExcerpt ;",
            "score": 99.34145220588235,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno <0) {",
            "score": 99.32971909466912,
            "correctness": "wrong",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charCount < sourceExcerpt.length( ) ) {",
            "score": 99.3141730813419,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char CaMeL Count < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "/ ?0: sourceExcerpt.length( ) ) {",
            "score": 99.3017349243164,
            "correctness": "uncompilable",
            "tokenized_patch": "/ ? 0 : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { ?",
            "score": 99.28994140625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { ?",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& source <= sourceExcerpt.length( ) ) {",
            "score": 99.25594889322916,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) < charno ) {",
            "score": 99.25439453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno > sourceExcerpt.length( ) )",
            "score": 99.4552490234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no > source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < parameters.length( ) ) {",
            "score": 99.31328268612133,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < parameters . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno <0)",
            "score": 99.30484008789062,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "? charno : sourceExcerpt.length( ) ) {",
            "score": 99.30142974853516,
            "correctness": "uncompilable",
            "tokenized_patch": "? char@@ no : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <=0&& charno <0) {",
            "score": 99.25475135216347,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no <= 0 && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno ) b.append( '\\n') ;",
            "score": 99.23924037388393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) b.append( '| ') ;",
            "score": 99.23924037388393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) b.append( ' ') ;",
            "score": 99.23924037388393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) b.append( '  ') ;",
            "score": 99.23924037388393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) b.append( 'bar') ;",
            "score": 99.23924037388393,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no ) b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno += sourceExcerpt.length( ) )",
            "score": 99.4544189453125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no += source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.equals( LINE ) ) {",
            "score": 99.3272705078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0.2: sourceExcerpt.length( ) ) {",
            "score": 99.31015912224265,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 . $NUMBER$ : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0.11: sourceExcerpt.length( ) ) {",
            "score": 99.31015912224265,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 . $NUMBER$ : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0.10: sourceExcerpt.length( ) ) {",
            "score": 99.31015912224265,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 . $NUMBER$ : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0.9: sourceExcerpt.length( ) ) {",
            "score": 99.31015912224265,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 . $NUMBER$ : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0.2007: sourceExcerpt.length( ) ) {",
            "score": 99.31015912224265,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 . $NUMBER$ : source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) /",
            "score": 99.28905378069196,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) /",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) return '\\n';",
            "score": 99.25445149739583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) return '| ';",
            "score": 99.25445149739583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) return ' ';",
            "score": 99.25445149739583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) return '  ';",
            "score": 99.25445149739583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) return 'bar';",
            "score": 99.25445149739583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno ) {",
            "score": 99.25232696533203,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno >2)",
            "score": 99.2392069498698,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >11)",
            "score": 99.2392069498698,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >10)",
            "score": 99.2392069498698,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >9)",
            "score": 99.2392069498698,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >2007)",
            "score": 99.2392069498698,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > $NUMBER$ )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ; ) {",
            "score": 99.30940515854779,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ; ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno : charno ) {",
            "score": 99.28854806082589,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no : char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno && ) {",
            "score": 99.25403645833333,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no && ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0>= charno ) {",
            "score": 99.24997182992789,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 >= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "|| sourceExcerpt.length( ) >0) {",
            "score": 99.238916015625,
            "correctness": "plausible",
            "tokenized_patch": "|| source CaMeL Ex@@ cer@@ pt . length ( ) > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno == && charno < sourceExcerpt.length( ) ) {",
            "score": 99.4526611328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no == && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE2< sourceExcerpt.length( ) ) {",
            "score": 99.3265609741211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE11< sourceExcerpt.length( ) ) {",
            "score": 99.3265609741211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE10< sourceExcerpt.length( ) ) {",
            "score": 99.3265609741211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE9< sourceExcerpt.length( ) ) {",
            "score": 99.3265609741211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE2007< sourceExcerpt.length( ) ) {",
            "score": 99.3265609741211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE $NUMBER$ < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && ;",
            "score": 99.30181884765625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && sourceExcerpt.length ) {",
            "score": 99.29792785644531,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < false ) {",
            "score": 99.24989536830357,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != null )",
            "score": 99.23640950520833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) &&0<= charno &&",
            "score": 99.33732604980469,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && 0 <= char@@ no &&",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno < excerpt.length( ) ) {",
            "score": 99.32627240349265,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no < ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ",0&& charno < sourceExcerpt.length ) {",
            "score": 99.29691314697266,
            "correctness": "uncompilable",
            "tokenized_patch": ", 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&( charno <0) ) {",
            "score": 99.28624674479167,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && ( char@@ no < 0 ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > n ) {",
            "score": 99.2491924579327,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > n ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& column <= sourceExcerpt.length( ) ) {",
            "score": 99.24903971354166,
            "correctness": "uncompilable",
            "tokenized_patch": "&& column <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > charno && charno < charno ) {",
            "score": 99.235791015625,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no > char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno && ! charno ) {",
            "score": 99.32617905560662,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no && ! char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < ~ sourceExcerpt.length( ) ) {",
            "score": 99.29817468979779,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < ~ source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt ) {",
            "score": 99.28617350260417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < getLevelName( warning ) ) {",
            "score": 99.2491455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < get CaMeL Level CaMeL Name ( warning ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < matches.length ) {",
            "score": 99.24759928385417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < matches . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno == false ) {",
            "score": 99.23459097055289,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) { try {",
            "score": 99.44911024305556,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) { try {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length(0) )",
            "score": 99.30001068115234,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( 0 ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && !0< charno ) {",
            "score": 99.28306361607143,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! 0 < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno > ) {",
            "score": 99.24801635742188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno >=0) {",
            "score": 99.24556187220982,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no >= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "|| charno < sourceExcerpt.length ) {",
            "score": 99.23030308314732,
            "correctness": "uncompilable",
            "tokenized_patch": "|| char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) { b.append( '\\n') ;",
            "score": 99.44832763671874,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <0) { b.append( '| ') ;",
            "score": 99.44832763671874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) { b.append( ' ') ;",
            "score": 99.44832763671874,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno <0) { b.append( '  ') ;",
            "score": 99.44832763671874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) { b.append( 'bar') ;",
            "score": 99.44832763671874,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <=0) {",
            "score": 99.28304349459134,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no <= 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& ! error.sourceName.equals( '\\n') ) {",
            "score": 99.24623209635416,
            "correctness": "plausible",
            "tokenized_patch": "&& ! error . source CaMeL Name . equals ( $STRING$ ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! error.sourceName.equals( '| ') ) {",
            "score": 99.24623209635416,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! error . source CaMeL Name . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! error.sourceName.equals( ' ') ) {",
            "score": 99.24623209635416,
            "correctness": "plausible",
            "tokenized_patch": "&& ! error . source CaMeL Name . equals ( $STRING$ ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! error.sourceName.equals( '  ') ) {",
            "score": 99.24623209635416,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! error . source CaMeL Name . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! error.sourceName.equals( 'bar') ) {",
            "score": 99.24623209635416,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! error . source CaMeL Name . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < isEmpty ) {",
            "score": 99.2455078125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < is CaMeL Empty ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < charno && sourceExcerpt.length( ) ) )",
            "score": 99.44776611328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno + sourceExcerpt.equals( LINE ) ) {",
            "score": 99.32352941176471,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no + source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& *charno < sourceExcerpt.length( ) ) {",
            "score": 99.29665240119485,
            "correctness": "uncompilable",
            "tokenized_patch": "&& * char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0< charno && false ) {",
            "score": 99.28744303385416,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && 0 < char@@ no && false ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) { ) ;",
            "score": 99.28296712239583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) { ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < index ) {",
            "score": 99.24556790865384,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < index ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0&& true ) {",
            "score": 99.24409993489583,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 && true ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno ) {",
            "score": 99.22901500355114,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt.length >0) {",
            "score": 99.44544741981908,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt . length > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.has( ) ) {",
            "score": 99.32199096679688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . has ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno <2) {",
            "score": 99.2953632061298,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno <11) {",
            "score": 99.2953632061298,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno <10) {",
            "score": 99.2953632061298,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno <9) {",
            "score": 99.2953632061298,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno <2007) {",
            "score": 99.2953632061298,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno <1) {",
            "score": 99.28741924579327,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& b.equals( '\\n') &&0<= charno ) {",
            "score": 99.245458984375,
            "correctness": "wrong",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& b.equals( '| ') &&0<= charno ) {",
            "score": 99.245458984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& b.equals( ' ') &&0<= charno ) {",
            "score": 99.245458984375,
            "correctness": "wrong",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& b.equals( '  ') &&0<= charno ) {",
            "score": 99.245458984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& b.equals( 'bar') &&0<= charno ) {",
            "score": 99.245458984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& b . equals ( $STRING$ ) && 0 <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < end( ) ) {",
            "score": 99.2426025390625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < end ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( )( ) <=0) {",
            "score": 99.29656575520833,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) ( ) <= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && ! sourceExcerpt ) {",
            "score": 99.28056640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && ! source CaMeL Ex@@ cer@@ pt ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno ==0) {",
            "score": 99.24248395647321,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no == 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno > null ) {",
            "score": 99.24203725961539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno >= charno ) {",
            "score": 99.24114583333333,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no >= char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0< charno && charno == charno ) {",
            "score": 99.22649274553571,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no == char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&( charno &&0<= sourceExcerpt.length( ) ) )",
            "score": 99.4405581825658,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! ! sourceExcerpt.equals( LINE ) ) {",
            "score": 99.31436920166016,
            "correctness": "wrong",
            "tokenized_patch": "&& ! ! source CaMeL Ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno < charno && charno != null ) {",
            "score": 99.23975481305804,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != '\\n') {",
            "score": 99.224365234375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != $STRING$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno != '| ') {",
            "score": 99.224365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != ' ') {",
            "score": 99.224365234375,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != $STRING$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno != '  ') {",
            "score": 99.224365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno != 'bar') {",
            "score": 99.224365234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no != $STRING$ ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ) throws",
            "score": 99.32858276367188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) throws",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !( excerpt.equals( LINE ) ) ) {",
            "score": 99.31434733072916,
            "correctness": "wrong",
            "tokenized_patch": "&& ! ( ex@@ cer@@ pt . equals ( LINE ) ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& ! sourceExcerpt.length( )( ) ) {",
            "score": 99.287109375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . length ( ) ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) ?",
            "score": 99.27765764508929,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) ?",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! excerpt.equals( '\\n') ) {",
            "score": 99.23911696213942,
            "correctness": "plausible",
            "tokenized_patch": "&& ! ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! excerpt.equals( '| ') ) {",
            "score": 99.23911696213942,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! excerpt.equals( ' ') ) {",
            "score": 99.23911696213942,
            "correctness": "plausible",
            "tokenized_patch": "&& ! ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& ! excerpt.equals( '  ') ) {",
            "score": 99.23911696213942,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! excerpt.equals( 'bar') ) {",
            "score": 99.23911696213942,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! ex@@ cer@@ pt . equals ( $STRING$ ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <= charno && charno < charno )",
            "score": 99.23830740792411,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no <= char@@ no && char@@ no < char@@ no )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >0) { {",
            "score": 99.22365025111607,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 0 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno < sourceExcerpt.length( )",
            "score": 99.439208984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < parameters.length ) {",
            "score": 99.23724772135417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < parameters . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2&& charno <2) {",
            "score": 99.22350135216347,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <11&& charno <11) {",
            "score": 99.22350135216347,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <10&& charno <10) {",
            "score": 99.22350135216347,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <9&& charno <9) {",
            "score": 99.22350135216347,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno <2007&& charno <2007) {",
            "score": 99.22350135216347,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno < options.length ) {",
            "score": 99.28225911458334,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < options . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && charno < charno ) {",
            "score": 99.22232759915866,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && char@@ no < char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno > sourceExcerpt.equals( LINE ) )",
            "score": 99.28707885742188,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no > source CaMeL Ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) { }",
            "score": 99.27610677083334,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno ) ;",
            "score": 99.2365966796875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if( charno &&0<= sourceExcerpt.length( ) ) {",
            "score": 99.43702456825658,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( char@@ no && 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.ERROR( ) ) {",
            "score": 99.29916381835938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . ERROR ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno < excerpt.length( ) )",
            "score": 99.28700256347656,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no < ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno < sourceExcerpt.length ) {",
            "score": 99.28094482421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no < source CaMeL Ex@@ cer@@ pt . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) ) {",
            "score": 99.23515625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0( sourceExcerpt.length( ) ) ) {",
            "score": 99.43650416324013,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 ( source CaMeL Ex@@ cer@@ pt . length ( ) ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < *sourceExcerpt.length( ) ) {",
            "score": 99.322021484375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < * source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! charno && excerpt.equals( LINE ) ) {",
            "score": 99.29820251464844,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) && )",
            "score": 99.28570556640625,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) && )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source != null ) {",
            "score": 99.27891031901042,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && source != null ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && true <= charno ) {",
            "score": 99.27492112379808,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && true <= char@@ no ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& sourceExcerpt.length <0) {",
            "score": 99.23169884314903,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno < sourceExcerpt ) ) {",
            "score": 99.23169817243304,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no < source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno && charno >0) {",
            "score": 99.22072190504808,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 != char@@ no && char@@ no > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < sourceExcerpt.length >=0) {",
            "score": 99.29705047607422,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && sourceExcerpt == ) ;",
            "score": 99.27753092447917,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source CaMeL Ex@@ cer@@ pt == ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno ) :",
            "score": 99.27443150111607,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no ) :",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2) return '\\n';",
            "score": 99.2313232421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2) return '| ';",
            "score": 99.2313232421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2) return ' ';",
            "score": 99.2313232421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2) return '  ';",
            "score": 99.2313232421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <2) return 'bar';",
            "score": 99.2313232421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < $NUMBER$ ) return $STRING$ ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& error.getCharno( ) > LINE ) {",
            "score": 99.22806222098214,
            "correctness": "uncompilable",
            "tokenized_patch": "&& error . get CaMeL Char@@ no ( ) > LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno >=2) {",
            "score": 99.22005521334134,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= $NUMBER$ ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno >=11) {",
            "score": 99.22005521334134,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >=10) {",
            "score": 99.22005521334134,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >=9) {",
            "score": 99.22005521334134,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >=2007) {",
            "score": 99.22005521334134,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no >= $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno / charno < sourceExcerpt.length( ) ) {",
            "score": 99.43002801192434,
            "correctness": "plausible",
            "tokenized_patch": "&& char@@ no / char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": ") { if( Character.isWhitespace( charno ) ) {",
            "score": 99.29547119140625,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( Character . is CaMeL Whitespace ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< charno && charno < error.length( ) )",
            "score": 99.28416442871094,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no < error . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < vars.length ) {",
            "score": 99.27701822916667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < vars . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<=0sourceExcerpt.length( ) ) {",
            "score": 99.27584075927734,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= 0 source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < names.length ) {",
            "score": 99.27399088541667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < names . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt == false ) {",
            "score": 99.21890694754464,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt == false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "if(0&& charno < sourceExcerpt.length( ) ) {",
            "score": 99.42979029605263,
            "correctness": "uncompilable",
            "tokenized_patch": "if ( 0 && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt != null )",
            "score": 99.28318786621094,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt != null )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) return null ;",
            "score": 99.23036295572916,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) return null ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0!= charno &&0<= charno ) {",
            "score": 99.2252666766827,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 != char@@ no && 0 <= char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno >1) {",
            "score": 99.2186279296875,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no > 1 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& <= charno && charno < sourceExcerpt.length( ) )",
            "score": 99.42696340460526,
            "correctness": "uncompilable",
            "tokenized_patch": "&& <= char@@ no && char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && charno < charno && ) {",
            "score": 99.31771087646484,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no && char@@ no < char@@ no && ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno && excerpt.equals( LINE ) ) {",
            "score": 99.29300944010417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no && ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0< sourceExcerpt.length( ) ) { {",
            "score": 99.2829818725586,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 < source CaMeL Ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <1&& charno <0) {",
            "score": 99.23011192908653,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 1 && char@@ no < 0 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno >1)",
            "score": 99.21303304036458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no > 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && this.sourceExcerpt.length( ) )",
            "score": 99.42484966077302,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && this . source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno && sourceExcerpt != null ) {",
            "score": 99.3164924172794,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < char@@ no && source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { if( sourceExcerpt != null ) {",
            "score": 99.29046630859375,
            "correctness": "uncompilable",
            "tokenized_patch": ") { if ( source CaMeL Ex@@ cer@@ pt != null ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0+ charno < source.length( ) ) {",
            "score": 99.22419084821429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 + char@@ no < source . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno >0) {",
            "score": 99.21253380408653,
            "correctness": "plausible",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no > 0 ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&& charno < excerpt.equals( LINE ) ) {",
            "score": 99.29010416666667,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < ex@@ cer@@ pt . equals ( LINE ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( )1)",
            "score": 99.2806167602539,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) 1 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.get( ) ) {",
            "score": 99.27000427246094,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . get ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <0) break ;",
            "score": 99.229736328125,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 0 ) break ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.length( ) >=0) {",
            "score": 99.22015850360577,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . length ( ) >= 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) ) { }",
            "score": 99.31406813401442,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) ) { }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= instanceof sourceExcerpt.length( ) ) {",
            "score": 99.26922607421875,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= instanceof source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno <1) { {",
            "score": 99.26880754743304,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < 1 ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "||0<= charno && charno < false ) {",
            "score": 99.26430100661058,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < false ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& source < sourceExcerpt.length( ) ) {",
            "score": 99.22603352864583,
            "correctness": "uncompilable",
            "tokenized_patch": "&& source < source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) )",
            "score": 99.2187969501202,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( '\\n') ; }",
            "score": 99.20840454101562,
            "correctness": "wrong",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { { b.append( '| ') ; }",
            "score": 99.20840454101562,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( ' ') ; }",
            "score": 99.20840454101562,
            "correctness": "wrong",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": ") { { b.append( '  ') ; }",
            "score": 99.20840454101562,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { { b.append( 'bar') ; }",
            "score": 99.20840454101562,
            "correctness": "uncompilable",
            "tokenized_patch": ") { { b . append ( $STRING$ ) ; }",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) ? ) {",
            "score": 99.3134406594669,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) ? ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < charno <0) {",
            "score": 99.28938293457031,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < char@@ no < 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.equals( LINE ) {",
            "score": 99.27963256835938,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . equals ( LINE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&( charno <= sourceExcerpt ) ) {",
            "score": 99.26325334821429,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ( char@@ no <= source CaMeL Ex@@ cer@@ pt ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < parts.length ) {",
            "score": 99.22435709635417,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < parts . length ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0<= charno ) { ;",
            "score": 99.21878487723214,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 <= char@@ no ) { ;",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0<= charno && charno == -1) {",
            "score": 99.20757184709821,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == - 1 ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= excerpt.equals( LINE ) )",
            "score": 99.27889310396634,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . equals ( LINE ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& ! sourceExcerpt.equals( charno ) ) {",
            "score": 99.2652587890625,
            "correctness": "plausible",
            "tokenized_patch": "&& ! source CaMeL Ex@@ cer@@ pt . equals ( char@@ no ) ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "||0<= charno && charno < source ) {",
            "score": 99.26321176382211,
            "correctness": "uncompilable",
            "tokenized_patch": "|| 0 <= char@@ no && char@@ no < source ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno &&0!= charno ) {",
            "score": 99.2174072265625,
            "correctness": "plausible",
            "tokenized_patch": "&& 0 <= char@@ no && 0 != char@@ no ) {",
            "failed_triggering": "0/2",
            "failed_non_triggering": "0"
        },
        {
            "patch": "&&0< charno && charno != charno ) {",
            "score": 99.20741489955357,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 < char@@ no && char@@ no != char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno || charno < sourceExcerpt.length( ) )",
            "score": 99.42250569661458,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no || char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { char charno = error.getCharno( ) ;",
            "score": 99.28795623779297,
            "correctness": "uncompilable",
            "tokenized_patch": ") { char char@@ no = error . get CaMeL Char@@ no ( ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& excerpt.equals( LINE ) && charno <0)",
            "score": 99.27806091308594,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ex@@ cer@@ pt . equals ( LINE ) && char@@ no < 0 )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno < options.length )",
            "score": 99.26194545200893,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < options . length )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0&& charno <2) {",
            "score": 99.22333233173077,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0&& charno <11) {",
            "score": 99.22333233173077,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0&& charno <10) {",
            "score": 99.22333233173077,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0&& charno <9) {",
            "score": 99.22333233173077,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <0&& charno <2007) {",
            "score": 99.22333233173077,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < 0 && char@@ no < $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno < SIZE ) {",
            "score": 99.21597055288461,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no < SIZE ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <0<= sourceExcerpt.length( ) )",
            "score": 99.42185345818015,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) L ) {",
            "score": 99.30963493795956,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) L ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& !0<= sourceExcerpt.length( ) )",
            "score": 99.27745768229167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&(0< charno && charno <0) ) {",
            "score": 99.2609619140625,
            "correctness": "wrong",
            "tokenized_patch": "&& ( 0 < char@@ no && char@@ no < 0 ) ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==2) {",
            "score": 99.22202962239584,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==11) {",
            "score": 99.22202962239584,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==10) {",
            "score": 99.22202962239584,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==9) {",
            "score": 99.22202962239584,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& sourceExcerpt.length( ) ==2007) {",
            "score": 99.22202962239584,
            "correctness": "wrong",
            "tokenized_patch": "&& source CaMeL Ex@@ cer@@ pt . length ( ) == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "CheckLevel.ERROR ) { b.append( '\\n') ;",
            "score": 99.30799153645833,
            "correctness": "uncompilable",
            "tokenized_patch": "Check CaMeL Level . ERROR ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "CheckLevel.ERROR ) { b.append( '| ') ;",
            "score": 99.30799153645833,
            "correctness": "uncompilable",
            "tokenized_patch": "Check CaMeL Level . ERROR ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "CheckLevel.ERROR ) { b.append( ' ') ;",
            "score": 99.30799153645833,
            "correctness": "uncompilable",
            "tokenized_patch": "Check CaMeL Level . ERROR ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "CheckLevel.ERROR ) { b.append( '  ') ;",
            "score": 99.30799153645833,
            "correctness": "uncompilable",
            "tokenized_patch": "Check CaMeL Level . ERROR ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "CheckLevel.ERROR ) { b.append( 'bar') ;",
            "score": 99.30799153645833,
            "correctness": "uncompilable",
            "tokenized_patch": "Check CaMeL Level . ERROR ) { b . append ( $STRING$ ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& end <= sourceExcerpt.length( ) ) {",
            "score": 99.2818115234375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& end <= source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < sourceExcerpt.length( ) , {",
            "score": 99.2757797241211,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < source CaMeL Ex@@ cer@@ pt . length ( ) , {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( ) ) ;",
            "score": 99.26083984375,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ) ;",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno <2&& charno < charno ) {",
            "score": 99.22196742466518,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <11&& charno < charno ) {",
            "score": 99.22196742466518,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <10&& charno < charno ) {",
            "score": 99.22196742466518,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <9&& charno < charno ) {",
            "score": 99.22196742466518,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& charno <2007&& charno < charno ) {",
            "score": 99.22196742466518,
            "correctness": "wrong",
            "tokenized_patch": "&& char@@ no < $NUMBER$ && char@@ no < char@@ no ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&& ! charno.length( ) >0) {",
            "score": 99.20187612680289,
            "correctness": "uncompilable",
            "tokenized_patch": "&& ! char@@ no . length ( ) > 0 ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& LINE != sourceExcerpt.length( ) ) {",
            "score": 99.28068033854167,
            "correctness": "uncompilable",
            "tokenized_patch": "&& LINE != source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= sourceExcerpt.length( )( ) )",
            "score": 99.27322387695312,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= source CaMeL Ex@@ cer@@ pt . length ( ) ( ) )",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&& charno < charno( charno ) ) {",
            "score": 99.2655780498798,
            "correctness": "uncompilable",
            "tokenized_patch": "&& char@@ no < char@@ no ( char@@ no ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= extends sourceExcerpt.length( ) ) {",
            "score": 99.25887298583984,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= extends source CaMeL Ex@@ cer@@ pt . length ( ) ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && source ) {",
            "score": 99.25783081054688,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= char@@ no && source ) {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": "&&0<= charno && charno ==2) {",
            "score": 99.21908804086539,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno ==11) {",
            "score": 99.21908804086539,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno ==10) {",
            "score": 99.21908804086539,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == $NUMBER$ ) {",
            "failed_triggering": "1/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno ==9) {",
            "score": 99.21908804086539,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= charno && charno ==2007) {",
            "score": 99.21908804086539,
            "correctness": "wrong",
            "tokenized_patch": "&& 0 <= char@@ no && char@@ no == $NUMBER$ ) {",
            "failed_triggering": "2/2",
            "failed_non_triggering": "2"
        },
        {
            "patch": "&&0<= excerpt.length( ) ) { {",
            "score": 99.21156529017857,
            "correctness": "uncompilable",
            "tokenized_patch": "&& 0 <= ex@@ cer@@ pt . length ( ) ) { {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        },
        {
            "patch": ") { b.append( ) ; } } else {",
            "score": 99.2006084735577,
            "correctness": "uncompilable",
            "tokenized_patch": ") { b . append ( ) ; } } else {",
            "failed_triggering": "None/2",
            "failed_non_triggering": "None"
        }
    ]
}